/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_query_block()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "libbinlogevents/include/binlog_event.h"
#include "m_ctype.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql-common/json_dom.h"
#include "sql-common/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_replica.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_connect.h"
#include "sql/sql_component.h"
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa/sql_cmd_xa.h"                   // Sql_cmd_xa...
#include "sql_chars.h"
#include "sql_string.h"
#include "thr_lock.h"
#include "violite.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)

#define CONTEXTUALIZE_VIEW(x)                           \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
    if (pc.finalize_query_expression())                                 \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef NDEBUG
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    assert(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef NDEBUG
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0 ||
      native_strcasecmp(national_charset_info->csname, "utf8mb3") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 542 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_VAR_LIB_PB2_SB_1_8441140_1663085893_78_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_VAR_LIB_PB2_SB_1_8441140_1663085893_78_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 1156,
    ZONE_SYM = 1157,
    GRAMMAR_SELECTOR_DERIVED_EXPR = 1158,
    REPLICA_SYM = 1159,
    REPLICAS_SYM = 1160,
    ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM = 1161,
    GET_SOURCE_PUBLIC_KEY_SYM = 1162,
    SOURCE_AUTO_POSITION_SYM = 1163,
    SOURCE_BIND_SYM = 1164,
    SOURCE_COMPRESSION_ALGORITHM_SYM = 1165,
    SOURCE_CONNECT_RETRY_SYM = 1166,
    SOURCE_DELAY_SYM = 1167,
    SOURCE_HEARTBEAT_PERIOD_SYM = 1168,
    SOURCE_HOST_SYM = 1169,
    SOURCE_LOG_FILE_SYM = 1170,
    SOURCE_LOG_POS_SYM = 1171,
    SOURCE_PASSWORD_SYM = 1172,
    SOURCE_PORT_SYM = 1173,
    SOURCE_PUBLIC_KEY_PATH_SYM = 1174,
    SOURCE_RETRY_COUNT_SYM = 1175,
    SOURCE_SSL_SYM = 1176,
    SOURCE_SSL_CA_SYM = 1177,
    SOURCE_SSL_CAPATH_SYM = 1178,
    SOURCE_SSL_CERT_SYM = 1179,
    SOURCE_SSL_CIPHER_SYM = 1180,
    SOURCE_SSL_CRL_SYM = 1181,
    SOURCE_SSL_CRLPATH_SYM = 1182,
    SOURCE_SSL_KEY_SYM = 1183,
    SOURCE_SSL_VERIFY_SERVER_CERT_SYM = 1184,
    SOURCE_TLS_CIPHERSUITES_SYM = 1185,
    SOURCE_TLS_VERSION_SYM = 1186,
    SOURCE_USER_SYM = 1187,
    SOURCE_ZSTD_COMPRESSION_LEVEL_SYM = 1188,
    ST_COLLECT_SYM = 1189,
    KEYRING_SYM = 1190,
    AUTHENTICATION_SYM = 1191,
    FACTOR_SYM = 1192,
    FINISH_SYM = 1193,
    INITIATE_SYM = 1194,
    REGISTRATION_SYM = 1195,
    UNREGISTER_SYM = 1196,
    INITIAL_SYM = 1197,
    CHALLENGE_RESPONSE_SYM = 1198,
    GTID_ONLY_SYM = 1199,
    INTERSECT_SYM = 1200,
    KEYWORD_USED_AS_IDENT = 1202,
    KEYWORD_USED_AS_KEYWORD = 1203,
    CONDITIONLESS_JOIN = 1204,
    SUBQUERY_AS_EXPR = 1205,
    EMPTY_FROM_CLAUSE = 1206
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define SOURCE_CONNECTION_AUTO_FAILOVER_SYM 1156
#define ZONE_SYM 1157
#define GRAMMAR_SELECTOR_DERIVED_EXPR 1158
#define REPLICA_SYM 1159
#define REPLICAS_SYM 1160
#define ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM 1161
#define GET_SOURCE_PUBLIC_KEY_SYM 1162
#define SOURCE_AUTO_POSITION_SYM 1163
#define SOURCE_BIND_SYM 1164
#define SOURCE_COMPRESSION_ALGORITHM_SYM 1165
#define SOURCE_CONNECT_RETRY_SYM 1166
#define SOURCE_DELAY_SYM 1167
#define SOURCE_HEARTBEAT_PERIOD_SYM 1168
#define SOURCE_HOST_SYM 1169
#define SOURCE_LOG_FILE_SYM 1170
#define SOURCE_LOG_POS_SYM 1171
#define SOURCE_PASSWORD_SYM 1172
#define SOURCE_PORT_SYM 1173
#define SOURCE_PUBLIC_KEY_PATH_SYM 1174
#define SOURCE_RETRY_COUNT_SYM 1175
#define SOURCE_SSL_SYM 1176
#define SOURCE_SSL_CA_SYM 1177
#define SOURCE_SSL_CAPATH_SYM 1178
#define SOURCE_SSL_CERT_SYM 1179
#define SOURCE_SSL_CIPHER_SYM 1180
#define SOURCE_SSL_CRL_SYM 1181
#define SOURCE_SSL_CRLPATH_SYM 1182
#define SOURCE_SSL_KEY_SYM 1183
#define SOURCE_SSL_VERIFY_SERVER_CERT_SYM 1184
#define SOURCE_TLS_CIPHERSUITES_SYM 1185
#define SOURCE_TLS_VERSION_SYM 1186
#define SOURCE_USER_SYM 1187
#define SOURCE_ZSTD_COMPRESSION_LEVEL_SYM 1188
#define ST_COLLECT_SYM 1189
#define KEYRING_SYM 1190
#define AUTHENTICATION_SYM 1191
#define FACTOR_SYM 1192
#define FINISH_SYM 1193
#define INITIATE_SYM 1194
#define REGISTRATION_SYM 1195
#define UNREGISTER_SYM 1196
#define INITIAL_SYM 1197
#define CHALLENGE_RESPONSE_SYM 1198
#define GTID_ONLY_SYM 1199
#define INTERSECT_SYM 1200
#define KEYWORD_USED_AS_IDENT 1202
#define KEYWORD_USED_AS_KEYWORD 1203
#define CONDITIONLESS_JOIN 1204
#define SUBQUERY_AS_EXPR 1205
#define EMPTY_FROM_CLAUSE 1206

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_VAR_LIB_PB2_SB_1_8441140_1663085893_78_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2199 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1138
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   89556

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  819
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1019
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3215
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5564

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1206

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   816,     2,     2,     2,   804,   799,     2,
     808,   809,   802,   801,   813,   800,   814,   803,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   815,   811,
       2,     2,     2,     2,   812,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   805,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   817,   798,   818,   806,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       2,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,     2,   795,   796,   797,   807,   810
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2197,  2197,  2198,  2203,  2213,  2231,  2235,  2243,  2256,
    2255,  2280,  2287,  2289,  2293,  2294,  2299,  2300,  2301,  2302,
    2303,  2304,  2305,  2306,  2307,  2308,  2309,  2310,  2311,  2312,
    2313,  2314,  2315,  2316,  2317,  2318,  2319,  2320,  2321,  2322,
    2323,  2324,  2325,  2326,  2327,  2328,  2329,  2330,  2331,  2332,
    2333,  2334,  2335,  2336,  2337,  2338,  2339,  2340,  2341,  2342,
    2343,  2344,  2345,  2346,  2347,  2348,  2349,  2350,  2351,  2352,
    2353,  2354,  2355,  2356,  2357,  2358,  2359,  2360,  2361,  2362,
    2363,  2364,  2365,  2366,  2367,  2368,  2369,  2370,  2371,  2372,
    2373,  2374,  2375,  2376,  2377,  2378,  2379,  2380,  2381,  2382,
    2383,  2384,  2385,  2386,  2387,  2388,  2389,  2390,  2391,  2392,
    2393,  2394,  2395,  2396,  2397,  2398,  2399,  2400,  2401,  2402,
    2403,  2404,  2405,  2406,  2407,  2408,  2409,  2410,  2411,  2412,
    2413,  2414,  2415,  2416,  2417,  2418,  2419,  2420,  2421,  2422,
    2423,  2424,  2425,  2426,  2427,  2428,  2429,  2430,  2431,  2432,
    2433,  2437,  2447,  2448,  2452,  2472,  2479,  2490,  2489,  2500,
    2502,  2506,  2507,  2511,  2524,  2523,  2542,  2547,  2552,  2551,
    2568,  2567,  2585,  2586,  2589,  2596,  2603,  2610,  2617,  2624,
    2632,  2641,  2647,  2654,  2661,  2669,  2678,  2684,  2690,  2698,
    2706,  2712,  2719,  2726,  2734,  2746,  2752,  2759,  2766,  2774,
    2784,  2785,  2789,  2795,  2799,  2804,  2808,  2814,  2818,  2823,
    2827,  2832,  2836,  2841,  2845,  2850,  2854,  2859,  2863,  2868,
    2872,  2877,  2881,  2886,  2890,  2895,  2899,  2904,  2908,  2913,
    2917,  2922,  2926,  2931,  2935,  2940,  2944,  2949,  2953,  2958,
    2962,  2967,  2971,  2976,  2980,  2985,  2989,  2994,  2998,  3003,
    3007,  3012,  3016,  3020,  3024,  3028,  3032,  3042,  3046,  3050,
    3055,  3066,  3071,  3075,  3079,  3083,  3084,  3088,  3092,  3096,
    3101,  3105,  3109,  3113,  3119,  3153,  3157,  3161,  3165,  3171,
    3172,  3188,  3189,  3205,  3206,  3223,  3226,  3228,  3229,  3233,
    3239,  3245,  3254,  3258,  3262,  3269,  3273,  3277,  3291,  3296,
    3304,  3309,  3313,  3318,  3322,  3326,  3342,  3346,  3357,  3358,
    3363,  3373,  3383,  3388,  3396,  3403,  3416,  3415,  3430,  3432,
    3445,  3465,  3484,  3504,  3521,  3526,  3535,  3540,  3552,  3564,
    3578,  3594,  3598,  3605,  3614,  3622,  3633,  3634,  3638,  3642,
    3646,  3650,  3654,  3659,  3663,  3671,  3670,  3702,  3701,  3710,
    3719,  3720,  3726,  3732,  3742,  3748,  3756,  3758,  3767,  3768,
    3772,  3778,  3787,  3788,  3796,  3796,  3854,  3855,  3856,  3857,
    3858,  3859,  3860,  3861,  3862,  3863,  3864,  3865,  3866,  3870,
    3884,  3903,  3904,  3908,  3909,  3914,  3916,  3918,  3920,  3922,
    3924,  3926,  3932,  3933,  3934,  3938,  3942,  3949,  3956,  3957,
    3964,  3966,  3970,  3971,  3975,  4026,  4028,  4032,  4033,  4037,
    4087,  4088,  4089,  4090,  4094,  4095,  4099,  4100,  4105,  4108,
    4132,  4231,  4249,  4248,  4327,  4323,  4400,  4401,  4406,  4408,
    4413,  4436,  4447,  4451,  4473,  4474,  4478,  4482,  4495,  4501,
    4507,  4516,  4529,  4555,  4561,  4562,  4568,  4569,  4574,  4580,
    4593,  4595,  4597,  4603,  4605,  4607,  4609,  4611,  4613,  4615,
    4617,  4619,  4621,  4623,  4625,  4630,  4644,  4661,  4662,  4664,
    4669,  4675,  4684,  4690,  4699,  4707,  4735,  4743,  4745,  4754,
    4759,  4765,  4774,  4782,  4784,  4786,  4788,  4790,  4792,  4794,
    4796,  4798,  4800,  4802,  4804,  4806,  4811,  4831,  4855,  4859,
    4867,  4868,  4869,  4870,  4871,  4872,  4873,  4874,  4875,  4876,
    4877,  4878,  4879,  4884,  4883,  4894,  4894,  4959,  4958,  5015,
    5015,  5037,  5094,  5141,  5165,  5164,  5189,  5211,  5213,  5214,
    5218,  5236,  5257,  5265,  5303,  5257,  5331,  5333,  5334,  5338,
    5339,  5344,  5354,  5343,  5406,  5405,  5419,  5420,  5424,  5425,
    5430,  5438,  5429,  5488,  5496,  5487,  5542,  5555,  5560,  5559,
    5597,  5598,  5603,  5602,  5636,  5636,  5655,  5654,  5702,  5717,
    5725,  5716,  5783,  5791,  5780,  5833,  5835,  5840,  5842,  5844,
    5859,  5860,  5867,  5868,  5875,  5876,  5880,  5886,  5895,  5896,
    5897,  5898,  5899,  5900,  5901,  5902,  5903,  5904,  5905,  5909,
    5910,  5914,  5920,  5929,  5930,  5931,  5932,  5933,  5934,  5935,
    5939,  5940,  5944,  5950,  5959,  5963,  5964,  5968,  5974,  5983,
    5984,  5985,  5986,  5987,  5988,  5989,  5993,  5994,  5998,  6004,
    6013,  6014,  6015,  6019,  6023,  6024,  6028,  6032,  6039,  6046,
    6050,  6057,  6064,  6071,  6078,  6085,  6092,  6099,  6106,  6110,
    6117,  6124,  6131,  6132,  6207,  6213,  6217,  6222,  6227,  6233,
    6241,  6251,  6252,  6266,  6274,  6278,  6282,  6286,  6290,  6294,
    6301,  6302,  6307,  6308,  6326,  6327,  6339,  6340,  6345,  6354,
    6355,  6360,  6366,  6376,  6377,  6389,  6390,  6394,  6400,  6409,
    6418,  6421,  6426,  6434,  6435,  6439,  6443,  6450,  6457,  6467,
    6466,  6484,  6490,  6499,  6500,  6505,  6506,  6510,  6516,  6525,
    6532,  6533,  6537,  6543,  6552,  6554,  6556,  6558,  6560,  6562,
    6564,  6566,  6575,  6576,  6580,  6581,  6602,  6603,  6607,  6608,
    6612,  6617,  6622,  6637,  6638,  6642,  6648,  6657,  6663,  6671,
    6673,  6677,  6681,  6685,  6689,  6693,  6697,  6710,  6714,  6718,
    6722,  6726,  6730,  6734,  6738,  6742,  6760,  6764,  6768,  6772,
    6776,  6780,  6784,  6788,  6792,  6796,  6800,  6804,  6808,  6812,
    6816,  6820,  6834,  6838,  6842,  6846,  6853,  6867,  6871,  6875,
    6879,  6883,  6884,  6885,  6886,  6887,  6888,  6892,  6893,  6894,
    6898,  6899,  6900,  6901,  6905,  6911,  6920,  6921,  6925,  6932,
    6933,  6941,  6947,  6953,  6958,  6968,  6976,  6984,  6988,  6989,
    6993,  6994,  6998,  6999,  7003,  7007,  7011,  7032,  7034,  7038,
    7039,  7040,  7044,  7048,  7052,  7056,  7060,  7064,  7068,  7072,
    7077,  7082,  7091,  7100,  7104,  7108,  7113,  7122,  7126,  7149,
    7153,  7157,  7161,  7165,  7169,  7173,  7174,  7178,  7182,  7186,
    7191,  7196,  7201,  7206,  7211,  7215,  7219,  7224,  7228,  7235,
    7237,  7239,  7241,  7243,  7245,  7247,  7249,  7254,  7255,  7259,
    7260,  7264,  7265,  7266,  7267,  7268,  7272,  7273,  7274,  7275,
    7276,  7280,  7285,  7289,  7291,  7295,  7296,  7297,  7298,  7303,
    7307,  7316,  7320,  7325,  7329,  7338,  7339,  7343,  7344,  7345,
    7353,  7354,  7358,  7362,  7366,  7367,  7368,  7377,  7378,  7379,
    7380,  7383,  7384,  7389,  7393,  7397,  7398,  7402,  7421,  7440,
    7444,  7448,  7452,  7456,  7460,  7464,  7468,  7472,  7476,  7480,
    7484,  7488,  7492,  7496,  7500,  7509,  7514,  7527,  7531,  7535,
    7542,  7543,  7544,  7548,  7549,  7550,  7554,  7560,  7564,  7568,
    7569,  7573,  7582,  7586,  7587,  7591,  7600,  7604,  7605,  7609,
    7615,  7619,  7620,  7624,  7625,  7630,  7634,  7639,  7647,  7656,
    7663,  7674,  7678,  7683,  7688,  7693,  7700,  7706,  7717,  7718,
    7726,  7725,  7737,  7739,  7743,  7758,  7759,  7763,  7770,  7780,
    7781,  7782,  7783,  7788,  7792,  7797,  7802,  7808,  7817,  7818,
    7819,  7820,  7821,  7825,  7826,  7830,  7831,  7835,  7836,  7840,
    7841,  7842,  7846,  7847,  7851,  7852,  7856,  7862,  7871,  7872,
    7886,  7887,  7891,  7897,  7906,  7910,  7911,  7915,  7921,  7930,
    7931,  7936,  7937,  7941,  7945,  7949,  7973,  7974,  7975,  7979,
    7980,  7984,  7985,  7989,  7990,  7994,  7995,  7996,  8000,  8006,
    8016,  8022,  8037,  8043,  8053,  8054,  8063,  8064,  8068,  8074,
    8086,  8096,  8110,  8109,  8130,  8129,  8151,  8150,  8172,  8171,
    8190,  8184,  8207,  8206,  8242,  8264,  8283,  8303,  8311,  8333,
    8357,  8368,  8371,  8383,  8395,  8400,  8412,  8424,  8435,  8442,
    8450,  8451,  8455,  8465,  8475,  8480,  8487,  8496,  8497,  8501,
    8502,  8506,  8512,  8518,  8526,  8541,  8549,  8557,  8564,  8571,
    8578,  8585,  8591,  8597,  8603,  8615,  8627,  8636,  8637,  8641,
    8642,  8646,  8652,  8658,  8664,  8673,  8686,  8687,  8688,  8689,
    8693,  8694,  8706,  8707,  8711,  8712,  8716,  8717,  8732,  8737,
    8745,  8749,  8757,  8761,  8766,  8767,  8776,  8780,  8791,  8795,
    8799,  8803,  8807,  8812,  8817,  8822,  8827,  8834,  8838,  8842,
    8846,  8851,  8856,  8861,  8866,  8870,  8877,  8878,  8882,  8886,
    8893,  8894,  8902,  8909,  8914,  8918,  8923,  8934,  8935,  8943,
    8947,  8951,  8955,  8959,  8963,  8968,  8972,  8976,  8980,  8984,
    8988,  8992,  8996,  9000,  9004,  9009,  9013,  9017,  9021,  9025,
    9029,  9033,  9037,  9041,  9047,  9051,  9058,  9063,  9068,  9076,
    9077,  9082,  9087,  9093,  9102,  9106,  9110,  9127,  9131,  9135,
    9151,  9153,  9157,  9158,  9162,  9163,  9164,  9168,  9169,  9170,
    9174,  9175,  9176,  9177,  9181,  9182,  9190,  9198,  9200,  9204,
    9205,  9209,  9210,  9211,  9215,  9227,  9240,  9247,  9248,  9252,
    9267,  9282,  9266,  9306,  9323,  9326,  9333,  9337,  9344,  9348,
    9352,  9359,  9362,  9369,  9372,  9379,  9382,  9389,  9392,  9400,
    9403,  9410,  9414,  9421,  9425,  9433,  9437,  9462,  9463,  9464,
    9469,  9474,  9481,  9495,  9496,  9497,  9501,  9510,  9511,  9515,
    9516,  9524,  9525,  9526,  9530,  9547,  9551,  9567,  9576,  9581,
    9590,  9600,  9608,  9616,  9617,  9621,  9622,  9630,  9632,  9634,
    9636,  9638,  9640,  9645,  9652,  9653,  9654,  9659,  9658,  9664,
    9671,  9676,  9684,  9685,  9689,  9702,  9706,  9715,  9721,  9730,
    9737,  9738,  9742,  9747,  9754,  9760,  9769,  9776,  9783,  9784,
    9794,  9795,  9799,  9803,  9808,  9844,  9848,  9852,  9856,  9895,
    9901,  9911,  9915,  9919,  9924,  9929,  9937,  9938,  9942,  9947,
    9951,  9963,  9985, 10009, 10010, 10014, 10018, 10019, 10023, 10029,
   10038, 10045, 10057, 10060, 10064, 10069, 10073, 10077, 10086, 10092,
   10101, 10105, 10109, 10116, 10117, 10121, 10125, 10126, 10130, 10131,
   10135, 10141, 10147, 10157, 10158, 10166, 10167, 10168, 10169, 10170,
   10174, 10175, 10180, 10186, 10191, 10197, 10201, 10205, 10209, 10213,
   10217, 10221, 10225, 10229, 10233, 10237, 10241, 10254, 10258, 10262,
   10267, 10271, 10278, 10282, 10291, 10295, 10299, 10303, 10311, 10315,
   10319, 10324, 10329, 10337, 10345, 10349, 10350, 10354, 10358, 10362,
   10366, 10370, 10374, 10378, 10382, 10386, 10390, 10394, 10398, 10402,
   10406, 10410, 10414, 10415, 10419, 10420, 10427, 10428, 10432, 10433,
   10437, 10438, 10439, 10440, 10441, 10442, 10443, 10447, 10448, 10452,
   10453, 10454, 10455, 10456, 10457, 10461, 10462, 10463, 10464, 10465,
   10466, 10467, 10471, 10475, 10479, 10483, 10487, 10491, 10492, 10496,
   10500, 10504, 10508, 10512, 10517, 10521, 10525, 10533, 10537, 10541,
   10545, 10549, 10553, 10558, 10565, 10576, 10577, 10587, 10591, 10595,
   10599, 10603, 10607, 10611, 10615, 10619, 10623, 10630, 10634, 10638,
   10642, 10646, 10650, 10654, 10658, 10662, 10667, 10672, 10677, 10681,
   10685, 10689, 10693, 10698, 10702, 10721, 10725, 10729, 10733, 10737,
   10742, 10747, 10751, 10755, 10760, 10764, 10768, 10772, 10776, 10780,
   10784, 10788, 10793, 10797, 10801, 10805, 10809, 10820, 10823, 10834,
   10838, 10842, 10846, 10850, 10854, 10858, 10862, 10866, 10870, 10874,
   10878, 10882, 10886, 10890, 10894, 10898, 10902, 10906, 10910, 10914,
   10918, 10922, 10926, 10932, 10938, 10944, 10950, 10956, 10960, 10978,
   10982, 10989, 10991, 11004, 11005, 11009, 11010, 11014, 11015, 11019,
   11025, 11034, 11041, 11042, 11046, 11050, 11054, 11058, 11062, 11072,
   11082, 11086, 11090, 11094, 11098, 11102, 11106, 11115, 11119, 11123,
   11127, 11131, 11135, 11139, 11143, 11147, 11151, 11161, 11165, 11169,
   11173, 11177, 11181, 11185, 11196, 11207, 11211, 11215, 11228, 11232,
   11244, 11245, 11249, 11250, 11251, 11256, 11259, 11267, 11270, 11274,
   11283, 11286, 11290, 11298, 11301, 11308, 11315, 11319, 11326, 11333,
   11340, 11361, 11364, 11372, 11375, 11383, 11386, 11394, 11397, 11406,
   11411, 11418, 11422, 11426, 11430, 11434, 11441, 11448, 11452, 11456,
   11460, 11464, 11472, 11475, 11479, 11483, 11487, 11493, 11494, 11495,
   11499, 11506, 11516, 11520, 11528, 11529, 11534, 11539, 11543, 11544,
   11548, 11553, 11563, 11570, 11577, 11596, 11604, 11611, 11618, 11625,
   11632, 11639, 11646, 11653, 11660, 11667, 11674, 11682, 11689, 11696,
   11703, 11710, 11717, 11724, 11731, 11741, 11742, 11746, 11752, 11761,
   11762, 11766, 11772, 11781, 11782, 11786, 11787, 11791, 11799, 11808,
   11809, 11810, 11823, 11824, 11905, 11909, 11914, 11918, 11922, 11932,
   11939, 11940, 11941, 11945, 11946, 11947, 11948, 11951, 11952, 11955,
   11957, 11960, 11962, 11970, 11971, 11975, 12004, 12005, 12006, 12007,
   12009, 12011, 12015, 12016, 12025, 12026, 12030, 12037, 12038, 12042,
   12055, 12066, 12082, 12089, 12095, 12104, 12108, 12118, 12125, 12128,
   12139, 12143, 12148, 12153, 12162, 12163, 12174, 12177, 12180, 12184,
   12188, 12196, 12199, 12200, 12201, 12205, 12206, 12210, 12216, 12225,
   12226, 12234, 12235, 12239, 12244, 12250, 12254, 12260, 12269, 12275,
   12283, 12287, 12296, 12308, 12309, 12310, 12311, 12312, 12313, 12314,
   12315, 12316, 12317, 12318, 12319, 12323, 12324, 12325, 12326, 12327,
   12328, 12329, 12330, 12331, 12335, 12336, 12337, 12338, 12341, 12343,
   12347, 12348, 12351, 12353, 12357, 12358, 12362, 12366, 12367, 12374,
   12378, 12385, 12390, 12399, 12416, 12424, 12431, 12437, 12447, 12450,
   12457, 12463, 12472, 12486, 12487, 12494, 12499, 12510, 12511, 12526,
   12531, 12541, 12548, 12549, 12553, 12560, 12565, 12575, 12576, 12580,
   12581, 12585, 12586, 12590, 12597, 12603, 12609, 12618, 12622, 12626,
   12630, 12634, 12641, 12642, 12646, 12647, 12648, 12649, 12650, 12651,
   12655, 12656, 12657, 12658, 12659, 12663, 12664, 12665, 12666, 12667,
   12671, 12672, 12673, 12674, 12675, 12679, 12684, 12685, 12689, 12695,
   12704, 12708, 12715, 12722, 12728, 12732, 12740, 12753, 12769, 12778,
   12788, 12811, 12846, 12853, 12868, 12878, 12893, 12902, 12913, 12933,
   12955, 12978, 12986, 12993, 13000, 13006, 13015, 13021, 13030, 13031,
   13035, 13036, 13040, 13041, 13045, 13046, 13050, 13056, 13065, 13066,
   13073, 13093, 13113, 13131, 13144, 13161, 13177, 13178, 13179, 13188,
   13192, 13193, 13204, 13206, 13210, 13215, 13220, 13228, 13233, 13238,
   13246, 13252, 13261, 13268, 13269, 13276, 13277, 13281, 13286, 13296,
   13301, 13310, 13311, 13314, 13316, 13320, 13324, 13329, 13334, 13338,
   13344, 13353, 13354, 13362, 13366, 13380, 13384, 13393, 13410, 13411,
   13415, 13422, 13434, 13442, 13443, 13449, 13462, 13472, 13485, 13487,
   13491, 13492, 13496, 13497, 13498, 13502, 13508, 13510, 13514, 13515,
   13519, 13520, 13524, 13525, 13526, 13527, 13528, 13529, 13530, 13531,
   13532, 13536, 13537, 13549, 13555, 13562, 13569, 13576, 13583, 13590,
   13597, 13604, 13611, 13618, 13635, 13642, 13649, 13656, 13663, 13671,
   13688, 13695, 13702, 13709, 13716, 13723, 13734, 13741, 13748, 13755,
   13762, 13769, 13776, 13783, 13787, 13791, 13798, 13805, 13812, 13819,
   13826, 13835, 13842, 13849, 13856, 13863, 13870, 13877, 13884, 13891,
   13898, 13899, 13903, 13904, 13907, 13909, 13913, 13914, 13918, 13919,
   13923, 13924, 13928, 13929, 13930, 13931, 13935, 13936, 13940, 13941,
   13945, 13946, 13950, 13951, 13952, 13957, 13964, 13971, 13972, 13973,
   13974, 13975, 13976, 13983, 13984, 13989, 13992, 14008, 14028, 14038,
   14039, 14044, 14052, 14051, 14064, 14063, 14077, 14081, 14082, 14095,
   14094, 14117, 14118, 14123, 14125, 14127, 14129, 14131, 14133, 14139,
   14141, 14143, 14145, 14147, 14149, 14154, 14155, 14160, 14159, 14166,
   14176, 14177, 14182, 14187, 14197, 14196, 14208, 14207, 14215, 14214,
   14234, 14235, 14239, 14240, 14255, 14254, 14265, 14269, 14273, 14287,
   14299, 14300, 14301, 14307, 14318, 14357, 14358, 14362, 14363, 14367,
   14368, 14369, 14373, 14374, 14378, 14379, 14383, 14384, 14388, 14393,
   14397, 14402, 14408, 14413, 14421, 14422, 14426, 14431, 14435, 14440,
   14448, 14449, 14453, 14454, 14458, 14459, 14463, 14464, 14465, 14469,
   14475, 14484, 14485, 14492, 14493, 14497, 14505, 14525, 14546, 14551,
   14557, 14562, 14570, 14577, 14584, 14594, 14613, 14614, 14615, 14625,
   14626, 14630, 14645, 14646, 14647, 14648, 14652, 14656, 14660, 14664,
   14668, 14675, 14676, 14680, 14681, 14685, 14696, 14697, 14698, 14703,
   14707, 14711, 14718, 14719, 14728, 14729, 14733, 14737, 14747, 14754,
   14761, 14765, 14769, 14773, 14777, 14781, 14790, 14796, 14807, 14813,
   14824, 14825, 14855, 14868, 14881, 14897, 14913, 14930, 14934, 14935,
   14942, 14958, 14959, 14970, 14971, 14981, 14982, 14993, 14994, 15004,
   15005, 15006, 15010, 15011, 15012, 15016, 15021, 15029, 15033, 15046,
   15051, 15059, 15083, 15084, 15085, 15086, 15087, 15094, 15095, 15096,
   15103, 15104, 15105, 15106, 15107, 15108, 15109, 15110, 15111, 15112,
   15113, 15114, 15115, 15116, 15117, 15118, 15119, 15120, 15121, 15122,
   15123, 15124, 15125, 15126, 15127, 15128, 15129, 15130, 15131, 15132,
   15133, 15134, 15135, 15136, 15137, 15152, 15153, 15154, 15161, 15162,
   15163, 15164, 15165, 15166, 15167, 15168, 15169, 15177, 15178, 15179,
   15180, 15181, 15182, 15183, 15184, 15185, 15186, 15187, 15188, 15189,
   15190, 15191, 15192, 15193, 15194, 15195, 15196, 15197, 15198, 15199,
   15200, 15201, 15202, 15203, 15204, 15205, 15206, 15207, 15208, 15209,
   15210, 15211, 15212, 15213, 15214, 15215, 15216, 15217, 15218, 15219,
   15220, 15221, 15222, 15223, 15224, 15225, 15226, 15227, 15228, 15229,
   15230, 15231, 15232, 15233, 15234, 15235, 15236, 15237, 15238, 15239,
   15240, 15241, 15242, 15243, 15244, 15245, 15246, 15247, 15248, 15249,
   15250, 15251, 15252, 15253, 15254, 15255, 15256, 15257, 15258, 15259,
   15260, 15261, 15262, 15263, 15264, 15265, 15266, 15267, 15268, 15269,
   15270, 15271, 15272, 15273, 15274, 15275, 15276, 15277, 15278, 15279,
   15280, 15281, 15282, 15283, 15284, 15285, 15286, 15287, 15288, 15289,
   15290, 15291, 15292, 15293, 15294, 15295, 15296, 15297, 15298, 15299,
   15300, 15301, 15302, 15303, 15304, 15305, 15306, 15307, 15308, 15309,
   15310, 15311, 15312, 15313, 15314, 15315, 15316, 15317, 15318, 15319,
   15320, 15321, 15322, 15323, 15324, 15325, 15326, 15327, 15328, 15329,
   15330, 15331, 15332, 15333, 15334, 15335, 15336, 15337, 15338, 15339,
   15340, 15341, 15342, 15343, 15344, 15345, 15346, 15347, 15348, 15349,
   15350, 15351, 15352, 15353, 15354, 15355, 15356, 15357, 15358, 15359,
   15360, 15361, 15362, 15363, 15364, 15365, 15366, 15367, 15368, 15369,
   15370, 15371, 15372, 15373, 15374, 15375, 15376, 15377, 15378, 15379,
   15380, 15381, 15382, 15383, 15384, 15385, 15386, 15387, 15388, 15389,
   15390, 15391, 15392, 15393, 15394, 15395, 15396, 15397, 15398, 15399,
   15400, 15401, 15402, 15403, 15404, 15405, 15406, 15407, 15408, 15409,
   15410, 15411, 15412, 15413, 15414, 15415, 15416, 15417, 15418, 15419,
   15420, 15421, 15422, 15423, 15424, 15425, 15426, 15427, 15428, 15429,
   15430, 15431, 15432, 15433, 15434, 15435, 15436, 15437, 15438, 15439,
   15440, 15441, 15442, 15443, 15444, 15445, 15446, 15447, 15448, 15449,
   15450, 15451, 15452, 15453, 15454, 15455, 15456, 15457, 15458, 15459,
   15460, 15461, 15462, 15463, 15464, 15465, 15466, 15467, 15468, 15469,
   15470, 15471, 15472, 15473, 15474, 15475, 15476, 15477, 15478, 15479,
   15480, 15481, 15482, 15483, 15484, 15485, 15486, 15487, 15488, 15489,
   15490, 15491, 15492, 15493, 15494, 15495, 15496, 15497, 15498, 15499,
   15500, 15501, 15502, 15503, 15504, 15505, 15506, 15507, 15508, 15509,
   15510, 15511, 15512, 15513, 15514, 15515, 15516, 15517, 15518, 15519,
   15520, 15521, 15522, 15523, 15524, 15525, 15526, 15527, 15528, 15529,
   15530, 15531, 15532, 15533, 15534, 15535, 15536, 15537, 15538, 15539,
   15540, 15541, 15542, 15543, 15544, 15545, 15546, 15547, 15548, 15549,
   15550, 15551, 15552, 15553, 15554, 15555, 15556, 15557, 15558, 15559,
   15560, 15561, 15562, 15563, 15564, 15565, 15566, 15567, 15568, 15569,
   15570, 15571, 15572, 15573, 15574, 15575, 15576, 15577, 15578, 15579,
   15580, 15581, 15582, 15583, 15584, 15585, 15586, 15587, 15588, 15589,
   15590, 15591, 15592, 15593, 15594, 15595, 15596, 15597, 15598, 15599,
   15600, 15612, 15613, 15614, 15626, 15627, 15628, 15629, 15638, 15639,
   15640, 15641, 15642, 15653, 15662, 15666, 15670, 15674, 15681, 15689,
   15697, 15709, 15713, 15718, 15723, 15728, 15733, 15738, 15746, 15747,
   15751, 15755, 15762, 15768, 15777, 15782, 15789, 15799, 15800, 15805,
   15809, 15817, 15821, 15825, 15826, 15827, 15828, 15829, 15833, 15834,
   15835, 15836, 15840, 15841, 15842, 15843, 15847, 15848, 15849, 15850,
   15851, 15852, 15857, 15866, 15870, 15874, 15880, 15884, 15891, 15895,
   15902, 15906, 15919, 15926, 15930, 15942, 15946, 15953, 15960, 15961,
   15965, 15972, 15973, 15977, 15978, 15982, 15983, 15984, 15985, 15989,
   15990, 15991, 15995, 15999, 16003, 16007, 16017, 16016, 16029, 16039,
   16040, 16044, 16045, 16049, 16077, 16078, 16079, 16084, 16089, 16088,
   16101, 16112, 16120, 16127, 16134, 16150, 16154, 16158, 16161, 16164,
   16179, 16194, 16204, 16208, 16212, 16221, 16232, 16248, 16249, 16253,
   16254, 16255, 16256, 16260, 16261, 16262, 16263, 16264, 16270, 16277,
   16295, 16294, 16315, 16322, 16335, 16340, 16357, 16356, 16373, 16386,
   16387, 16388, 16389, 16392, 16394, 16398, 16404, 16413, 16420, 16422,
   16424, 16426, 16428, 16430, 16432, 16434, 16436, 16438, 16440, 16442,
   16444, 16446, 16448, 16450, 16452, 16457, 16459, 16473, 16475, 16477,
   16479, 16481, 16483, 16485, 16487, 16489, 16491, 16493, 16495, 16497,
   16499, 16504, 16505, 16508, 16510, 16514, 16515, 16519, 16529, 16539,
   16552, 16566, 16578, 16590, 16602, 16619, 16625, 16634, 16640, 16649,
   16650, 16654, 16655, 16659, 16669, 16678, 16692, 16699, 16713, 16722,
   16723, 16728, 16737, 16738, 16739, 16740, 16741, 16742, 16746, 16759,
   16773, 16787, 16801, 16816, 16831, 16837, 16843, 16852, 16863, 16874,
   16881, 16888, 16899, 16906, 16913, 16920, 16928, 16934, 16942, 16959,
   16967, 16981, 16992, 17015, 17029, 17034, 17042, 17047, 17055, 17056,
   17060, 17066, 17074, 17076, 17080, 17084, 17088, 17095, 17096, 17101,
   17102, 17106, 17107, 17111, 17116, 17118, 17123, 17124, 17132, 17131,
   17141, 17142, 17147, 17148, 17149, 17154, 17155, 17156, 17160, 17161,
   17165, 17177, 17186, 17196, 17205, 17219, 17220, 17221, 17225, 17229,
   17233, 17240, 17241, 17242, 17243, 17244, 17245, 17246, 17252, 17263,
   17272, 17274, 17276, 17281, 17282, 17283, 17284, 17285, 17289, 17290,
   17291, 17292, 17293, 17294, 17304, 17305, 17310, 17323, 17336, 17338,
   17340, 17345, 17350, 17352, 17354, 17360, 17361, 17363, 17369, 17368,
   17408, 17459, 17460, 17461, 17462, 17472, 17474, 17480, 17485, 17504,
   17493, 17572, 17606, 17646, 17672, 17678, 17719, 17642, 17787, 17808,
   17813, 17821, 17784, 17842, 17847, 17852, 17857, 17862, 17867, 17875,
   17876, 17879, 17888, 17898, 17916, 17917, 17921, 17922, 17923, 17927,
   17928, 17933, 17934, 17936, 17941, 17947, 17956, 17962, 17971, 17977,
   17986, 18003, 18012, 18034, 18038, 18046, 18049, 18053, 18060, 18061,
   18066, 18072, 18076, 18083, 18093, 18100, 18113, 18114, 18118, 18119,
   18127, 18128, 18133, 18141, 18142, 18147
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM",
  "GET_SOURCE_PUBLIC_KEY_SYM", "SOURCE_AUTO_POSITION_SYM",
  "SOURCE_BIND_SYM", "SOURCE_COMPRESSION_ALGORITHM_SYM",
  "SOURCE_CONNECT_RETRY_SYM", "SOURCE_DELAY_SYM",
  "SOURCE_HEARTBEAT_PERIOD_SYM", "SOURCE_HOST_SYM", "SOURCE_LOG_FILE_SYM",
  "SOURCE_LOG_POS_SYM", "SOURCE_PASSWORD_SYM", "SOURCE_PORT_SYM",
  "SOURCE_PUBLIC_KEY_PATH_SYM", "SOURCE_RETRY_COUNT_SYM", "SOURCE_SSL_SYM",
  "SOURCE_SSL_CA_SYM", "SOURCE_SSL_CAPATH_SYM", "SOURCE_SSL_CERT_SYM",
  "SOURCE_SSL_CIPHER_SYM", "SOURCE_SSL_CRL_SYM", "SOURCE_SSL_CRLPATH_SYM",
  "SOURCE_SSL_KEY_SYM", "SOURCE_SSL_VERIFY_SERVER_CERT_SYM",
  "SOURCE_TLS_CIPHERSUITES_SYM", "SOURCE_TLS_VERSION_SYM",
  "SOURCE_USER_SYM", "SOURCE_ZSTD_COMPRESSION_LEVEL_SYM", "ST_COLLECT_SYM",
  "KEYRING_SYM", "AUTHENTICATION_SYM", "FACTOR_SYM", "FINISH_SYM",
  "INITIATE_SYM", "REGISTRATION_SYM", "UNREGISTER_SYM", "INITIAL_SYM",
  "CHALLENGE_RESPONSE_SYM", "GTID_ONLY_SYM", "INTERSECT_SYM",
  "KEYWORD_USED_AS_IDENT", "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN",
  "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'",
  "SUBQUERY_AS_EXPR", "'('", "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'",
  "','", "'.'", "':'", "'!'", "'{'", "'}'", "$accept", "start_entry",
  "sql_statement", "$@1", "opt_end_of_input", "simple_statement_or_begin",
  "simple_statement", "deallocate", "deallocate_or_drop", "prepare",
  "prepare_src", "execute", "$@2", "execute_using", "execute_var_list",
  "execute_var_ident", "help", "$@3", "change_replication_source",
  "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "source_defs", "change_replication_source_auto_position",
  "change_replication_source_host", "change_replication_source_bind",
  "change_replication_source_user", "change_replication_source_password",
  "change_replication_source_port",
  "change_replication_source_connect_retry",
  "change_replication_source_retry_count",
  "change_replication_source_delay", "change_replication_source_ssl",
  "change_replication_source_ssl_ca",
  "change_replication_source_ssl_capath",
  "change_replication_source_ssl_cipher",
  "change_replication_source_ssl_crl",
  "change_replication_source_ssl_crlpath",
  "change_replication_source_ssl_key",
  "change_replication_source_ssl_verify_server_cert",
  "change_replication_source_tls_version",
  "change_replication_source_tls_ciphersuites",
  "change_replication_source_ssl_cert",
  "change_replication_source_public_key",
  "change_replication_source_get_source_public_key",
  "change_replication_source_heartbeat_period",
  "change_replication_source_compression_algorithm",
  "change_replication_source_zstd_compression_level", "source_def",
  "ignore_server_id_list", "ignore_server_id", "privilege_check_def",
  "table_primary_key_check_def",
  "assign_gtids_to_anonymous_transactions_def",
  "source_tls_ciphersuites_def", "source_log_file", "source_log_pos",
  "source_file_def", "opt_channel", "create_table_stmt",
  "create_role_stmt", "create_resource_group_stmt", "create", "$@6",
  "create_srs_stmt", "srs_attributes", "default_role_clause",
  "create_index_stmt", "server_options_list", "server_option",
  "event_tail", "$@7", "ev_schedule_time", "$@8", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call_stmt", "opt_paren_expr_list", "sp_fdparam_list",
  "sp_fdparams", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@10", "$@11", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "sp_proc_stmt", "sp_proc_stmt_if", "$@12", "sp_proc_stmt_statement",
  "$@13", "sp_proc_stmt_return", "$@14", "sp_proc_stmt_unlabeled", "$@15",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@17", "$@18", "$@19", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@20", "$@21",
  "searched_case_stmt", "$@22", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@23", "$@24",
  "searched_when_clause", "$@25", "$@26", "else_clause_opt",
  "sp_labeled_control", "$@27", "sp_opt_label", "sp_labeled_block", "$@28",
  "sp_unlabeled_block", "$@29", "sp_block_content", "$@30",
  "sp_unlabeled_control", "$@31", "$@32", "$@33", "$@34",
  "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "option_autoextend_size", "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_engine_attribute", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "alter_database_options", "alter_database_option",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "string_list", "alter_table_stmt", "alter_database_stmt", "$@37",
  "alter_procedure_stmt", "$@38", "alter_function_stmt", "$@39",
  "alter_view_stmt", "$@40", "$@41", "alter_event_stmt", "$@42",
  "alter_logfile_stmt", "alter_tablespace_stmt",
  "alter_undo_tablespace_stmt", "alter_server_stmt", "alter_user_stmt",
  "opt_replace_password", "alter_resource_group_stmt",
  "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "replica", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_histogram_update_param", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@45", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "in_expression_user_variable_assignment",
  "rvalue_system_or_user_variable", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "in_sum_expr", "cast_type", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "opt_expr", "opt_else", "when_list",
  "table_reference", "esc_table_reference", "joined_table",
  "natural_join_type", "inner_join_type", "outer_join_type", "opt_inner",
  "opt_outer", "opt_use_partition", "use_partition", "table_factor",
  "table_reference_list_parens", "single_table_parens", "single_table",
  "joined_table_parens", "derived_table", "table_function",
  "columns_clause", "columns_list", "jt_column", "jt_column_type",
  "opt_on_empty_or_error", "opt_on_empty_or_error_json_table", "on_empty",
  "on_error", "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_ignore_unknown_user",
  "opt_temporary", "opt_drop_ts_options", "drop_ts_option_list",
  "drop_ts_option", "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_with_opt_locking_clauses", "value_or_values",
  "values_list", "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show_databases_stmt",
  "show_tables_stmt", "show_triggers_stmt", "show_events_stmt",
  "show_table_status_stmt", "show_open_tables_stmt", "show_plugins_stmt",
  "show_engine_logs_stmt", "show_engine_mutex_stmt",
  "show_engine_status_stmt", "show_columns_stmt", "show_binary_logs_stmt",
  "show_replicas_stmt", "show_binlog_events_stmt",
  "show_relaylog_events_stmt", "show_keys_stmt", "show_engines_stmt",
  "show_count_warnings_stmt", "show_count_errors_stmt",
  "show_warnings_stmt", "show_errors_stmt", "show_profiles_stmt",
  "show_profile_stmt", "show_status_stmt", "show_processlist_stmt",
  "show_variables_stmt", "show_character_set_stmt", "show_collation_stmt",
  "show_privileges_stmt", "show_grants_stmt", "show_create_database_stmt",
  "show_create_table_stmt", "show_create_view_stmt",
  "show_master_status_stmt", "show_replica_status_stmt",
  "show_create_procedure_stmt", "show_create_function_stmt",
  "show_create_trigger_stmt", "show_procedure_status_stmt",
  "show_function_status_stmt", "show_procedure_code_stmt",
  "show_function_code_stmt", "show_create_event_stmt",
  "show_create_user_stmt", "engine_or_all", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "opt_extended", "opt_show_cmd_type",
  "from_or_in", "opt_binlog_in", "binlog_from", "opt_wild_or_where",
  "describe_stmt", "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_explain_analyze_type",
  "opt_describe_column", "flush", "$@46", "flush_options", "$@47",
  "opt_flush_lock", "$@48", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@49", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@50", "$@51", "$@52",
  "opt_replica_reset_options", "source_reset_options", "purge", "$@53",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "int64_literal", "temporal_literal",
  "opt_interval", "insert_ident", "table_wild", "order_expr",
  "grouping_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "table_ident", "table_ident_opt_wild", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "filter_wild_db_table_string",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "TEXT_STRING_password", "TEXT_STRING_hash", "TEXT_STRING_validated",
  "ident", "role_ident", "label_ident", "lvalue_ident", "ident_or_text",
  "role_ident_or_text", "user_ident_or_text", "user", "role", "schema",
  "ident_keyword", "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_rvalue_system_variable_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "lvalue_variable",
  "rvalue_system_variable", "transaction_characteristics",
  "transaction_access_mode", "opt_transaction_access_mode",
  "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@54", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@55",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@56", "grant",
  "$@57", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password",
  "opt_user_registration", "create_user", "opt_create_user_with_mfa",
  "identification", "identified_by_password",
  "identified_by_random_password", "identified_with_plugin",
  "identified_with_plugin_as_auth", "identified_with_plugin_by_password",
  "identified_with_plugin_by_random_password", "opt_initial_auth",
  "alter_user", "factor", "create_user_list", "alter_user_list",
  "opt_column_list", "column_list", "require_clause", "grant_options",
  "opt_grant_option", "opt_with_roles", "opt_grant_as", "begin_stmt",
  "$@58", "opt_work", "opt_chain", "opt_release", "opt_savepoint",
  "commit", "rollback", "savepoint", "release", "union_option",
  "row_subquery", "table_subquery", "subquery", "query_spec_option",
  "init_lex_create_info", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@59", "view_query_block",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@60", "udf_tail",
  "sf_tail", "$@61", "$@62", "$@63", "$@64", "sp_tail", "$@65", "$@66",
  "$@67", "$@68", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1201,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   801,   802,   803,   804,   805,
     806,   807,   808,   809,   810,   811,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   823,   824,   825,
     826,   827,   828,   829,   830,   831,   832,   833,   834,   835,
     836,   837,   838,   839,   840,   841,   842,   843,   844,   845,
     846,   847,   848,   849,   850,   851,   852,   853,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   881,   882,   883,   884,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   897,   898,   899,   900,   901,   902,   903,   904,   905,
     906,   907,   908,   909,   910,   911,   912,   913,   914,   915,
     916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
     926,   927,   928,   929,   930,   931,   932,   933,   934,   935,
     936,   937,   938,   939,   940,   941,   942,   943,   944,   945,
     946,   947,   948,   949,   950,   951,   952,   953,   954,   955,
     956,   957,   958,   959,   960,   961,   962,   963,   964,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     976,   977,   978,   979,   980,   981,   982,   983,   984,   985,
     986,   987,   988,   989,   990,   991,   992,   993,   994,   995,
     996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,
    1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,
    1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,  1199,  1200,  1202,  1203,  1204,   124,    38,
      45,    43,    42,    47,    37,    94,   126,  1205,    40,    41,
    1206,    59,    64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4764

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4764)))

#define YYTABLE_NINF -2994

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    8257,  3274,   921, -4764,    36,  1007, 72306,  1534,  1878,  1878,
     538,  3072, -4764, -4764, -4764, 12733,  3903, -4764, 72306,   921,
     542, 48636, 72306, -4764,   729,  2153,    40,  1065,   236,  1444,
     921, 72306, -4764,   820,     2,   921,  1808,  1223, 64416,  1674,
     538, 72306,  2911, 30471,  7043, -4764, 64416,   522,   271, 72306,
    1470,  1290,  1842, 72306,  1709, 65205,  2539, 22489,  2410,  1849,
    1422,   305, -4764, 16798,  2715,  2314, -4764,  2167, -4764, -4764,
    1925, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, 56526, -4764,   455,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764,   338,  1073, -4764, -4764, -4764, -4764,
   -4764,  1689, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764,   423, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, 65994, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,  2211,
   72306,  2226, 72306,  1529,  2206, 72306, 62838, 72306, 72306,  1860,
    1674,  2241,  2295, -4764, -4764,  2368, -4764, -4764,  1878,   538,
   -4764, -4764, 72306, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764,  1738, -4764,  1737, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764,   941,  1974, -4764, -4764, 72306, 72306, -4764,  2592,  2397,
    2384,  2438,  2217, 62838,   312, 72306, -4764,  2133, -4764,  2397,
    2397,  2444,  2467,  2174, -4764, -4764, -4764,  2368,  2716, -4764,
    1992,  2003,  2015, 22489, -4764,  2055,  2072,  2103, 16798,  2106,
    2110,  2112,  2117,  2126,  2129,  2143,  2218,  2218,  2225,  2228,
    2238,  2250,  1193,  2252, -4764,  2255,  1422,  2258, -4764, -4764,
    2268,  2271,  2274,  2277, -4764,  2284,  2296,  2310, 17611,  2326,
    2332, -4764, 41529,  2352,  2353,  2360,  2377,  2379,  2382,  2387,
    2400,  2401, -4764, -4764, 16798,  2225, -4764, -4764, -4764,  2411,
    2416,  2417,  2437,  2449,  2450,  2457,  2464,  2465,  2466,  2479,
    2482,  2484,  2491,  2508,  2509,  2225, -4764,  1214,  2510,  2521,
    1248,  2522, -4764,  2525, -4764,   231,  2528,  2218,  2225,  2225,
    2536,  2537,  2540,  2544,  2546,  2549,  2570,  2571,  2573,  2586,
    2587,  2591,  2595,  2600,  2602,  2603,  2604,  2605,  2610,  2612,
    2616,  2617, 22489, 22489, -4764, 22489, 10294, 31261, -4764, 72306,
   -4764, -4764,  1963, -4764, 51792,  4024, -4764,  3347, 22489,  1119,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764,  2212, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
     509, -4764,  2619,  2002, -4764, -4764,  1674,  1674,  1674, 72306,
    2642,  1674,  1674,  2230, 72306,  1674,  2399,  1674,  1674,  1674,
    2752,  1878, -4764, -4764, -4764, -4764,  2831,  2577,  2524,  2114,
   -4764,  2501, -4764, -4764, -4764,  2690, -4764,  2620, -4764,  2630,
   -4764,  2713,  2620, -4764,   395,  2620,   247, -4764, -4764, -4764,
    2620, -4764, -4764, -4764, -4764,  1751, -4764, -4764, -4764, -4764,
     907, -4764,  2866,   157, 62838,  3055, -4764, -4764, -4764,  3032,
   72306,    36, -4764, -4764, 16798, -4764,  3020, -4764,  1086,  3121,
   -4764,  1878,  3078,  1216, 72306, 57315, -4764,  1878, -4764, -4764,
    3101, -4764,   199,   877,  2742, -4764, -4764,  2876, -4764,  3261,
   49425,   259, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, 12733,  2911, -4764, -4764,    87,  2933,  -157, -4764,
   -4764, 52581,  1304, -4764,   240, -4764, 76251, -4764,  3231, 32051,
   54159, -4764,  2631, -4764, -4764, -4764, -4764, -4764, -4764, 74673,
    2641,   216, -4764,  3278, -4764,   884,  2650,  2745,   884, 58104,
    3184,   381,   237,   258,   252, -4764,  3268, -4764,  2926,  2907,
   -4764, -4764,   328,  2970, -4764,  3307, -4764,  3253, -4764,  2934,
    3184, -4764, -4764,   884,  2938,  3195,  3334,  1380,  2305,   434,
     632,  2876, -4764, -4764,    42,  1590, -4764,  1590, -4764,  2696,
   -4764, 72306, 72306,    36, -4764,  1878, -4764,  2706,  2691, -4764,
   72306,  2711, -4764,  2707, -4764,   387,   387,   387,  3429,   387,
   -4764,   387,  3030,  2714,  2722,  3484,  3379,  3224,  3381, -4764,
    3341,  3428,   409,  2737,   338,  2739,  1689,  2753, -4764, -4764,
    2748, 72306,  2218, -4764,  2755,  1896, -4764, -4764,  2749, -4764,
    4067, -4764,   -85,  3407,  3411,  3412, -4764,  2765, -4764, -4764,
   -4764, -4764,    21, 29681,  3316,   338, -4764,   351,  3536,   498,
     498,   498,  3184, -4764,  1073,  2056,  3292,  3391,  3427, -4764,
    2166, 58893,   112, -4764, -4764, 57315, -4764, 72306, 72306,  -175,
   62838, -4764, 72306, -4764,  3206,  2621,  7086, 72306, -4764, 72306,
   72306,  3059, -4764, 72306, -4764,    30, -4764,  2054, 16798, -4764,
   72306, -4764, -4764, -4764,    82, -4764,   242,  1231,   173,  1446,
   72306, 72306, 72306,  3076,  3399, 72306,  2887,  3590, 72306, 57315,
   79407, 72306, 72306,  2397,  1693,  2919, -4764, -4764, 16798, 16798,
    1782,  3527,  3589,  3589,  3589,   748,  2973, 16798, 16798, 16798,
   16798, 16798, 16798,  1922,  2803, -4764, -4764,   131, -4764,  2806,
   16798, 16798, -4764, 16798, 16798, 72306, -4764,  4544, 16798, 16798,
     621,  3474, 16798, 16798, 16798, 10294,  6632, 16798, 16798, 72306,
    3611,  2810, -4764,  2811,  2115, 16798, 16798,  2172, 16798, 16798,
   16798, 16798, 16798, -4764, -4764, 16798, 16798, 22489, 16798, 16798,
   16798, 16798, 16798, 16798,  2821, 16798,  3589,  3589, 16798, 16798,
    2189, -4764, -4764, 16798,  3456,  3456, -4764, 16798, 11107, 16798,
   -4764, -4764, -4764,  2822, -4764, -4764, -4764, 72306,  3589,  3589,
   16798, 16798, 16798,  3589,  3589, 16798,  2825,  2827, 16798, 16798,
   16798, 16798, 16798, 28891,  2829,  2837,  2839, 22489,  2247,  3527,
    3527,  3527,   795,   351,  1781,   285,  1556,  3148, 16798, 16798,
   -4764, -4764, 66783, -4764, -4764, -4764, 16798, -4764, 16798, 16798,
   -4764, -4764, -4764, -4764, -4764, -4764,  2932, -4764, -4764, -4764,
   18424, 22489, 22489,  2847, 22489, 22489, -4764, -4764, 22489, 22489,
   22489,  3394,  2990, 22489, 22489, 23302, 24115, 22489, 22489, 22489,
   22489,  1550,  3527, 62838, 22489, -4764, -4764,  2212,  2212, 16798,
   44685, 72306, 72306, 72306,  3289, 72306, 72306, 62838,  2968,  1070,
   72306, 72306, 57315, 72306, 79407, 72306,  1674,  3064,  3835, 34421,
   -4764, -4764, -4764, -4764, -4764,  3117, -4764, -4764, -4764, -4764,
   -4764, 72306, -4764, -4764, 57315, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, 62838, -4764,   200, 57315, 50214,   202, -4764, 73095,
   72306, -4764,    36, -4764,  3101,  3170, -4764,  2873,   748,  3639,
   -4764, -4764,  3410,  3670, 72306, 72306,  1093, -4764,  3414, -4764,
   -4764,  2890,  3125, 72306, 72306, -4764, 72306, 72306, -4764, -4764,
   -4764, -4764,  2898, -4764, -4764,  2212,  4198, -4764, -4764,  2577,
    3338,   117,  3233,   173,   276, -4764, -4764, 77829, 72306, -4764,
   -4764, -4764, -4764,  3649, 16798, -4764, 57315,  2995,  3151,  3457,
      70, -4764,  2916,  2922, -4764,  3075, -4764, -4764,  2925, -4764,
    2927, 72306,  1595,   216, -4764, -4764, -4764, -4764, -4764, 72306,
    2924,   240, -4764,  2641,   216, 32841, -4764, 11920,  3490,  2212,
   16798, -4764, -4764,  2942,  2397, 72306, 72306, 72306, 72306, 72306,
   57315, 72306, -4764, -4764,  1479, -4764, 54948, -4764, -4764, -4764,
   -4764,   884, 72306, -4764, 72306,   884, 57315, -4764,   381, 72306,
     884, -4764,  3494,  3187, -4764, -4764, -4764,  3567, -4764, -4764,
    3566,  2948, -4764,  3490, -4764,   381, -4764, -4764,  3568, -4764,
   -4764, -4764,   381, -4764, -4764, -4764,   381,   381,   381,   884,
     884, -4764,    73,  3676, -4764,  2954, -4764, -4764, -4764, -4764,
    2956, -4764,  3568, -4764, -4764,  2873, -4764, 19237,  1709,  2711,
   72306, 72306,  3747, -4764, -4764,  2958, -4764,  3396,  3229, -4764,
    3133, -4764, -4764,   233, -4764, 72306, 16798,  2187, -4764, -4764,
   57315,  3646, -4764, -4764,   338, -4764, -4764,  3635, -4764, -4764,
    2983,  3069,  3750,  3016, -4764,  3358,  3358,  2077, 62838,  3443,
    3164,  3091,  3443,   356,  3443, -4764, -4764,   900,   943, -4764,
    3093,  1182,  3093,   954, 57315,  3188,    36,    36,    36,   455,
   -4764, -4764,  1566,  3265,  3265, 62838,  3027, -4764, -4764, -4764,
    3340, -4764, -4764,   351, 16798, -4764, -4764,  1689,  1689,  1689,
   -4764,  3184, -4764, -4764, -4764, 67572,  2056,  3032,  3427, -4764,
   62838,  3757, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764,  1252, -4764, -4764, 72306, 72306,  1646,
   -4764,  3530,  3840, -4764,  3040,  3742,   216,   216,  3742,   216,
     216, -4764,  3275, -4764,   216,   225, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764,  3700,  2611,   216,  2320,  3461,
     216,   216,  3788,   216,  3467,  3469,   216,   216,   216,   216,
    3294,  3741, -4764,   216,  3618,    97,  4408,  3622,   216,  3489,
   -4764,  1441,  3754,   216,   216,   216,   216,   216,  3788,  3493,
    3846,   216,   216,  3499,  1543,  3501,  3506,   216,  3312,   216,
     216,   216,   344,   216,   216,  3508,   216,  3297,  3298,   216,
   -4764, -4764,   216,   216, -4764,  7746, -4764, -4764, -4764,  2598,
   -4764, -4764,   151, -4764, -4764,  3097,  3104, -4764, -4764, -4764,
   -4764,  3418,  3210, -4764,  3430,  3295, -4764,  3059,   167, 68361,
   72306, -4764, -4764,  3116,  3123,  2154, -4764,   748,  3120,  3112,
   -4764,  4058, 88763, -4764, -4764, 72306, -4764, -4764, -4764, -4764,
    3327, -4764, -4764, -4764, -4764,  3647, -4764,  3880,  3492, -4764,
   -4764,  3772, -4764,  3579,  3937,  3241,  3834,  3584,  2397,  3742,
    3349,  3956,   441, -4764,   110,  2927,  3376,     0, 72306,  3768,
    2397,  2397,  2397,  2397, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764,  2397, -4764, -4764, -4764, -4764, -4764, -4764,  3059,   319,
     540, -4764,  3589,  3160, 16798,  3162,  3163,  3167, 16798,   180,
     480,  1282,  1593,  1852,  1293,   270, 16798,  3169, 13546, -4764,
    3171, -4764, -4764,   332,   445,  1329,  1522,  3174, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,  3782, -4764,
     468,  3175, -4764, -4764, -4764, -4764,  3172, -4764, 16798,  1563,
     470,   511,   298,  3185,   672,  1871,  1885,  3179, 72306, 72306,
    3589,  3181,  1610,  1624,  3589,  3182,   832,  1641,  1904,  1905,
    1921,   942,  1931,  3308,  1835,   989,  1004,  1845,  1055,  1189,
   -4764,  1853,  3198,  3199,  1218,   287,  3589,  3204,   300,  3176,
    3183,  1888, 14359, 15172, 15985,   355,  1268, -4764,  3205, -4764,
    2811,  3207,  3218,   315,   275,  1906,  3222,  3230,  1953,  3342,
    3342,  1915,  1291,  1927,  1291,  1297, 62838,  3236, -4764, -4764,
   -4764, -4764,  3342,  3342,  3342,   162,  3589,  3237,   351, -4764,
   16798,  3219,  3226,  3238, 62838, 16798,   257, -4764, -4764, -4764,
    2196,   407, -4764, -4764, -4764, -4764, -4764,  1826, -4764,  3239,
   -4764,  1422,  2697,  3245, 10294, -4764,   384,  3245,  3540,  1800,
    1800, 22489, -4764,  3246,  1354,  2750, 17611,   889, 17611,   889,
    3245,  3245,  3245, -4764, 22489,  3247, 22489, 22489, -4764,  3527,
   -4764, -4764, 51792,  3250,  3251, -4764, -4764,  -159, -4764, -4764,
    3249, 72306,  1070, -4764, -4764,  1674, -4764, -4764, -4764,   234,
   -4764, -4764,   988, -4764,  3252,   172,  2927,  3868, 72306,  3254,
   -4764,  3784,  3789,  3792,  3793, -4764, -4764, -4764, -4764,  3794,
   -4764,  3796, -4764, -4764,  3256, -4764, 72306, 28101, 62838, -4764,
    3272, -4764,  3928, -4764,  3712, -4764, -4764,  1969,  3511, -4764,
   -4764, -4764, -4764, 45474,  1392, -4764, -4764, 72306, -4764,   260,
     359,  4440,  3460, -4764,  2873, 72306,    36,    36, 72306, -4764,
    3854, -4764,   582,  3282, -4764,  3283, 62838, -4764, -4764,   266,
   57315, 57315,  3285, -4764,  3517,   278,  3701, -4764,  3518,  4089,
    4089,   877, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764,  3291,  3954,  3302, 57315, 57315,
     200, -4764, 72306, -4764, 25723,  3460, -4764,  3919,  3535,  3539,
     623, -4764, 59682, -4764,   748,  1002,  3358, -4764,  3358,  2138,
   -4764, -4764,  3869, -4764,  3691, -4764, 79407, -4764, 62838, 79407,
    3932,  3313,  3314,  3318,  3319,  3322, 75462, 16798, -4764, -4764,
   -4764, 11920,  3324, -4764, 75462, -4764, -4764, 22489,  2255, -4764,
    2465, -4764,   748, -4764,    36,  3942, -4764,   748,  3331, 72306,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764,   316, -4764, -4764, -4764, -4764, -4764,
   -4764,  3529,   884, -4764, -4764, -4764, -4764, -4764,  3717,  3184,
    2970,  3942,   884,  4093, -4764,   884, 72306, 72306,   884, -4764,
   -4764, -4764, -4764,  3643,    42,  3552,  1590, -4764,  2255,   748,
    3352,  3351, -4764, -4764, -4764,  1988, -4764,  1422,   387,  3763,
   -4764,  3975, -4764, -4764, -4764, -4764, -4764,  1633,  1936, -4764,
     161,   169,  3785,  1032,  3368,   216, -4764, -4764, -4764,  3790,
    1609, -4764,  3151,  3093,  3093,  3398,  3402, -4764, -4764,  3966,
   78618,  3795,  4053, 62838,  3966,  3151,  4100, -4764,  3151, -4764,
   -4764,  3151, -4764, -4764,  3636,  3641, -4764, -4764,  3650, -4764,
   -4764,   728,   430, -4764,  2778,   248, -4764, -4764, -4764, -4764,
   -4764, 72306,  3542, -4764,  2034, -4764, -4764, -4764, -4764,  2507,
   -4764, 33631,  3873,  1941,  3415, -4764,  3424,  3424, -4764, -4764,
   72306,   128, -4764,  3406, -4764, 26518, -4764,  2950,  3844,   124,
   -4764, -4764, -4764, -4764, -4764,  2702,  2805, -4764, -4764,  4164,
    3755,  3970,  3644,  2805,  2516,    36,  2794, -4764,  3637,    36,
    2794,  3637,  3637, 72306,    36, -4764,  2554,   216, -4764, 72306,
    2154,   921,  2154, -4764,   367, 72306, 42318, 69150, 72306, 72306,
   72306, 72306,   921,  1710,  1710, 72306,  3202, 69939,   921,    36,
      36,    36,    36,  2507,   216,  3202, -4764, 69939, -4764, 72306,
   72306,  3971, 72306,  3973, 72306, 72306, -4764, 62838, 72306, 69939,
   -4764,   216,   320,  1710, 70728,  1710,  1710, 72306,   921, 72306,
    1762,    36,   921, -4764, 72306, -4764, -4764, 72306, 72306,   921,
     921,  2330, -4764,  1762,  1762,  2485, -4764, -4764, 72306,  3202,
   69939,  3432, -4764, -4764, 60471,    36,    36, -4764,   216,   216,
    3841, -4764, -4764,  9105,  8547,  2042,   216,  3541,  3872,   386,
   72306, -4764,  3573,  3578, -4764, -4764, -4764, -4764, -4764,  2154,
   69939, 71517,  4006, -4764, 16798,  4099,  4106,  4107,  4109,  4110,
    4111,  4113,    79, -4764,  4115, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764,  4116,  4122, -4764,
   -4764,  4124, -4764, -4764,  4127, -4764,  4134,  4140,  4141,  4145,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764,  4146,    80,  4147,
    4148,  4149,  4151,  4152,  4154,  4156,  4160,  4161,  4163,  4165,
    4167,  4168,  4169,  4171,  4175,  4176,  4177,  4187,  4188,  4190,
    4192,  4195,  4196,  4197, -4764,  4201,  4202, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764,   152, 72306,  3644,  3616,  3693, 72306,
    3293, -4764,  4065,  3033,  3742,  3966, -4764,  4344, -4764, -4764,
    3575, -4764, -4764, -4764,  3714, 57315,  3905,   216,  1278,  1278,
    3993, -4764,  4174,  2397, 72306, 72306, 72306, 72306, 72306, -4764,
   20050, -4764,  3564,  3342,   748,  3342,  3342,  3342,  1722, 16798,
   16798,  4221,  5651,  1339, -4764, 61260, -4764, -4764, -4764, 61260,
    5651,  1990,  3342,  3569, -4764,  4131,  4138, -4764, -4764, -4764,
   16798, 16798, -4764, 16798,   250, -4764, 16798, 16798, 16798, 16798,
   16798, -4764, -4764, 22489, -4764,  3570,  3576,  3342, -4764, -4764,
    3577,  3342, 16798, -4764, -4764, -4764, -4764, 16798, -4764, 16798,
   -4764, 16798, 16798, -4764, 16798, 16798, -4764,  3342,  3342, 20863,
   16798, 16798,  3582,  3342, -4764, 16798, 16798, 16798, -4764, 16798,
     692, 16798,  1862, 16798,  2292, 16798, -4764, 16798, -4764,  3342,
    3342, -4764, 16798,  1827, -4764,  3202, -4764,  3589,  3342, -4764,
   43107, -4764, -4764,    71, 28891,  3583,    71,  3585, 22489, -4764,
    3342, -4764, -4764, -4764,  1382,  3594,  3342,  2000, -4764, -4764,
   -4764,  3574, -4764,   748, -4764, -4764, -4764, -4764, -4764, -4764,
   22489,   334, 22489,  3540, 22489,  6632,  6632,  2952, 10294, -4764,
    1725,  3540, -4764, -4764, 16798, 16798, 46263, 72306,  1400, -4764,
    3293,  1465, -4764,   133, -4764, -4764, 57315, -4764, -4764, -4764,
   -4764, -4764,   172, 62838,  3591, -4764, -4764, -4764, -4764, -4764,
    3568, -4764,  4191,  3283, -4764,  3816,  3827,  3836, 31261, -4764,
   36001, -4764, -4764, -4764, -4764, 36001,   164,   200, -4764, 72306,
   57315,  3592,  3597,  3600,  3826,  3761, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764,  3460,  3609,  3184,
   -4764,  3701, -4764, -4764,  3606, -4764,  2054,  3265,   981, 72306,
   -4764, 16798,    36, -4764,  3838, -4764, 72306, 72306, -4764, -4764,
   -4764, -4764,  1022, -4764,  3619,  3284, -4764,  3293, -4764, -4764,
    3568,  3568, -4764,  4198, 28101,  4214,  4049,  4236,    51, 45474,
   -4764, -4764,  3626,  1422, 24928,  3705, -4764,  3627,  3426, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764,  3701,  2850,  4229,
    3460, 79407, 79407, 79407, -4764, -4764, -4764,  3710,  3151,  3093,
    3093,   245,  4011, -4764, -4764, -4764, -4764,  2927, -4764, -4764,
    2950, -4764, -4764, -4764, -4764, -4764,   216,   748, -4764, 32841,
   -4764, -4764,  1710,  3184,   427, -4764, 54948, 54948, 57315, -4764,
    4072, -4764, -4764,  3184, -4764,    36, -4764,   381,   381, -4764,
   -4764, -4764,  3409,  3843, -4764, -4764, 19237, -4764, 72306, -4764,
    3634, -4764,  4117, 72306,  4295,  3648, 22489,  3652, 22489,  2950,
    3904,  3657,  4445,  3202,  3265, -4764,  4064, -4764, -4764, -4764,
   -4764,  3969, -4764,  4463, -4764, -4764, -4764,  2927, -4764,  3443,
    2327,  4133,  3093,  4071,  3093,  3093, -4764, -4764, -4764, -4764,
     262,  3202,  3202,  3202,  3202,  2778, -4764,   904,  1123,  2535,
    2950,   160,   248, -4764,  3666, -4764, -4764, 61260,  4407, -4764,
   -4764, -4764, -4764, -4764, -4764, 16798,   586,   322,  1405, 26518,
   72306, 47052, -4764,   711, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764,   216, -4764,   216,    36,  3949,  3959,  3960,
    3961,  3962,  3995, -4764, -4764, 72306,  4119, -4764,    36,  1554,
      36,    36,    36,    36,  3202,    36,    36,  2008, -4764, -4764,
   -4764,   256, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, 62838, -4764,
   -4764, -4764, 72306,   323, 72306,  3680,  4237,  4244,  2154,     6,
   72306,  3698,  3885,  3917, 53370, 88846, -4764, -4764, -4764,  4143,
    4143,  2096,   625, 69939, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, 72306, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
    3647,  3711, -4764,  2950, -4764, -4764, -4764, -4764, 55737,    36,
   -4764,  3948, -4764, -4764, 72306,  3711, -4764, -4764,   675, -4764,
    3889,  3965,    36, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, 88846, 69939,  3716, -4764,   502, -4764, -4764,
   -4764, -4764, 69939,  3945,  3953, -4764, 72306, 69939, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, 72306, -4764, -4764, -4764, -4764, 59682, 61260, -4764,
    3048,  3964,  7746, -4764, -4764, -4764,  3097, -4764, -4764, -4764,
     988,  4166,   216,  1101,   669, -4764,  4087, -4764, -4764,  2707,
    4172,  4178,  3732, -4764,  3733, -4764,  3731, -4764, 68361,   748,
    3743,  3743,  3744,  3744,  3745,  3745,  3749,  4058, -4764,  3751,
      36,  3202,    36, 62049,  3202,   891,  2950,   505,  2950, 88763,
   -4764,  3202,    36,    36,    36,    36,  3202,  3202,  3202,  3202,
    3202,    36,    36,    36,    36,    36,    36,  3202,    36,  1348,
      36,    36,  3202,  1733,    36,  3202,    36,  1710, -4764,   201,
   -4764,  3753,  3276,  3293, 62838,  3756, -4764,  4357,   216,   216,
     216,   216, -4764,   274, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764,   988,  4551, -4764,  3786,
   -4764, 79407, -4764,  3188,   -84, -4764, -4764, -4764, -4764, -4764,
   72306,  3224, -4764, 72306, -4764, 39951, -4764, -4764, -4764, -4764,
     227,  1801, -4764, -4764,   811, 72306, -4764,  3767,   -29, -4764,
    1283, 17611,  1948,  3342, -4764, -4764, -4764, -4764, -4764, 16798,
     748,  2121, -4764,  3771,  3771,  3776, -4764,  3781,  4180,  3771,
   -4764, -4764, -4764, -4764, -4764, -4764,  4514, -4764, -4764, -4764,
   -4764,  4343,  3776,  4348, -4764,  3771, -4764,  3871,  4575,  3851,
    3797,  3798,  3803,  3342, -4764,  3342, 16798, 16798,  1961,   421,
    1968,  4549,  4120,  1322,  1365,   520, -4764,  1970,  3377,  3342,
   -4764,  3342, -4764,  1975,  1979,  1999,  2006,  1373,  2027,  2028,
   -4764, -4764, 17611,  2059,  1496,   525,  3342, -4764,  2079,  1414,
    1424,  2099, 16798,  2101, 16798,  2147, 16798,  2158,  2193, -4764,
   -4764,  2243,  3805,  3805,  3806,  3807, -4764, 72306, -4764, -4764,
   -4764, -4764,  3918,  3931,  3342,  3809,    71,  3342,    71,   174,
   -4764,  4052,  1559,  3342, -4764, -4764, 72306, -4764, -4764, 16798,
    1119,   194, -4764, -4764, 22489,   713, 22489, -4764,  3815, -4764,
   -4764, -4764, -4764,  4340,  4615, -4764, -4764,  4082, -4764, -4764,
   -4764,  3254, -4764, -4764,   154, -4764,  4470,  3818, -4764, -4764,
   -4764, -4764, -4764, 45474, -4764,  1393,  3833, 47841, 57315,  4253,
    3184, 19237, -4764,  3346, 72306,  2154,  4409,  1482,  3996,  4363,
   -4764, -4764, -4764,   748, -4764, 57315, -4764, -4764, -4764, 72306,
   72306,  1709, -4764, 37581, -4764, -4764, -4764, -4764,  3831, -4764,
   -4764, -4764,  4486, -4764,  4265,   200, 57315,  4051, -4764,  4456,
   16798,  2850,  3852,  3848,  3850,  3858,  3859,  3860, 26518, 26518,
    4412,  4414, -4764,  4284,  1804,  4284, -4764, 40740, 26518, 26518,
    3129,  2707,  4627,  4459,  4229,  2927,  2927,  2927,  3358,  3358,
   -4764, -4764, -4764, -4764, -4764, -4764,   297, -4764, 11920, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764,  3252, -4764,  3568, -4764,
    3460,   884,  4518, -4764,  4519, -4764,  3867,  4521,  4279, -4764,
   -4764,  3202, -4764, -4764, 72306,  3005, 72306,  3150, -4764,  4635,
    3876, 22489,  4525,  3879,  4461, -4764, -4764,  3898,  3443, -4764,
    1001,  1642,  3443, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764,  1916,  4589,  3081,  4448, -4764,
   -4764, -4764,  2212,  2212, -4764, -4764, -4764,  1494,  4419, -4764,
   26518,  3701, 47052,   575, -4764, -4764,  3884, 72306,  1762,    36,
   -4764, -4764, -4764,  4590, -4764,  4592,   399,  4332,  4542, -4764,
   -4764,   301, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764,  2516, -4764,  3897,  2950,  4308,  3901,
   16798, 72306, -4764, -4764, -4764,  3982, -4764, -4764,  3908, 43896,
    1278,  1278,  2046, -4764, -4764, -4764, 88846, -4764,  3771,  3771,
    3771, -4764, -4764,   372,  3776, -4764, -4764,  3909, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764,   493,  1208, -4764, -4764,
     493, -4764, -4764, -4764,   230,   -30, -4764, -4764, -4764, -4764,
   -4764,  3910, -4764,  3771,  3776,  3776, -4764, -4764,   493,  3771,
   -4764,  3771,  4281,  5608, -4764,   168,  3771,  3771,  3771,  3911,
    3781, -4764, -4764, -4764, -4764, -4764,  4597,   394, -4764, 88846,
   -4764, 72306, -4764,  3649,  3649, -4764, -4764, -4764, -4764,  4158,
   -4764, -4764,  2105, -4764, 72306, -4764, -4764, 72306, 72306,    75,
    1022,  3915, -4764, -4764, -4764,  3925,   204, -4764,   290, -4764,
   -4764,  3868,   203,  1202,  4144,  1775, -4764, 72306, 72306, -4764,
   -4764, 71517, -4764, 38371, -4764, -4764, 39161, -4764, -4764,  -110,
   -4764, -4764,  2140, -4764, -4764,  3202, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, 43896,   216,   216, -4764,   309, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,  4346, 43896,
    1336, 72306,    36,  3637,  3637,  2950,  3496, -4764,  3966,  4499,
    2927,   248, -4764, -4764,  3210,  3924, -4764, -4764, 72306,  2053,
   -4764, -4764,  6353, -4764,  4263,  4359, -4764,  1714,  3930, -4764,
   -4764,   510,  6632, -4764, -4764,   748, 16798,  1375, -4764, -4764,
     493,  4369, -4764,  1528, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764,  3933,  5651,  4498,
   -4764, -4764, -4764, -4764, -4764,  6632,  6632, -4764, -4764, 16798,
   -4764, 16798,   387,  3936, 16798, 16798, -4764, 16798, -4764,  1374,
    3938,  4114, -4764, -4764, -4764, -4764, -4764, -4764, 16798, -4764,
   -4764,  6632, -4764, 16798, -4764, -4764, 16798, -4764, -4764, 16798,
   16798, -4764,  2266, -4764,  2300, -4764,  2333, -4764, -4764, -4764,
    2950,  3944,  3946,  3202,  3342, -4764,  3947,  4354, -4764, -4764,
   -4764, 16798, -4764,  3342, -4764,  3342,  4560,  5651,  1770, -4764,
   -4764,  2080, -4764, -4764, -4764, 16798,  1119, -4764, -4764, -4764,
   -4764, -4764, -4764,  4326, -4764,  3822, 36001,  4179,  4550, -4764,
   -4764, -4764, -4764,  1486, -4764, -4764,  2092, 72306,  4738,  4385,
   -4764,  2154,  4409,  4495, -4764,  4526, -4764, -4764, -4764, -4764,
    3968,  3711,  3958, -4764,   216,  3180,  2093, -4764, -4764, -4764,
    3974, 19237,  3967, -4764, 28101,  4576, 45474,    51,  4173, 57315,
    1456,  2707, 26518, -4764, -4764, -4764, -4764, -4764,  3426,  3957,
    3972,  3976,  3426, -4764, -4764, -4764,  4516, -4764,  4284,  4284,
    4527,  4529, -4764,  2173,  2955,   548, -4764, 16798, 16798,  4094,
    4459,  3093,  3093,  2950, -4764, -4764, -4764, -4764,    36,    36,
    1452,    36,  4619,  4666, -4764,  2108, -4764, -4764,  2118, -4764,
    4520,  4308, -4764,  3201,  2950, 72306,  4748,  4777,  3966, -4764,
   -4764, -4764,  4397, -4764,  3966, -4764,  2950, -4764,   188, -4764,
   -4764,  3203, -4764, -4764,  4753,  4755,  4652,  4763,  1494, -4764,
    1299, -4764,   575,  3460,  1549, -4764,  4010, -4764,   583, -4764,
   -4764, -4764, -4764, -4764, -4764,  4338, -4764,  1570, -4764, 43896,
   -4764, 72306,  2119, -4764, 43896,  2372,  4009, -4764, 43896, 16798,
   -4764,  2156, -4764,   193, -4764, -4764, -4764, 53370,  4281, -4764,
   -4764, -4764,  4784,   415, -4764,  4788, -4764,   493, 61260, -4764,
   -4764, -4764, -4764,   387, -4764,    14, -4764,   493, -4764, -4764,
    4203, -4764, -4764, -4764,   387,   493, -4764, -4764, -4764, -4764,
    1830, 72306,  2105, -4764, -4764, 59682,  2520,    36,  4211,  4101,
   -4764,  4224, -4764,  4713,  1611,  4577,  3293,   216,   216,  4779,
   -4764, -4764,  4483, -4764,  4638,  4581, -4764,   870, -4764,  4811,
   -4764,   493,  4811,  1830,  4478, -4764,  1830,  1830, -4764,  4249,
   -4764,  2105, -4764, -4764, -4764, 72306, 72306, -4764, -4764, -4764,
   -4764, -4764,  4043, -4764, -4764,  4480,  4166, -4764,  4481, -4764,
   -4764,  4442, -4764, 16798, 16798,  4482, 72306,  4485, -4764,  4778,
    4837,  3711,  1629, -4764, -4764,  2163, -4764, -4764, -4764,  2184,
   -4764, -4764,  4050, -4764,  2185, -4764, -4764, -4764, 72306, -4764,
    2192,  2201, -4764, -4764,  2236,  3637,  3637,  2553,  1336,  4055,
    2248,    36,    36,    36,    36, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764,   362, -4764, -4764, -4764,   160,  3541, 43896,  4056,
    5714, -4764,  1714,  4379, 72306, -4764, -4764, -4764, -4764,  4352,
   -4764, -4764, -4764, -4764,  4491,  -184,   748,  4060,  4061,  4063,
    4068, -4764,  4070,  2260, -4764,  3871, -4764,  2212,  4074,  4075,
    2385,  4073, -4764, -4764,  3342,  2403,  1502,  2282,  4532,  4609,
   -4764,  4449, -4764,  2407,  1523,  2409,  2433,  2440,  2442, -4764,
   -4764, -4764, -4764, -4764, -4764,  4079, -4764, -4764,  4845,  4507,
     748, -4764, -4764,   349,    71, -4764,  4243, -4764, -4764,  4076,
    1770, -4764,  4522, -4764,  2336,  4720,  4612, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, 57315,  4523,  4694,  4884,  3460,   192, 72306,  4385,
    4759, -4764, -4764, -4764,  4345, -4764, 72306, 19237, -4764, -4764,
    3180, 72306, 44685,  4103,  3831, -4764, 57315,  4711, -4764, -4764,
      51,  1382, -4764,   209, -4764, -4764,  4651,  4656, -4764, -4764,
   16798,  4108, 16798,  4112, -4764, -4764,  2154,  2154, -4764,   548,
   -4764, -4764,   748,  1347, -4764,   748, 72306, -4764,  4094, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764,    36,  4757,  4524, -4764,
   72306, -4764,  2070,  2339, -4764, -4764,  4118,  4121,    36,  1001,
   -4764, -4764, -4764,  4799, -4764, -4764, -4764,  4801,   387,   387,
    4876,   387, -4764,  4880,  4882,  1299, -4764, -4764,  4545,  4545,
    4554, -4764,  2344,  4314, -4764,  4308,  2346, -4764, 72306,  2357,
    2458,  2565, 43896,  4563, -4764, -4764, -4764, -4764, -4764, -4764,
   61260, -4764, -4764,  4811,  2389, -4764, -4764, -4764,  2421, -4764,
   -4764, -4764, -4764, -4764,  1830, -4764,  4129, -4764,  2075, -4764,
   -4764, -4764, -4764, -4764,  3816,  3827,  3836,  1733,  1733, 16798,
   -4764, -4764, -4764, -4764, -4764, -4764,  4571,  4319, -4764, -4764,
   -4764, -4764, -4764, -4764,    36,    36, -4764, 59682, -4764,  4925,
    4920, -4764, -4764, -4764, -4764, -4764, -4764, -4764,  4130, -4764,
   -4764, 16798, -4764, -4764,  2203, -4764,  4308, -4764, -4764, -4764,
   -4764,   748,  6632,  4861, -4764, -4764,  4434,    36,  4803,  3224,
    4836,  4578, -4764, -4764, 72306, -4764, 72306, 72306, -4764,    36,
    4135, -4764,  4150, -4764,  3202,   206, -4764, -4764, -4764,  2516,
     272, -4764, -4764, -4764,  4721, 62838, -4764,  1101,  2423, -4764,
   -4764,  4436,  1202,  4153,  4139, -4764, 88846,    36,   220, 72306,
   -4764, -4764, -4764, -4764, -4764, -4764,  4583,  4155,  4932, -4764,
   -4764, -4764, 16798, -4764, -4764, 16798, -4764, -4764,  4616,  4783,
   -4764, -4764, -4764, -4764, -4764, -4764,  4157,  3202, 16798,  4911,
    1445, -4764, -4764,  3342, -4764, -4764, -4764,  4584,   222, -4764,
   -4764, -4764,  1486, -4764,  4585, 57315, -4764,  3184,  4385,  2707,
   -4764,  4697, 72306, -4764, -4764, -4764, -4764, -4764,  4159, -4764,
   -4764,    51, 57315, -4764,   212, -4764, -4764, -4764,   748, 72306,
     748, 72306,  4771,  4771, -4764, -4764, 16798, -4764,  4946,  4162,
   -4764, -4764, -4764,    36,  4808, -4764, -4764,  4170,  4445, -4764,
   -4764,   281, -4764, -4764, -4764, -4764, -4764,   387, -4764,   387,
     387, -4764,  4701,  4701,  4818,   206,   336,  3883, -4764,   272,
    2430, -4764,  2565,   502,    36,   216,   216,   216, -4764,  2565,
   -4764, -4764, -4764, -4764, -4764,  4181, -4764, -4764,   493,   387,
     493, -4764, 72306,  4663, -4764, -4764,  2486, -4764, -4764, -4764,
   -4764, -4764, -4764,  4183,  2497, -4764, -4764,  2446, -4764, -4764,
   -4764, -4764, -4764,  4347, -4764,  2212,  4311, -4764, -4764, -4764,
   -4764, 72306, 72306, -4764,  4591,  1400,   206, -4764, -4764,  2455,
    1400,   272, -4764, -4764,  4939,  4968, -4764,  2565,    36,  4482,
   -4764, 72306,  3649, -4764, -4764, -4764, -4764,  4184,  4185, -4764,
   72306,  4798,  4193, -4764,  4885, -4764,  2511, -4764, -4764, -4764,
    4194,  4200, 16798, -4764, -4764, -4764, -4764,  3074, -4764,  4832,
   -4764, -4764,  4884, -4764,  4360, -4764, -4764, -4764,  4392,  3701,
   -4764,    51,  4199,  4205,  4206,  4207,   267,  4209,  4210, -4764,
    4212, 72306, -4764,    36,  3568, 22489,  4213,  4865,   798, -4764,
   -4764, -4764, -4764, -4764, 54948, -4764, -4764, -4764, -4764,  4215,
    4431,   216,  4869,  4870,   216,   216,   216,   216,  4216,  3883,
   -4764,  4851, -4764,  4281, 72306, -4764, -4764, -4764,  3202,    36,
      36, -4764,   502, -4764, -4764, -4764,  2475, -4764,  1247,  4633,
   -4764, 16798, -4764, -4764,  4489, -4764, 86508,  1786, -4764, -4764,
   -4764,  4218,  4217,  2410, -4764, -4764, -4764, -4764, -4764,  3293,
    1400, -4764,  1775, -4764,  4559, -4764, -4764, -4764,  2200, 88846,
    4873, -4764,  3776, -4764, -4764,  3415,  2793,  4552, 16798,  4341,
    4358, -4764, -4764,  4349,  4350, -4764,  4386, -4764, 72306,  2507,
   -4764, 73884,  3273, -4764, -4764,  4990, -4764,  4994, 71517, 71517,
   -4764, -4764, -4764, -4764,  3220, 72306,   216,  4511, -4764, -4764,
    4238, -4764, -4764,   191,    36,   216,   216,  3293,  3293,  2950,
   72306,  4493, -4764, -4764,   216, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, 72306, -4764, -4764, -4764,   443, -4764,  2568, 16798,
    4893,  4420, 72306,  1978, -4764, 88086, 88086, 72306, -4764, -4764,
   -4764, -4764,  3998, -4764, -4764,   973, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764,  5020, -4764,  4239,
   -4764, -4764, -4764, -4764,  4991,  4672,  4995, -4764, 72306, -4764,
   -4764, -4764,  4778, 88846, -4764, -4764,  3649,  4580,  4251, 16798,
    1573, -4764,  5039,  1832,  1898, -4764,  6632, -4764,   229, -4764,
   -4764, -4764, 77040,  3958,  4586,  4364,  2480, -4764,  9560, -4764,
   -4764, -4764,  4252,  2495,  4512,  2530,  3265, -4764, -4764,  2550,
   -4764, 21676, -4764, -4764, -4764, -4764,    36,    36, -4764, -4764,
   -4764, -4764, 62838,  2557, -4764, 62838, -4764,  1447,  1447,  1274,
     748, 16798, -4764, 16798,  4435, -4764, -4764,  4872, 72306, -4764,
   -4764, -4764, -4764, 16798, -4764, 86508, 86508, -4764, -4764, -4764,
   -4764,  5038,  4687, -4764,  4688,  4264,  4931,  3649,  4220, -4764,
     265, -4764,  6632, -4764,  2793, -4764, -4764,  4384,  4593, -4764,
    4389, -4764,  3075, -4764, -4764,  2927,  4850,  4407,  1382, -4764,
   73884,  4380,  3649, -4764, -4764,  2950, -4764,  4512,  4620, -4764,
    4238, -4764,  2579, -4764,  3540, -4764, -4764,  3883, -4764,  4493,
   -4764, -4764,  5074, -4764,  1077,  4706,  4708, -4764, -4764,  4483,
     748,   748, -4764,   292, -4764, -4764,  4841,  4934, 16798,   748,
   82563,  4278, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, 87297, 16798, -4764,   973,  5020,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,  4956, 86508,
   -4764, -4764, 62838, -4764,  1943, -4764, -4764, -4764, -4764, -4764,
    5043,  4419,   212, -4764, -4764,  4922, -4764, -4764, -4764, -4764,
   -4764, 21676, -4764, -4764, -4764, -4764, -4764,  4488,  4964, -4764,
    4464, 16798, 86508, -4764,  4944, -4764,  4871,   748,  4807,  4289,
   -4764,  4290,   748,  4980, 88086, 88086, -4764, -4764, -4764, -4764,
   -4764, 86508, -4764,   387,  4875, -4764, -4764,  4405, -4764,  1447,
    1447, -4764,   371, -4764,   748, 83352,  5054, 72306, -4764,  4536,
   -4764, -4764, 16798,  4969, 63627, 84141,  4300, -4764, -4764, -4764,
    4220, -4764, -4764,  4741,  4306,  1382, -4764, -4764, 16798, -4764,
    4961,  4543, -4764,  4303, -4764, 86508,   748, 86508, -4764, -4764,
    4903,  6330,  1166, -4764,  4309, -4764, 86508,   871, 35211,  4621,
    1699,   748,  5065, 86508, 72306, 80196,  4971, 84930,  4928, 72306,
    3649,  4929,  4933, -4764, -4764, -4764, -4764, -4764, -4764, 62838,
    2584, -4764, -4764, 72306, -4764, -4764, -4764,  1770,  4555, -4764,
   80985, -4764,  2828,  4674,  4496, -4764, -4764,  5001,  3405, -4764,
   -4764, -4764, 36791,  4317, -4764,   216, -4764,  4756, 86508, 86508,
   -4764, -4764, -4764, -4764, 51003, 16798, -4764, -4764, -4764, -4764,
    2715, -4764, 72306, 19237,  4437, 81774, 85719, -4764, -4764, -4764,
   27312, -4764, -4764, -4764,  4936, -4764,   748, -4764, -4764, -4764,
   51003, -4764, -4764, -4764
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2018,  3126,  1314,  3078,     0,     0,     0,     0,     0,     0,
    3080,  3126,   152,  2133,  2134,     0,  1962,     8,     0,  1314,
     467,     0,     0,   164,     0,  1976,     0,  2190,     0,     0,
    1314,     0,  2184,     0,     0,  1314,  2023,  2167,   444,  1958,
    3080,     0,  1372,     0,  2110,  2911,     0,     0,     0,     0,
    2036,     0,  2908,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2912,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,   141,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1237,
     144,   143,   142,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1344,  1342,  1882,  1352,  1351,  1358,  1359,
    1360,  2019,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   148,     0,    44,   145,   111,   136,   137,   117,   135,
     123,   124,   112,   113,   114,   100,    96,   133,    97,   131,
     121,   115,   102,   101,   139,   116,   130,   129,   134,   128,
     138,    98,    99,   125,   120,   103,   107,   110,   122,   132,
     106,   105,   108,   127,   119,   126,   118,   104,   109,    45,
      64,  2135,    65,    86,    81,    74,   149,    75,    93,    95,
      94,    76,   147,   140,    88,    19,    69,    89,    68,    15,
      36,    90,    91,    82,   150,    73,   146,    71,    35,     0,
    1134,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1958,     0,  1070,  3124,  3125,  3126,  1316,  1315,     0,  3080,
    2294,  1301,     0,  2378,  2377,  2380,  2382,  2383,  2384,  2385,
    2386,  2387,  2330,  2389,  2392,  2393,  2394,  2395,  2396,  2331,
    2397,  2398,  2399,  2400,  2401,  2402,  2332,  2333,  2404,  2405,
    2406,  2408,  2409,  2334,  2335,  2410,  2411,  2412,  2413,  2414,
    2415,  2416,  2417,  2418,  2419,  2337,  2420,  2338,  2421,  2422,
    2424,  2425,  2455,  2426,  2427,  2428,  2429,  2430,  2431,  2339,
    2432,  2433,  2434,  2435,  2436,  2437,  2438,  2439,  2440,  2340,
    2441,  2442,  2444,  2446,  2447,  2448,  2449,  2450,  2341,  2451,
    2452,  2453,  2454,  2342,  2456,  2458,  2459,  2461,  2463,  2462,
    2464,  2465,  2368,  2466,  2467,  2327,  2469,  2470,  2471,  2472,
    2473,  2476,  2477,  2369,  2478,  2479,  2481,  2482,  2343,  2344,
    2484,  2485,  2486,  2487,  2494,  2488,  2489,  2490,  2808,  2493,
    2345,  2496,  2346,  2500,  2499,  2501,  2290,  2502,  2291,  2503,
    2347,  2505,  2506,  2509,  2510,  2348,  2512,  2513,  2514,  2515,
    2516,  2517,  2519,  2349,  2521,  2522,  2523,  2524,  2525,  2526,
    2809,  2528,  2529,  2530,  2531,  2533,  2534,  2536,  2538,  2539,
    2540,  2541,  2543,  2544,  2554,  2545,  2546,  2547,  2549,  2548,
    2550,  2551,  2552,  2555,  2535,  2557,  2558,  2559,  2560,  2561,
    2562,  2563,  2565,  2566,  2567,  2568,  2569,  2570,  2571,  2572,
    2573,  2574,  2575,  2576,  2577,  2578,  2579,  2580,  2581,  2582,
    2583,  2584,  2586,  2587,  2588,  2589,  2370,  2350,  2591,  2593,
    2594,  2596,  2599,  2600,  2601,  2603,  2607,  2608,  2609,  2610,
    2611,  2613,  2612,  2614,  2617,  2619,  2620,  2618,  2621,  2622,
    2623,  2351,  2352,  2625,  2626,  2627,  2371,  2629,  2631,  2630,
    2372,  2632,  2633,  2634,  2636,  2637,  2638,  2639,  2640,  2643,
    2644,  2645,  2646,  2647,  2373,  2648,  2650,  2353,  2651,  2374,
    2653,  2655,  2654,  2656,  2658,  2659,  2657,  2354,  2663,  2665,
    2666,  2668,  2670,  2672,  2355,  2674,  2675,  2676,  2678,  2677,
    2679,  2356,  2680,  2681,  2687,  2688,  2689,  2690,  2812,  2691,
    2692,  2329,  2357,  2693,  2358,  2695,  2696,  2697,  2698,  2699,
    2723,  2728,  2729,  2730,  2731,  2732,  2733,  2735,  2736,  2359,
    2737,  2738,  2739,  2740,  2360,  2741,  2743,  2745,  2746,  2747,
    2748,  2749,  2376,  2750,  2751,  2752,  2753,  2754,  2755,  2756,
    2757,  2758,  2759,  2760,  2765,  2763,  2764,  2766,  2768,  2769,
    2361,  2770,  2771,  2773,  2774,  2775,  2776,  2362,  2363,  2777,
    2779,  2780,  2781,  2782,  2783,  2784,  2785,  2787,  2789,  2790,
    2791,  2792,  2793,  2794,  2795,  2796,  2364,  2797,  2798,  2799,
    2810,  2673,  2381,  2511,  2788,  2423,  2694,  2527,  2590,  2811,
    2497,  2403,  2336,  2468,  2483,  2592,  2606,  2624,  2664,  2762,
    2772,  2585,  2604,  2616,  2498,  2671,  2734,  2761,  2375,  2786,
    2542,  2491,  2328,  2443,  2445,  2605,  2641,  2379,  2504,  2388,
    2564,  2602,  2685,  2682,  2684,  2686,  2667,  2598,  2457,  2597,
    2537,  2635,  2532,  2556,  2628,  2553,  2661,  2615,  2475,  2662,
    2742,  2595,  2669,  2518,  2767,  2390,  2460,  2683,  2703,  2800,
    2660,  2652,  2649,  2492,  2700,  2701,  2702,  2704,  2705,  2706,
    2707,  2708,  2709,  2710,  2711,  2712,  2713,  2721,  2715,  2714,
    2716,  2717,  2719,  2718,  2720,  2722,  2724,  2725,  2726,  2727,
    2744,  2520,  2391,  2474,  2480,  2508,  2642,  2778,  2507,  2407,
    2495,   398,  2301,   380,  2302,  2323,  2324,  2325,  2322,  2326,
     166,     0,     0,  2900,  2899,     0,     0,  3081,  3082,   733,
       0,     0,     0,     0,     0,     0,  1963,     0,  1013,   733,
     733,     0,     0,     0,   318,  3109,  3109,  3126,  3128,  3130,
    2380,  2330,  2395,     0,  2258,     0,     0,     0,  1733,     0,
    2334,     0,  2414,  2416,     0,     0,  1400,  1400,   897,     0,
       0,     0,  2439,  2440,  2264,     0,     0,     0,  2255,  2265,
    2484,  2488,  2490,     0,  2257,  2501,     0,     0,     0,     0,
    2525,  2267,     0,     0,  2568,  2570,     0,     0,  2574,  2575,
    2576,  2577,  2239,  1459,     0,   897,  2251,  2266,  2245,  2621,
    2622,     0,  2632,     0,     0,  2672,     0,     0,  2677,  2687,
       0,     0,  2746,     0,     0,   897,  2238,  2765,  2763,  2764,
    2766,     0,  2256,  2361,  2268,     0,  2781,  1400,   897,   897,
       0,     0,     0,  2791,  2792,  2799,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2518,  2744,     0,     0,  1392,     0,     0,     0,  1458,     0,
    1543,  3100,  1936,  1391,  1395,  1412,  1417,  1434,     0,  1451,
    1470,  1471,  1473,  1581,  1472,  1479,  1602,  1480,  1603,  1478,
    1477,  2252,  1476,  2262,  2261,  1475,  2253,  2263,  2254,  1393,
    1469,  2281,  2301,  2280,  1486,  3098,  1958,  1958,  1958,     0,
       0,  1958,  1958,     0,     0,  1958,     0,  1958,  1958,  1958,
       0,     0,   157,  2142,   468,   469,     0,  2953,  2966,  2967,
    2963,  2968,  2986,  2969,  2973,     0,  2965,  3058,  2314,     0,
    2972,     0,  3058,  2970,     0,  3058,     0,  2971,  2976,  2987,
    3058,  2964,  2303,  2313,  2312,  3058,  2802,  2801,  2304,  2803,
       0,  2955,     0,  2286,     0,     0,  1978,  1979,  1977,  1222,
       0,     0,  2191,  2192,     0,  2195,     0,  2196,  2199,     0,
    2896,     0,     0,     0,     0,     0,  1317,     0,  1981,  2024,
    1982,  1980,  1958,     0,   434,   443,   445,   446,   442,     0,
       0,  3082,  3093,  3108,  3103,  3102,  3105,  3106,  3107,  1377,
    3104,  3101,     0,  1373,  1375,  1376,   950,     0,     0,  2843,
    2846,  2580,  2614,  2847,  2768,  2844,  2673,  2845,  2375,     0,
       0,  2307,  2870,  2805,  2806,  2807,  2804,  2308,  2813,     0,
    2837,     0,  2103,     0,   950,  2122,     0,     0,  2122,     0,
    1891,  2106,  2111,  2109,     0,  2849,  2083,  2850,  2102,     0,
    2059,  2082,     0,  2038,  2075,     0,  2851,  1247,  2105,     0,
    1891,  1248,  2066,  2122,     0,     0,     0,     0,     0,     0,
       0,   446,  1236,  1247,  1254,  1269,  1235,  1269,  1371,  2286,
    2037,     0,     0,     0,  2910,     0,  2193,     0,  1370,  2000,
       0,  1859,  1862,  1864,  3174,     0,     0,     0,  3169,     0,
    3175,     0,     0,  2280,     0,     0,     0,     0,     0,  3099,
       0,     0,     0,     0,  1993,  1352,     0,     0,     1,    11,
       0,     0,  1400,  2311,  2781,     0,  2310,  2309,  2315,  2317,
    3011,  3056,  3062,     0,     0,     0,  1234,  1238,  1239,  1241,
    1242,  1243,     0,     0,     0,  1343,  1379,  1346,     0,  3095,
    3095,  3095,  1891,  1883,  1882,  2030,  2023,  2135,  2484,  2138,
    2018,  2139,     0,  1062,  1135,     0,  1066,     0,     0,     0,
       0,  2913,     0,  1064,     0,  2104,  1142,     0,  1093,     0,
       0,  3135,  1068,     0,  3079,     0,  1327,  1338,  1725,   397,
       0,   170,   167,   168,  1283,  1954,  1303,     0,  3085,     0,
       0,     0,     0,  3131,     0,     0,     0,   580,     0,     0,
       0,     0,     0,   733,  3135,  3135,  3109,  3129,     0,     0,
    1852,  1493,  1852,  1852,  1852,  1734,     0,     0,     0,     0,
       0,     0,     0,  1852,     0,  1537,  1509,     0,  1538,     0,
       0,     0,  2269,     0,     0,     0,  1490,     0,     0,  1725,
       0,  1694,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1729,  1731,  2280,  1852,     0,     0,  1852,     0,     0,
       0,     0,     0,  1405,   946,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1852,  1852,     0,     0,
    1852,  1551,  2271,     0,     0,     0,  2270,     0,     0,     0,
    2260,  2259,  2240,     0,  1554,  1556,  1555,     0,  1852,  1852,
       0,     0,     0,  1852,  1852,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1852,  1483,
    1482,  1484,     0,  1993,  3100,     0,  2852,  1692,     0,     0,
    1455,  1454,     0,  1453,  1452,  2300,     0,  1394,     0,     0,
    1399,  1398,  1460,  1461,  1462,  1463,     0,  1464,  1465,  1466,
       0,     0,     0,     0,     0,     0,  1457,  1456,     0,     0,
       0,     0,  1436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1485,     0,     0,  2295,  2241,     0,     0,  1597,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1964,
       0,     0,     0,     0,     0,     0,  1958,   159,     0,     0,
    2954,  2946,  2984,  2983,  2988,     0,  2985,  2981,  2989,  2990,
    2974,     0,  2960,  2978,     0,  2962,  2980,  2979,  2959,  2975,
    2982,  2961,     0,  2957,  2949,     0,     0,  1848,  2923,     0,
       0,   165,     0,  1223,  1982,     0,  3188,  3185,  2189,     0,
    2200,  2201,  2197,     0,     0,     0,     0,  2102,     0,  2185,
    3094,  1319,     0,     0,     0,  1983,     0,     0,  2169,  2178,
    2174,  2176,  2168,  2171,   435,     0,     0,   465,  1959,  2953,
       0,     0,  3088,  3085,  1363,  1374,   949,     0,     0,   952,
    2869,  2001,  2002,   961,     0,   951,     0,     0,     0,     0,
       0,  2815,  2881,  2878,  2877,  2828,  2823,  2822,  2319,  3007,
    2821,     0,  2856,     0,   956,   958,   957,  2866,   955,     0,
       0,  2768,  2816,  2837,     0,     0,  2814,     0,  2118,     0,
       0,  2124,  2081,     0,   733,     0,     0,     0,     0,     0,
       0,     0,  2053,  2101,     0,  2100,     0,  2074,  1892,  2116,
    2117,  2122,     0,  2115,     0,  2122,     0,  2089,  2106,     0,
    2122,  2050,     0,     0,  2042,  2047,  2043,     0,  2049,  2048,
    2051,  2039,  2040,  2118,  2065,  2106,  2073,  2080,   308,  2064,
    2070,  2078,  2106,  1011,  1010,  1009,     0,     0,  2106,  2122,
    2122,   441,     0,     0,  1253,  1255,  1256,  1274,  1273,  1250,
    1270,  1271,   308,  2035,  3186,  3187,  2909,  2007,     0,  1860,
       0,     0,     0,  2244,  2243,  3171,  2242,  3179,  3181,  3165,
       0,  3168,  3167,  3176,     3,     0,     0,   670,     4,     6,
       0,     0,     7,  1345,  1994,  1356,  1357,    12,   151,  2318,
       0,     0,     0,     0,  1089,  1090,  1090,     0,     0,     0,
       0,     0,     0,     0,     0,  3046,  1088,  3009,  3009,  3042,
    3009,  3009,  3009,     0,     0,  1117,     0,     0,     0,     0,
    1384,  1383,  1386,  2451,     0,     0,  1935,  1929,  1932,  1931,
       0,  1378,  1348,  1347,     0,  3097,  3096,     0,     0,     0,
    1349,  1891,  2034,  2033,  2032,     0,  2030,  1222,     0,  2137,
       0,     0,  2127,  2128,  2129,  2130,  2131,  2126,  2125,  2140,
    2141,  3133,  3134,  3132,   963,  3127,   381,     0,     0,  2915,
    2921,     0,     0,   381,     0,     0,  2003,  2003,     0,  2003,
    2003,   649,     0,   648,  2003,   739,   601,   603,   604,   638,
     605,   606,   607,   608,   609,     0,  1220,  2003,  1220,     0,
    2003,  2003,  1220,  2003,     0,     0,  2003,  2003,  2003,  2003,
       0,     0,   964,  2003,     0,     0,  1220,     0,  2003,     0,
    1204,     0,     0,  2003,  2003,  2003,  2003,  2003,  1220,     0,
       0,  2003,  2003,     0,  1230,     0,     0,  2003,     0,  2003,
    2003,  2003,     0,  2003,  2003,     0,  2003,     0,     0,  2003,
    1164,  1165,  2003,  2003,   775,  1175,   735,   762,   763,     0,
    1060,  1061,  1136,  1138,  1208,  1144,  1143,  1172,  1177,  1206,
    1207,     0,  3200,  1072,     0,     0,  1071,  3135,  1298,     0,
       0,  1006,  1005,     0,     0,  1338,  1329,  1727,     0,  1726,
     379,     0,     0,  1285,  1284,     0,  1282,  1311,  1310,  1308,
       0,  1309,  1307,  1302,  1304,  1305,  3084,     0,     0,  3086,
    3090,     0,   316,     0,     0,     0,     0,     0,   733,     0,
     582,     0,  3019,  3054,   331,   314,     0,  1039,     0,     0,
     733,   733,   733,   733,  3123,  3111,  3118,  3119,  3122,  3121,
    3120,   733,  3117,  3110,  3113,  3114,  3116,  3115,  3135,     0,
       0,  1853,  1852,     0,     0,     0,     0,     0,     0,  1735,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1401,
       0,   898,  1563,     0,     0,     0,     0,     0,  1824,  1825,
    1826,  1827,  1835,  1828,  1829,  1830,  1837,  1842,  1831,  1832,
    1838,  1839,  1840,  1833,  1841,  1836,  1834,  1843,     0,  1823,
       0,     0,  1847,  1844,  1846,  1845,     0,  1695,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1852,     0,     0,     0,  1852,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1573,     0,     0,     0,     0,     0,  1852,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1533,     0,  2283,
    2282,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1638,     0,  1638,     0,     0,     0,  1641,  1642,
    1640,  1643,     0,     0,     0,     0,  1852,     0,  1994,  1487,
       0,     0,     0,     0,     0,     0,     0,  1390,  1397,  1396,
    1403,  1402,  1404,  1408,  1413,  1406,  1410,     0,  1467,  2387,
    1415,     0,     0,  1448,     0,  1418,  1428,  1449,  1432,  1439,
    1440,     0,  1435,     0,  1437,  1438,     0,  1442,     0,  1441,
    1445,  1446,  1447,  1450,     0,     0,     0,     0,  1474,  1481,
    1503,  1504,  1395,     0,  1598,  1599,  2276,  2284,  1939,  1946,
    1941,     0,  1964,  1943,  1951,  1958,  1968,  1969,  1948,   739,
    1966,  1947,   610,  3005,  1944,  1224,  1953,  3213,     0,     0,
     158,     0,     0,     0,     0,  2159,  2161,  2164,  2160,     0,
    2163,     0,  2162,  2143,  2146,  2152,  2165,     0,     0,   466,
     470,   472,     0,   475,     0,  2977,  3060,     0,     0,  2958,
    2951,  2952,  2950,     0,  2991,  2956,  1849,     0,  2922,  2481,
    2588,     0,  1854,  2287,  3190,     0,     0,     0,     0,  2198,
       0,  2898,  1848,  2897,  2901,  1313,     0,   154,   155,     0,
       0,     0,  1318,  1322,     0,  1287,  1763,  2173,  2182,  2180,
    2180,     0,   433,   458,   453,   461,   455,   457,   456,   462,
     463,   464,   459,   454,   460,   447,     0,  2940,     0,     0,
    2949,  3089,     0,  3091,     0,  1854,  1364,  1363,     0,     0,
       0,  2872,     0,  2868,  2867,     0,  1090,  2297,  1090,     0,
    2883,  2884,     0,  2875,     0,  2876,     0,  2827,     0,     0,
    2830,     0,     0,     0,     0,     0,     0,     0,  2871,  2836,
    2835,     0,  2838,  2839,     0,  2842,  2892,  2893,  2890,  2891,
    2894,  2895,  2889,  2863,     0,  2120,  2123,  1856,     0,     0,
    2098,  2092,  2091,  2087,  2093,  2099,  2088,  2060,  2061,  2062,
    1900,  1901,  1899,  1893,  1894,  1898,  1897,  2056,  2107,  2097,
    2095,  2084,  2122,  2096,  2094,  2044,  2045,  2046,     0,  1891,
       0,  2120,  2122,     0,  2090,  2122,     0,     0,  2122,  2077,
    2079,  1259,  1260,     0,     0,  1275,     0,  1249,  2012,  2011,
       0,  2008,  2010,  1999,  1861,     0,  1866,     0,     0,     0,
    3166,  3182,  3164,  3170,  3177,  3178,  3163,  2284,     0,   671,
       0,     0,   674,     0,     0,  2003,    13,    10,  1125,     0,
       0,  3053,     0,  3009,  3009,     0,     0,  3014,  2316,     0,
       0,     0,  3051,     0,     0,     0,     0,  3039,     0,  3040,
    3043,     0,  3044,  3045,     0,     0,  3066,  3064,     0,  3065,
    3063,  2996,  3011,  3057,     0,  1097,  1246,  2292,  1245,  1244,
    1240,     0,     0,  1389,  1386,  1380,  1387,  2296,  1934,   953,
    1930,     0,     0,  1887,  1884,  1886,  1353,  1354,  1355,  1350,
       0,     0,  1956,  2028,  2031,     0,  2136,     0,     0,   963,
     722,   724,   731,   730,   732,     0,  1067,  2920,  2919,     0,
       0,     0,     0,  1065,     0,     0,   599,  2004,     0,     0,
     599,     0,     0,     0,     0,   740,  2104,  2003,  1221,  1056,
    1007,  1314,  1007,  1181,     0,  1056,     0,     0,     0,     0,
       0,     0,  1314,     0,     0,     0,     0,     0,  1314,     0,
       0,     0,     0,     0,  2003,     0,  1190,     0,  1146,     0,
       0,     0,     0,     0,     0,     0,  1191,     0,     0,     0,
    1147,  2003,     0,     0,     0,     0,     0,     0,  1314,     0,
       0,     0,  1314,  1233,     0,  1232,  1231,     0,     0,  1314,
    1314,     0,   772,     0,     0,     0,   768,   769,     0,     0,
       0,     0,  1168,  1169,     0,     0,     0,   736,  2003,  2003,
       0,  1140,  1137,   963,   963,     0,  2003,  3208,  1126,     0,
       0,  1069,     0,     0,  1294,  1331,  1325,  1330,  1328,  1338,
       0,  1814,     0,   399,     0,     0,     0,     0,     0,     0,
       0,     0,   308,   172,     0,   202,   206,   214,   218,   204,
     300,   302,   210,   212,   216,   224,   236,   222,   240,   226,
     228,   230,   232,   220,   234,   208,   246,     0,     0,   242,
     244,     0,   248,   250,     0,   238,     0,     0,     0,     0,
     245,   203,   207,   249,   215,   219,   247,   205,   301,   303,
     211,   213,   243,   217,   221,   223,   225,   241,   227,   229,
     231,   233,   235,   239,   237,   209,   251,     0,   308,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   200,     0,     0,   285,  1955,  1312,
    1306,  3083,  3087,   734,   963,     0,     0,     0,     0,     0,
       0,   581,     0,   584,     0,     0,  3018,  3019,  3022,  3023,
    3024,  3025,  3026,  3027,     0,     0,  3062,  2003,     0,     0,
       0,  1040,   963,   733,     0,     0,     0,     0,     0,  3112,
       0,  1559,     0,  1653,  1702,  1653,  1653,  1653,     0,     0,
       0,     0,     0,     0,  1560,     0,  1507,  1561,  1562,     0,
       0,     0,  1653,     0,   899,     0,     0,  1510,  1511,  1500,
       0,     0,  1582,     0,  1698,  1512,     0,     0,     0,     0,
       0,  1583,  1730,     0,  1732,  2284,     0,  1653,  1567,  1518,
       0,  1653,     0,  1519,  1584,  1585,  1586,     0,  1588,     0,
    1569,     0,     0,  1572,     0,     0,  1521,  1653,  1653,     0,
       0,     0,     0,  1653,  1523,     0,     0,     0,  1522,     0,
       0,     0,     0,     0,     0,     0,  1525,     0,  1501,  1653,
    1653,  1575,     0,     0,  1577,     0,  1534,  1852,  1653,  1690,
       0,  1630,  1629,  1647,     0,     0,  1647,     0,     0,  1644,
       0,  1631,  1628,  1627,     0,     0,  1653,     0,  2853,  2854,
    2855,  2873,  1693,  1691,  1491,  1409,  1414,  1407,  1411,  1416,
       0,     0,     0,  1427,     0,     0,     0,     0,     0,  1419,
    1430,  1433,  1601,  1589,     0,  1725,     0,     0,  1209,  1950,
       0,  2104,  1949,   611,   612,   614,     0,  1226,  1225,  1945,
    3214,  1942,  1224,     0,   160,   162,  2157,  2154,  2153,  2155,
     308,  2156,     0,  2166,  2144,  2439,  2765,  2766,     0,   479,
       0,   451,   450,   452,   476,     0,     0,  2949,  3059,     0,
       0,  3000,  3003,     0,     0,     0,  2944,  1851,  2933,  2929,
    2934,  2936,  2932,  2935,  2937,  2930,  2931,  1854,     0,  1891,
    1855,  1763,  3184,  3189,  1333,  1334,  1338,     0,     0,     0,
     156,     0,     0,  2186,     0,  1320,     0,     0,  1292,  1291,
    1293,  1286,  1288,  1289,     0,     0,  1764,     0,  2179,  2181,
     308,   308,  2170,     0,     0,     0,     0,     0,  1960,     0,
    3092,  1366,     0,     0,     0,     0,  1365,  1367,  1368,  1740,
    1739,  1770,  1767,  1766,  1769,  1768,  1771,  1763,  1848,  1873,
    1854,     0,     0,     0,   960,   962,   959,     0,     0,  3009,
    3009,     0,     0,  2888,  2880,  2882,  2879,  2829,  2320,  3008,
       0,  2859,  2860,  2861,  2857,  2858,     0,  2864,  2862,     0,
    2841,  2119,     0,  1891,     0,  2086,     0,     0,     0,  2058,
       0,  2076,  2041,  1891,  2057,     0,  2055,  2106,  2106,  2054,
    1258,  1257,     0,  1261,  1272,  2006,     0,  1865,     0,  1863,
    3172,  3180,     0,     0,     0,     0,     0,     0,     0,     0,
     676,     0,   672,     0,     0,  1084,     0,  3028,  1091,  1083,
    1082,     0,  3013,  3047,  3024,  1085,  1086,  1087,  3012,     0,
    3030,  3049,  3009,     0,  3009,  3009,  2999,  2998,  2997,  2994,
       0,     0,     0,     0,     0,  1118,  1120,     0,     0,     0,
       0,  1094,  1098,  1099,  1385,  1388,  1381,     0,  2206,  1928,
    1382,  1889,  1890,  2278,  1888,     0,     0,  1848,  2286,     0,
       0,     0,  2288,     0,  1926,  1927,  1911,  1912,  1910,  1913,
    2132,  1914,  1925,  2003,   723,  2003,     0,     0,     0,     0,
       0,     0,     0,   382,   391,     0,     0,  2914,     0,   626,
       0,     0,     0,     0,     0,     0,     0,     0,   336,   633,
    1075,   739,  1921,  1923,  1920,  1922,   639,   652,  1924,   653,
     650,  1076,   637,   640,  1077,  3215,   651,   602,     0,   809,
    1057,  1008,  1056,  1148,  1056,     0,     0,     0,  1007,   812,
    1056,     0,  1036,  1057,   808,     0,  1215,  1214,  1216,   810,
     810,     0,     0,     0,  1918,  1919,  1917,  1915,  1916,   751,
     746,     0,  1908,  1909,  1905,  1906,  1904,  1907,   757,  1170,
    1303,  1171,  1821,     0,   748,   749,   750,   770,     0,     0,
     759,     0,  1188,  1189,     0,  1151,  1186,  1187,  1224,   741,
       0,     0,     0,   788,   789,   787,   764,   771,  1218,  1217,
    1219,   744,   745,     0,     0,  1205,  1880,  1887,   777,   752,
     776,   747,     0,     0,     0,  1199,  1159,     0,   786,   784,
     781,   783,   782,   785,   760,   753,   754,   756,   755,   767,
     758,  1158,  2165,   742,   743,   773,   774,     0,     0,  1141,
    1220,  1220,  1176,  1173,  1174,  1139,  1145,  1178,   634,   635,
     610,     0,  2003,  3210,     0,  1128,  1130,  3136,  3137,  1864,
       0,     0,     0,  1817,     0,  1818,  1815,  1816,     0,  1728,
       0,     0,     0,     0,     0,     0,     0,     0,   171,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     169,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   317,   963,
     728,     0,   615,     0,     0,     0,   326,     0,  2003,  2003,
    2003,  2003,   321,   739,   586,   588,   589,   590,   591,   592,
     595,   593,   596,   594,   597,   598,   610,  3020,  3016,     0,
    3017,     0,  3055,  1117,     0,  1045,  1047,  1046,  1042,  1041,
       0,     0,  2205,     0,  2204,   808,   311,   655,   657,   660,
     658,   739,   737,   662,     0,     0,   345,     0,   380,  3158,
       0,     0,     0,  1653,  1604,  1654,  1606,  1607,  1612,     0,
    1736,     0,  1497,   911,   911,   895,  1710,   891,   883,   889,
    1724,  1715,  1719,  1722,  1721,  1723,     0,   867,  1718,  1720,
     881,  1706,   895,  1708,  1711,   911,  1716,  1505,     0,     0,
       0,     0,     0,  1653,  1614,  1653,     0,     0,     0,     0,
       0,     0,  1696,     0,     0,     0,  1502,     0,  1593,  1653,
    1618,  1653,  1616,     0,     0,     0,     0,     0,     0,     0,
    1622,  1620,     0,     0,     0,     0,  1653,  1624,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1621,
    1623,     0,     0,     0,     0,     0,  1608,  1661,  1655,  1656,
    1657,  1658,     0,     0,     0,  1645,  1647,     0,  1647,     0,
    1632,     0,  1557,  1653,  1610,  1488,     0,  1425,  1420,     0,
    1429,     0,  1444,  1443,     0,     0,     0,  1600,     0,  2277,
    2285,  1940,  1938,  1211,  1210,  1952,  1967,  2104,  3006,  1937,
     163,     0,  2158,  2151,  2147,  1692,     0,   471,   480,   473,
     477,   478,   474,     0,  3061,  3069,     0,     0,     0,     0,
    1891,     0,  2924,     0,     0,  1338,  1340,  2202,     0,  2904,
    2905,  2903,  2902,  2188,  2187,     0,  1323,  1324,  1290,     0,
       0,  1996,  1995,     0,  1973,  1975,  1984,  1987,     0,  2183,
    2175,  2177,     0,   448,     0,  2949,     0,     0,  2938,     0,
       0,  1848,     0,  1740,  1770,  1767,  1766,  1769,     0,     0,
       0,     0,  1753,  1761,  1759,  1761,  1756,     0,     0,     0,
    1848,  1864,     0,  1857,  1873,  2826,  2825,  2824,  1090,  1090,
    2818,  2817,  2886,  2885,  2887,  2832,   739,  2831,     0,  2840,
    2121,  2067,  2072,  2071,  1896,  1895,  2085,  2052,   308,   309,
    1854,  2122,     0,  1281,     0,  1277,  1276,     0,  1263,  2009,
    1867,     0,  3183,     5,     0,     0,     0,     0,   675,     0,
     685,     0,     0,     0,     0,  3191,  3029,     0,     0,  3052,
       0,     0,     0,  3037,  3010,  3041,  3038,  2995,  1123,  1121,
    1122,  1124,  1119,  1102,  1101,  1103,     0,     0,     0,  1116,
    1115,  1114,     0,     0,  1081,  1100,   954,     0,  2214,  1885,
       0,  1763,     0,  1854,  1957,  2029,  2028,     0,     0,     0,
     385,   388,   386,     0,   387,     0,     0,  2917,     0,   636,
    1074,   739,   628,   630,   631,   632,   340,   339,   341,   342,
     344,   343,   338,  1080,     0,   646,     0,     0,     0,     0,
       0,  1056,  1003,  1004,   811,     0,   806,   813,     0,     0,
       0,     0,     0,   794,   796,   797,     0,   880,   834,   825,
     911,   828,   827,   971,   895,   839,   886,     0,   888,   885,
     860,   859,   876,   858,   863,   847,   971,   971,   846,   879,
     971,   864,   862,   866,     0,   867,   887,   872,   861,   865,
     857,     0,   878,   911,   895,   895,   843,   877,   971,     0,
     870,   911,   799,   915,   845,   978,     0,     0,   911,   913,
     891,  1197,  1198,  1044,  1043,  1196,     0,     0,  1154,     0,
    1155,     0,  1157,   961,   961,   765,  1162,  1185,  1184,     0,
    1163,   766,  1227,  1153,     0,  1881,  1152,     0,     0,     0,
    1287,     0,   779,   778,  1079,  3204,  3201,  3202,     0,  3212,
    3211,  3213,     0,     0,     0,   350,  3138,     0,     0,  1337,
    1339,     0,  1326,     0,   174,   175,     0,   176,   177,     0,
     178,   179,     0,   180,   173,   286,   306,   307,   253,   291,
     279,   290,   280,   293,   292,   294,   281,   282,   296,   297,
     295,   283,   284,   201,   278,   252,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   267,   270,   271,   268,
     269,   264,   299,   265,   298,   266,   272,   273,   274,   276,
     277,   304,   305,   729,     0,  2003,  2003,   320,   739,   617,
     619,   620,   621,   622,   625,   623,   624,   326,     0,     0,
     325,     0,     0,     0,     0,     0,  2104,   322,     0,     0,
     332,  1097,  3198,  3199,  3200,     0,   661,   312,     0,     0,
     656,   654,   963,   659,     0,     0,  3153,     0,     0,   576,
     575,     0,     0,  1535,  1605,  1737,     0,     0,   912,  1703,
     971,     0,  1713,     0,  1714,   893,   892,   884,   882,  1717,
     890,   868,  1707,  1712,  1709,  1705,  1506,     0,     0,  2272,
    1508,  1499,  1498,  1615,  1613,     0,     0,  1541,  1565,     0,
    1542,     0,     0,     0,     0,     0,  1514,     0,  1517,     0,
       0,  1595,  1619,  1617,  1568,  1587,  1544,  1570,     0,  1520,
    1489,     0,  1545,     0,  1550,  1548,     0,  1625,  1524,     0,
       0,  1531,     0,  1529,     0,  1530,     0,  1532,  1574,  1576,
       0,     0,     0,     0,  1653,  1662,     0,  1663,  1649,  1648,
    1635,     0,  1639,     0,  1636,     0,  1650,     0,  1790,  1611,
    2874,     0,  1424,  1426,  1422,     0,  1431,  1590,  1213,  1212,
     613,   161,  2149,     0,  2145,     0,     0,     0,     0,  2948,
    3002,  3001,  3004,  3067,  2992,  2925,     0,     0,  2013,  2015,
    1335,  1338,  1340,     0,  1336,     0,  2203,  2906,  2907,  1321,
       0,  1820,  1974,  2021,     0,     0,     0,  1991,  2275,  2274,
    2282,  2007,  1992,  1998,     0,     0,     0,  1960,     0,     0,
       0,  1864,     0,  1778,  1772,  1774,  1775,  1777,     0,     0,
    1740,  1739,  1369,  1755,  1754,  1762,     0,  1760,  1761,  1761,
       0,     0,  1749,  1748,     0,  1811,  1779,     0,     0,  1868,
    1857,  3009,  3009,     0,  2865,  2068,  2069,  2063,     0,     0,
       0,     0,     0,  1265,  3173,     0,   681,   668,     0,   666,
     670,     0,   663,     0,     0,   679,     0,     0,     0,  2299,
    2298,  3031,     0,  3032,     0,  1106,     0,  1105,  1111,  1108,
    1107,     0,  1096,  1095,     0,     0,     0,     0,  2207,  2209,
       0,  1933,  1854,  1854,  2287,  2026,     0,  2289,  1854,   725,
     780,   390,   389,   395,   396,     0,  2916,  2104,   337,     0,
    1150,     0,     0,   687,     0,     0,     0,   814,     0,     0,
    1054,     0,  1053,  1887,  1037,  1038,  1180,   808,   799,   833,
     826,   844,   965,   976,   974,   968,   869,   971,     0,   972,
     973,   830,   842,     0,   853,     0,   848,   971,   856,   852,
     868,   871,   873,   875,     0,   971,   841,   840,   850,   837,
     900,     0,  1227,   800,   925,     0,     0,     0,     0,  1456,
     919,     0,   983,     0,     0,   928,     0,  2003,  2003,     0,
     936,   815,   916,   918,   817,     0,   939,     0,   979,   978,
     832,   971,   978,   900,     0,   914,   900,   900,  1194,     0,
    1195,  1227,  1822,  1203,  1202,     0,     0,  1229,  1183,  1879,
    1201,  1200,     0,  1156,   761,     0,     0,  3206,     0,  3209,
    1092,     0,   360,     0,     0,  1127,     0,   353,   351,   362,
       0,  1300,  1295,  1819,   181,     0,   183,   185,   190,     0,
     192,  2321,     0,   195,     0,   197,  2293,   199,     0,   186,
       0,     0,   287,   289,     0,     0,     0,  2104,   324,     0,
       0,     0,     0,     0,     0,   583,   645,   641,   647,   644,
     587,  3021,     0,  3036,  3034,  3035,  1094,  3208,     0,     0,
     963,   738,     0,     0,   400,   792,   793,   791,   790,     0,
    3159,   579,   577,   578,     0,     0,  1738,     0,     0,     0,
       0,  1704,     0,     0,  1494,  1505,  2273,     0,     0,     0,
       0,  1699,  1701,  1697,  1653,     0,     0,     0,     0,     0,
    1492,     0,  1591,     0,     0,     0,     0,     0,     0,  1528,
    1526,  1527,   980,  1579,  1578,     0,  1609,  1659,     0,  1665,
    1646,  1634,  1633,     0,  1647,  1558,     0,  1798,  1799,     0,
    1791,  1792,     0,  1421,     0,     0,     0,   488,   483,   491,
     485,   487,   486,   492,   493,   494,   495,   489,   484,   490,
     482,   481,     0,     0,     0,  3076,  1854,  2013,     0,  2015,
       0,  1972,  1332,  1341,     0,  1765,     0,     0,  1985,  1988,
       0,     0,     0,     0,     0,   449,     0,     0,  2943,  1961,
    1960,     0,  1780,  1369,  1741,  1757,     0,     0,  1750,  1758,
       0,     0,     0,     0,  1805,  1806,     0,     0,  1809,  1812,
    1813,  1776,  2279,  1877,  1876,  1858,     0,  1362,  1868,  2820,
    2819,  2833,  1280,  1279,  1278,  1262,     0,     0,  1267,   669,
       0,   667,     0,     0,   665,   673,     0,   680,     0,     0,
    3048,  3033,  3050,     0,  1112,  1113,  1110,     0,     0,     0,
       0,     0,  2208,     0,     0,  2215,  2217,  2027,  1882,  1882,
       0,   629,     0,   690,  1149,     0,     0,   807,     0,     0,
       0,  1025,     0,     0,  1050,   795,   798,   967,   966,   970,
       0,   969,   829,   978,     0,  1058,   849,   874,     0,   851,
     904,   905,   906,   838,   901,   903,   985,  1179,   931,   940,
     942,   941,   932,   930,     0,     0,     0,     0,     0,     0,
     947,   922,  2249,   948,  2250,  2246,     0,     0,   943,   944,
     945,   933,   929,   934,     0,     0,   935,     0,   917,     0,
       0,   927,   920,   921,   831,   835,   836,   822,     0,   823,
     824,     0,  1192,  1182,  1166,  1228,     0,  3205,  3203,  3207,
     361,   349,     0,     0,  1129,  1131,     0,     0,  1132,     0,
       0,     0,  1299,   182,     0,   191,     0,     0,   196,     0,
       0,   187,     0,   275,     0,  1014,   643,   642,   618,     0,
    1020,   327,   328,   330,     0,     0,   319,  3210,     0,   313,
     310,     0,     0,     0,   401,   403,     0,     0,   410,     0,
    1536,   909,   907,   910,   908,   896,     0,     0,     0,  1539,
    1540,  1566,     0,  1626,  1564,     0,  1515,  1592,     0,     0,
    1571,  1546,  1549,  1547,  1552,  1553,     0,     0,     0,     0,
    1667,  1651,  1652,     0,  1800,  1516,  1793,     0,     0,  1423,
    2150,  2148,  3067,  3070,     0,     0,  2945,  1891,  2015,  1864,
    1970,     0,     0,  2020,  2022,  1986,  1989,  1990,  2284,  2005,
    1997,  1960,     0,  2939,     0,  1773,  1752,  1751,  1744,     0,
    1746,     0,  1801,  1801,  1810,  1878,     0,  1874,     0,  1869,
    1870,  1361,  1264,     0,     0,  1251,   682,     0,   672,   686,
     664,  3195,  3015,  1104,  1109,  2212,  2213,     0,  2210,     0,
       0,  2216,  1902,  1902,     0,  1014,     0,   710,   688,  1020,
       0,  1049,  1025,  1887,     0,  2003,  2003,  2003,   801,  1026,
    1027,  1029,  1030,  1033,  1052,     0,   977,   975,   971,     0,
     971,   902,     0,   989,  2248,  2247,     0,   924,   926,   937,
     938,   931,   818,     0,     0,  1161,  1167,     0,   347,   352,
     363,   364,  1073,  3141,  3139,     0,     0,   184,   193,   194,
     198,     0,     0,   288,     0,  1209,  1015,  1016,  1018,     0,
    1209,  1021,  1022,  1024,     0,     0,   315,  1025,     0,   358,
    3154,     0,   961,  3152,   413,   411,   412,     0,   406,   408,
       0,     0,     0,  1495,     0,  1700,     0,  1594,  1596,   981,
       0,  1664,     0,  1688,  1687,  1689,  1660,     0,  1637,     0,
    1797,  1796,  3076,  3068,  3071,  2926,  1971,  2014,     0,  1763,
    2942,  1960,     0,     0,     0,     0,     0,     0,     0,  1875,
       0,     0,  1266,     0,   308,     0,     0,     0,     0,  3192,
    3193,  2211,  2219,  2218,     0,  2025,  2017,  2918,   802,     0,
       0,  2003,     0,     0,  2003,  2003,  2003,  2003,   705,   711,
     713,     0,   803,     0,     0,   804,  1055,  1032,     0,     0,
       0,  1028,  1887,   854,  1059,   855,     0,   988,     0,   993,
     923,     0,  1193,  1160,   354,  1133,   515,     0,  3140,  1297,
    1296,     0,     0,     0,   334,  1017,   323,   335,  1023,     0,
    1209,  3151,   350,   359,     0,   402,   404,  3160,   410,     0,
       0,   894,   895,  1513,  1580,  1666,     0,     0,     0,     0,
    1682,  1669,  1670,     0,     0,  2947,     0,  3077,     0,   953,
    2941,     0,  1848,  1745,  1747,     0,  1802,     0,  1814,     0,
    1872,  1871,  1268,  1252,     0,     0,  2003,     0,  3196,  1903,
     699,   692,   695,     0,     0,  2003,  2003,     0,     0,     0,
       0,     0,   689,   712,  2003,   805,  1048,  1031,  1034,  1035,
    1051,   986,     0,   990,   991,   992,     0,   984,     0,     0,
     356,   541,  2413,   527,   513,     0,     0,  2601,   517,   365,
     368,   366,  2018,   367,   373,     0,   374,   375,   376,   377,
     378,   369,   539,   540,   372,   370,   371,     0,  2305,     0,
    2306,  2366,  2365,  2367,     0,     0,     0,   188,     0,  1019,
     329,   333,   362,     0,   383,   407,   961,     0,     0,     0,
       0,  1677,     0,     0,     0,  1675,     0,  1671,     0,  1668,
    1673,  1672,     0,  2016,  2220,  2585,     0,  1783,     0,  1781,
    1804,  1803,     0,     0,   683,     0,     0,  3197,   699,     0,
     697,     0,   693,   691,   694,   721,     0,     0,   717,   718,
     716,   714,     0,     0,   707,     0,   987,     0,     0,   819,
     355,     0,   348,     0,     0,   526,   529,     0,     0,   532,
     522,   521,   523,     0,   516,   515,   515,   569,   520,   566,
     565,   558,     0,  3142,     0,     0,     0,   961,  3161,   409,
    3147,  1496,     0,  1678,     0,  1680,  1679,     0,     0,  1684,
       0,  1685,  2828,  3075,  3074,  3072,     0,  2206,     0,  1782,
       0,     0,   961,  1808,  1807,     0,   677,   683,  3195,   696,
       0,   703,     0,   701,   704,   719,   720,   710,   706,     0,
     715,   999,     0,   998,     0,   995,   994,   821,   820,   915,
     357,   542,   553,   556,   548,   528,     0,     0,     0,   518,
     515,     0,   502,   500,   501,   507,   508,   509,   510,   511,
     512,   503,   506,   504,   505,   515,     0,   418,     0,     0,
    3143,  3144,   189,   364,  3155,   393,   392,   384,     0,   515,
    3145,  3146,     0,  3149,     0,  1676,  1674,  1683,  1686,  3073,
       0,  2214,     0,  1784,  1785,  1788,   684,   678,  3194,   698,
     700,     0,   709,   708,  1001,  1002,  1000,     0,     0,   816,
       0,     0,   515,   549,     0,   524,     0,   533,     0,     0,
     416,   572,   570,   414,   560,   560,   346,   383,   394,  3162,
    3148,   515,  1681,     0,  2222,  1787,  1789,     0,   702,     0,
       0,   550,   556,   546,   554,   515,     0,     0,   514,     0,
     568,   417,     0,     0,     0,   515,     0,   559,   561,   563,
    3156,  3150,  2221,     0,  2226,     0,   997,   996,     0,   547,
       0,     0,   545,   525,   530,   515,   573,   515,   427,   426,
       0,     0,   496,   567,     0,   419,   515,     0,     0,  2233,
    1790,   551,     0,   515,     0,   515,     0,   515,     0,     0,
     961,     0,     0,   415,  3157,  2224,  2225,  2223,  2228,     0,
       0,  2230,  2231,     0,  2194,  1794,  1786,  1792,     0,   543,
     515,   531,   536,     0,     0,   422,   497,   498,     0,   424,
    2232,  2227,     0,  2234,  2236,     0,  1795,     0,   515,   515,
     532,   535,   574,   571,     0,     0,   420,   421,   432,   431,
       0,  2229,     0,     0,     0,   515,   515,   537,   440,   438,
     515,   428,   436,   430,     0,   437,   499,   425,  2235,  2237,
       0,   423,   439,   429
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4764, -4764, -4764, -4764, -4764, -4764,   -28, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764,  1569, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764,  1810,  1820, -4764, -4177, -4764, -4764,  1819,
   -4764,   408,  1818, -4764,   406, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764,  1809, -4764,   403, -4764, -4764, -4764, -4764, -4764, -4764,
   -2849, -1588, -4764, -4764, -4764, -4764, -4764, -4764,  1172, -4764,
   -4764,   401,  1378,  3920, -4764,   391, -4764,    84, -4764, -4764,
   -4764, -4133,   -35,  -209, -4764, -4764,    39,  3416,  -259, -3108,
   -4764, -4764, -4764, -4764, -4764, -4764,   210, -4764, -4764,    85,
   -4764, -4764, -1006, -4764, -4764, -4764, -4764, -4764, -4764,  -398,
    -354,  2355, -4764, -4764, -4764,  5120, -4764,  4077, -4764, -2778,
    2207, -4764, -4764, -4764, -4764, -4764,  2264, -2737, -4764, -4764,
   -4764,  1045, -4764, -4764, -4764,  -574,   116, -4764,   118, -4764,
     120, -4764,   122, -4764,   123,   125,   127,   129, -4764,   130,
   -4764, -4764,  -357, -4764, -4764, -4764, -4764,   134, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764,  -252, -4764, -4764,  -149, -4764,
   -4764,  -245,   135, -4764,  -226,   138, -4764,   140, -4764,  -164,
   -4764,  -161, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764,  1212,  2741,  4004,  2736, -1060, -4764,  1636, -4764,
   -4764,   787, -4764, -4764,   938, -1544, -4764,  2527, -2566, -2521,
   -1130, -2516, -4764, -4764, -4764, -3182, -3172, -1380, -4764, -1388,
   -2515, -2513, -2328,   766,  1787,  1790,  1783,    34, -4764,   991,
     357, -4764, -4764, -4764, -3557,   -93, -4764, -3901,   581, -4764,
   -4764, -4764, -4764, -3247, -4764, -4764,  -174, -4764, -4764,  -101,
     -98, -4764,   195, -4764,  2781, -4764, -4764, -2425,  -639,  2668,
   -4764, -2040, -1773, -2345, -1612, -1602, -4764, -4764, -4764,   780,
    1811,   940, -4764,   937, -1642,   890, -3714, -4764, -4764,  -564,
   -3010, -4764, -4764, -4480, -4764, -2548,  1413, -4764, -4764, -2538,
   -4764, -4764, -4764,  1383,  1385, -3353,  1671, -1760, -4764,   571,
     849,  -845, -4764,   -92, -4764,   896, -4764, -4764, -3909, -4764,
     -37, -2635,   141, -4764, -4764, -3149, -3667, -1579, -4764, -4764,
   -3554, -3904,  1718, -4764, -4764,   211, -4764, -4764, -4764, -4764,
   -4763, -4764, -1617, -2246, -4764, -4764,   368, -4764,   306,   369,
   -4764,   308, -4336, -4764,   358, -1902,  2060, -4764,  3354, -3141,
   -2514, -4764, -4274, -2230,   604, -2299,   944, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -1604, -4764, -4764,   819,  1265, -4764,
    2155,  1858, -4764,  2175, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764,  2717, -4764,   554,  -909,  2718, -4764,  2720,
     431, -2742, -1132, -4764, -1128, -4764, -1615,  3560, -2462, -3745,
   -4764, -4764, -4764, -4764, -4764,  3580, -4764, -4764, -4764,  2939,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764,  2946, -4764, -4764,
   -4764, -4764,  4189, -4764,  2945, -4764, -4764, -4764, -4764, -4764,
    1402, -4764,  2343, -4764, -4764, -4764, -4764, -4764,  2065,  3421,
   -4764, -4764,    55, -4764, -4764, -4764, -4764,  2345, -4764, -4764,
    3447,  1980, -4764, -4764,  1705,  2366, -1798,  1167, -1172,  5244,
       3,    37,    15, -4764, -4764,  3082, -4764, -4764, -2274, -4764,
   -4764, -4764, -4764,  4298,   776,  -957, -4764, -4764,  2908, -4764,
    4304,  3978,  3213,   527,  4900, -4764, -1308, -4764,   -31, -4764,
   -4764,  -883, -4764, -4764, -4764,  -721,   862, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,  2471, -4764,
   -4764, -4764,  3286,  2505, -4764, -4764, -2756, -4764, -2427, -1958,
   -4764, -2590,   331, -4764, -4764, -4764, -4764, -4764, -4764,   361,
   -4764,    56, -4764, -4764, -4764, -4764, -2099, -4764, -4764, -4764,
   -4764, -1078, -2614, -1148, -1173, -4764,  4062, -4764, -4764, -4764,
   -3017, -4764, -2736, -4764, -4764, -4764, -4764, -3145, -2862, -4764,
   -1340,  2365,  2369,  2370,  2374, -4764, -4764,   -33, -4764,    58,
   -4764,  -129, -4764,  -155, -4311, -4319,   516, -4764,   782, -4764,
   -4764, -4764,   255,  1463,   263, -2009, -2441, -1265,  1703, -4764,
   -4764, -2164,  4123, -2169, -2008,  1165,     5,  4257,  3738, -3181,
   -4764,   783, -4764,   374,  1723,   580, -4764, -4764,  1505, -1157,
   -4764,   410, -3186, -4764, -1059, -4764, -4764, -2928,   507, -2398,
   -2498, -2244, -2603, -2378, -4764, -4764,  2964,  -733, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764,  -576,  -597,   -99, -3950,
    5370,  3266, -4764,  2518,  4222,  4226, -4764, -4764,  3923,  1797,
    1798, -4764, -3788, -2620, -4764, -4764, -4764, -1013, -1408,   838,
    3765,  1233,  1807, -3002,   864, -2887,  4227, -4764, -3597,   872,
    4240,  4241, -3368,  3704, -4764, -4764, -4764, -4764, -4764,  3102,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764,  4424,   -43, -1397, -4764,
   -4764, -4764,  1417,  3830,  3105, -1005, -4764, -4764, -4764, -4764,
    4248, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
    2538,  2145, -4764, -4764, -4764, -4764,  3217, -4764, -4764, -4764,
    3223, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764,  1837,   132, -4764,  1184,    54, -4764,
     812, -4764, -4764, -4764, -4764, -4764,   -86, -4764, -4764,  -102,
   -2784, -1171, -1320,   939,  1084, -2481, -3826, -2084, -3277, -1223,
   -4764, -4764,   895, -3412, -3014,   601,  -775, -1307, -1313,    53,
    2329,  4015, -1572, -4764,  4897,  -899, -1670, -2131,   841,  4090,
      -6, -4764, -3242, -4764,  -163,   109,  2120,   -64,  3192, -3696,
   -4764,    -7,    16, -4764,   104,   286, -4764, -4764,   392, -4764,
   -4764, -4764,   163, -4764, -4764, -4764, -4764,  3913, -4764,  2435,
    5414, -4764, -4764, -4764,  3186,  5415,  -837, -4764,  3921,  3209,
   -4764,  3212, -4764, -4764, -4764, -2125, -4764, -4764,   139, -4764,
    2526, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764, -4764,
   -4764, -4764, -4764, -4764, -4764, -4764, -2095,  3977,  4451,  4012,
   -4764, -4764,  2376, -4764, -2824, -1426, -1217, -1538, -4764,  4320,
    2762,  2772, -2272, -1104, -1094,  -994, -1120,  -971,  -968, -4764,
    3791, -1566, -4764, -4764,  2088, -4764,  2768,   665, -4764, -4764,
     497, -4764, -4764,  1613,  4469,  3979, -4764, -4764, -4764, -4764,
   -4764,  2004, -4764,   -12,   -38, -4764,  -428, -4764, -4764, -4764,
      52,  5470,  5473, -4764, -4764,   207, -4764,  -838, -4764, -4764,
   -4764, -4764, -4764,  4250, -4764, -4764,  4254, -4764, -4764, -4764,
   -4764,  4255, -4764, -4764, -4764, -4764, -4764, -4764,  1571, -4764,
   -4764, -4764, -4764, -4764, -4764,   147, -4764, -4764, -4764,   178,
   -4764,  1493, -4764,  1112, -4764,  1054,   735,  1603, -2491
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,    66,  1140,  2367,    67,    68,    69,    70,    71,
    2197,    72,  1427,  2140,  2884,  2885,    73,   974,   732,    74,
    1862,  1861,  2582,  2583,  3904,  4395,  4396,  3913,  4410,  3907,
    4399,  4400,  3910,  4404,  4405,  2648,  2649,  2650,  2651,  2652,
    2653,  2654,  2655,  2656,  2657,  2658,  2659,  2660,  2661,  2662,
    2663,  2664,  2665,  2666,  2667,  2668,  2669,  2670,  2671,  2672,
    2673,  2674,  4411,  4412,  3920,  3926,  3931,  3953,  2675,  2676,
    2677,  2324,    75,    76,    77,    78,  2684,    79,  3980,  2706,
      80,  3157,  3158,  1904,  4005,  4385,  5054,  4389,  5150,  5252,
    5072,  3305,  4728,  5055,  5056,  5159,  3427,  2446,  5278,  3143,
    5367,  3144,    81,  1209,  4763,  4764,  4765,  4957,  4958,  4959,
    4960,  5445,  5340,  5413,  5446,  5534,  5540,  5470,  5550,  5551,
    5552,  5538,  1495,  5553,    82,  1006,  1007,  1497,  2225,  2899,
    2226,    83,    84,   936,  2159,  2160,  2161,  2162,  3582,  2900,
    3577,  3578,  4530,  5471,  5536,  5341,  5342,  5259,  5343,  5162,
    5344,  5263,  5345,  5165,  5346,  5347,  5348,  5349,  5437,  5350,
    5258,  5463,  5337,  5338,  5439,  5512,  5531,  5351,  5172,  5253,
    5400,  5173,  5254,  5432,  5333,  5433,  5458,  5508,  5334,  5401,
    5461,  5404,  5352,  5358,  5447,  5353,  5359,  5354,  5177,  5270,
    5357,  5268,  5356,  5443,  5442,  5486,  4011,  4454,  1890,  2693,
    3382,  3383,  3384,  3160,  3161,  1756,  2872,  2873,  2874,  3967,
    3968,  3969,  3760,  3761,  3762,  2456,  3300,  3149,  1757,  1758,
    1824,  1760,  3388,  3971,  3972,  3389,  3390,  1761,  3392,  1762,
    1763,  1764,  3166,  3416,  3417,  3418,  3419,  3420,  2362,  2363,
    3703,  3060,  3700,  4606,  4215,  5306,  4222,  4272,  4273,  4877,
    5233,  5121,  5229,  5122,  5231,  5312,  5313,  5132,  5243,  5244,
    5028,  5029,  5030,  2439,  2440,  3368,  3369,  2441,  1220,  1825,
    3421,  2466,  1826,  3259,  1827,  1828,  2444,  3274,  3246,  4449,
    3792,  3793,  3794,  4322,  3795,  3189,  2474,  3785,  3786,  4340,
    3842,  4700,  5329,  3843,  3844,  3845,  3846,  3847,  3848,  3849,
    4028,  3850,  4029,  4024,  4025,  4022,  1258,  4663,  4664,  4665,
    4018,  4019,  4356,  4341,  4342,  4343,  4672,  4691,   880,  4681,
    4298,  1513,  3108,  1536,  1537,  2995,  2243,  1829,  4299,  4300,
    4301,  4350,  4091,  4796,  4345,  4323,  4903,  5046,  5049,  5147,
    5325,  3190,  1854,  3182,  1606,   752,  4935,  4936,  4937,  4940,
    4941,  4942,  4888,  4889,  4890,  4891,  3191,  2710,  4892,  4893,
    3408,  4880,  4280,  4281,  4282,  3192,  4654,    85,    86,  1734,
      87,  1743,    88,  1736,    89,  1847,  1201,    90,  2558,    91,
      92,    93,    94,    95,  2373,    96,    97,  3734,  3101,  3102,
    3103,  2405,  3095,  3096,  1145,  3306,  3895,  4922,  1183,  1830,
    1831,  2552,  1832,  1833,  4915,  1834,  3220,  1835,  1836,  1837,
    1838,  3562,  3563,  3197,  3564,  3249,  2476,  1464,  2879,  4368,
    2528,    98,    99,  1156,  1157,  1158,  1159,  1160,  1161,  1084,
     100,   101,  2335,  5004,   102,  1614,  1615,  1616,  3688,  4213,
    4598,  4855,  1619,  1620,  1621,  3043,  3686,   103,  1866,   104,
    2951,  2952,  2953,   105,  4732,  2564,   106,   107,  1873,  1874,
    1875,   108,   238,   109,  1483,  1481,  2202,  2203,   110,  1205,
    1206,  2566,   111,  2934,  2935,  1855,  1856,  4144,   112,   113,
    1353,   115,   881,   117,   118,  2235,  2236,  2976,  2977,   119,
     120,  1022,  1023,  1024,  1165,  1166,  1692,  2414,  2415,  2416,
     882,   883,  1367,  1255,  1857,   885,   886,  2093,   887,  1368,
    1369,  4347,   888,  1380,  2081,   889,  4037,   890,   891,  4108,
     892,   893,   894,  4060,  4061,  4482,  2113,  2114,  2115,   895,
     896,   897,  2825,  2047,  2048,  4102,  3534,  4504,  3434,  3435,
    3528,  4848,  3530,  4096,  4097,  4499,  4800,  4976,  5090,  5201,
    5092,  5202,  5209,  4977,   898,   899,   900,  1978,  4053,  3482,
    4471,  1923,  3467,  1858,  1859,  1280,  1281,  1246,  2731,  1929,
    2978,  4179,  2979,  3647,  3648,  3649,  4190,  4186,  2955,  2956,
    2980,  2981,  2982,  2983,  2984,  2985,  2986,  4993,  5216,  5217,
    5427,  4509,  5506,  4510,  4511,  4512,  4997,  4577,  4578,  4579,
    4580,  4581,  3314,  3315,  3316,  4150,  3221,  1968,  1969,  1976,
    2177,  2178,  1924,  2929,  1551,  4199,  1136,  1111,  1112,  1632,
    2345,  4587,  4849,  4850,  3653,  4583,  4847,  3255,  3256,  1172,
    1173,  2424,  3113,  3114,  1567,  1568,  2303,  2304,  5015,  3260,
    3130,  3209,  3167,  3131,  3132,  1696,  1697,  1167,  1698,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,  2893,  2431,  1010,  3628,
     753,  2128,  2129,  2130,   139,   140,   979,  1000,  1486,  3614,
    3615,  4156,  3616,  1137,  3618,  4162,  1108,  2457,  2458,  4163,
    1109,  2340,  2341,  2342,  4539,  4541,   141,   142,  4152,  4153,
    1001,   143,  3122,  1715,  1716,   144,  1101,  1590,  1591,  1592,
    2319,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,  1564,  1085,  1765,  1571,  1087,
    1088,  1089,  1572,  2285,  3023,  1552,   189,   190,  1727,   191,
    1179,  1180,  1728,   192,  1428,  2153,  3574,  4124,  4515,  2154,
    2155,  2894,   193,  1003,  1492,  1488,  1493,  2209,  2210,  2208,
    2960,  2958,   194,   993,  1479,  2943,   195,   984,   196,   197,
     988,  2190,  1472,  4145,  3424,  3738,  4248,  4249,  4251,  4625,
    4626,  5297,  5454,  5497,  5479,  5500,  5501,  5504,  5523,  5524,
     901,  1635,   902,  4682,  4683,   903,   904,   905,   906,   907,
     908,  4467,  4157,   909,  2425,  4584,   910,  4154,   911,  2987,
    2432,   722,  4406,  4407,  1146,  1636,  2418,  2248,  4231,  1370,
    1123,   964,  5179,  1042,  1148,  1528,  1149,  2133,  1529,  2913,
     724,   725,   726,  5180,   727,   728,   968,  1047,   729,   198,
    1048,   199,  2257,   200,  3666,  3667,  1542,  1546,  2272,  2273,
    2274,  1090,  2064,  2266,  1543,  2275,  1051,  2842,  1521,  1522,
    2255,  1523,  2253,  1524,  3004,  2283,   201,  1474,   735,  2193,
    2194,  3601,   202,  1105,   203,   204,   205,  1191,   206,  2182,
    2927,  2928,   207,  2966,   208,  2164,  2173,  1431,   970,   971,
    2916,  3090,  2400,  2401,  2914,  2134,  1530,  2387,  1675,  1664,
    1893,  2696,  2697,  2698,  2699,  3074,  2701,  2702,  2703,  3400,
    1151,  1667,  1894,  1152,  1442,  2167,  1685,  4535,  4129,  5097,
    4816,   209,   239,   738,  1218,  1880,  2232,   210,   211,   212,
     213,  1707,   914,  2988,   915,  1025,  1234,   754,  1913,  1905,
     232,   233,   234,   757,   758,   235,  1845,  1846,  4390,  4924,
    5058,  5372,  5373,  1907,  5421,  1908,  1909,  4444,  5074,  5417,
    5476,  1910,  4008,  4768,  5194,  5369,   214,  1641,  1637,  1121,
    2356,  2350,  2352,   215,   216,  1467,   217,   218,  5009,  5010,
    3994,  2557,  3886,  3887,  4379,  3303,  3891,  2881,  3176
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     723,  1086,  1406,   114,  1401,   121,  1040,  1083,  1722,   913,
    1729,  1983,   932,  1895,  2029,   116,   973,  1711,  1514,  1518,
    2028,  1596,  1129,  2049,  2419,   992,  1122,  1282,  2938,  2174,
    1680,  2127,  1008,  1150,  2337,  1012,  1043,   966,  1547,  2126,
    1008,  1665,  1241,  1099,  3689,   721,  1677,  1106,  1128,  1113,
    3542,  1666,  2547,  1562,  3285,  3286,  1678,  2572,  2901,  1044,
    3855,  3235,  2374,  1194,  1839,  1759,  2989,  1134,  1840,  3593,
    3537,  3875,  2080,  2902,   933,   972,  1932,  1933,  1597,  1135,
    3168,  2821,  2822,  3168,  3168,   991,  3958,  3376,  3218,  2871,
     997,  1147,  3423,  1126,  2831,  2832,  2833,  3230,  3674,  3675,
    3470,  3739,  1098,  2379,  3471,  1985,  2382,  3073,  2384,  4033,
    1229,  1230,  3081,  1710,  2406,  2408,  2409,  1998,  1999,  2000,
    2050,  1971,  2442,  2002,  2473,  3650,  3472,  3385,  3896,  4339,
     965,  1198,  2443,  3172,  3173,  2969,   116,  3278,  3882,  4218,
    2389,  3280,  2390,  2392,  2393,  3629,  3018,  1045,   736,  2475,
    4258,  1349,  1350,  2481,  1351,  2445,  1679,  2485,  1174,  1214,
    1216,  3123,  2038,  3576,  1925,  1926,  1927,  1402,   990,  2504,
    3179,  2505,  3386,   996,  2930,  1937,  4344,  3387,  3394,  1681,
    3395,  2312,  1682,  2517,  3465,  1099,  3623,  2527,  3275,  3276,
    3973,  4807,  3465,  3685,  3466,  3409,  4363,  4364,  2322,  4806,
    3974,  4158,  3466,  4348,  2460,  2325,  1991,  2136,  1701,  1995,
    4402,  2328,  1544,  4538,  1184,  3111,   723,  4558,   759,   723,
    1147,  1195,  1099,  2176,  2877,  1458,  3184,  2930,  2012,  2013,
    3529,  4740,  2017,  1403,  3055,  2704,  1099,  3732,  3633,  3067,
    3210,  3068,  3057,  3872,  1181,  1403,  2305, -2334,  3411,  1782,
    2031,  2032,  4724,  3097,  3082,  2036,  2037,  3084,  1863,  3370,
    3085,  1186,  4304,  4308,  1193,  1403,  4309,  3565,  1320,  3247,
    2057,  3251,  3252,  2323,  2323,  1360,  1361,  1782,  1217,  1849,
   -1063,  1196,  3627,  4884,  4318,  4992,  4952,  1202,  1360,  1361,
    2240,  -739,  4310,  1360,  1361,  1207,  2813,  2941,  3436,  3437,
    3438,  1867,  3532,  1360,  1361,  1360,  1361,   967,  -726,  3640,
   -2114,  2562,  3168,  4614,  2229,  3474,  1360,  1361,  1360,  1361,
    4603,  4372,  1574,  3662,  3112,  3119,  1782,  2394,  1235,  1046,
    2729, -2113,  5288,  1360,  1361,  3617,  1881,  1360,  1361,  2459,
    3490,  2461,  2462,  2176,  3492,  2691,  2464,   985,  4122,  4884,
    1360,  1361,  1360,  1361,  3619, -2172,  1449,  -727, -1850,  2477,
    3500,  3501,  2483,  2484,  4881,  2486,  3507,  4548,  2489,  2490,
    2491,  2492,  3784,  1360,  1361,  2495,  1511,  1203,  4257,  1683,
    2507, -1078,  3519,  3520,  4980,  2512,  2513,  2514,  2515,  2516,
   -1965,  3526,  5007,  2520,  2521,  4292,  1906,  1914,  1579,  2531,
    2170,  2533,  2534,  2535,  2370,  2538,  2539,  4293,  2541,  3544,
    2370,  2544,  -600,   969,  2545,  2546, -2927,  3524,  1868,  4680,
    3569,  4294,  1869,  3397,  1633,  1360,  1361,  1360,  1361,  1009,
    -585,  3185,  1702,  1054,  1027,  1573,  1870,  1669,  4648,  1360,
    1361,  5289,  5402,  4007,  1731,  4704,   980,  3641,  4706,  2250,
    1321,  4302,  2331, -2834,  2948,  1403,  5370,  -627,  3412,  4954,
    2695,   240,  1446,  1360,  1361,  -616,  4461,  3642,  4885,  4955,
    4196,   986,  3736,  2234,  1612,  1096,  1054,  1027, -1850,  5105,
    3643,  4316,  4317,  2536,  2790,  5326,  1360,  1361,  1360,  1361,
    1947,  2354,  3168,  2077,  2230,  1519,  1507,  2497,  1360,  1361,
    4191,  2732,  4685,  1940,  1282,  2733,  3243,  1607,  2110,  2111,
    1864,  1705,  3665,  3307,  1506, -2928,  4292,  5232,  2395,  4359,
    2267,  5402,  1163,  1690,  3111,  5106,  4263,  3992,  4293,  1360,
    1361,  2271,  1162,  4685,  4885,  4801, -2927,  3580,  1360,  1361,
    4537,  1878,  4294,  1360,  1361,  1162,  5035,  1225,  1130,  2852,
    1404,  1125,  2805,  1175,  1054,  1027,  2438,  4927,  1360,  1361,
    3186,  3698,  1404,  3644,   733,  1652,  2307,   734,  1671,  4381,
    2310,  1739,  1871,  5247,  1672,  2314,  -739,  4667,  1569,  3168,
    1224,  1153,  1404,  3763,  1163,  5019,  3244,  1131, -2334,  1459,
    3672,  2708,  4312,  3864,  1898,  4313,  2212,  5290, -1850,  5196,
    2550,  3730,  3731,  2176,  2329,  2330,  1634,   240,  5020,  1740,
    4833,  5070,  4956,   995,  2709,  4802,  4713,  2759,  4382,  2171,
    1879,  4178,  4182,  1164,  3993,  4770,  2055,  1848,  4339,  1691,
    1570,  4193,  4194,  3112,  3308, -2928,  1164,  3481,  1706,  4296,
    4451,  2878,  2999,  1363,  3000,   934,  1364,  4264,  3581,  2865,
    2286,  3098,  2429,  3883,  5107,  2866,  1363,  1508,  1673,  1364,
    2498,  1363,  4377,  2086,  1364,  3704,  5456,  5457,  4607,  1673,
    1872,  1363,  1520,  1363,  1364,  2537,  1364,  5371,  1613,  -739,
    4685,  1732,  3414,  2109,  1363,  3645,  1363,  1364,  3245,  1364,
    1360,  1361,  3026,  3718,  3719,  3720,  3721,  1701,   981,  4403,
    3632,  1363,  4346,  2355,  1364,  1363,  2949,  1733,  1364, -1850,
    1360,  1361,  2251,  5277,  1357,  2332,  4360,  1512,  1363,    42,
    1363,  1364, -1850,  1364,  3777,  3862,  1092,  2877,  1684,  1099,
    1099,  1360,  1361,  1972,  2127,  -810,  1973,  1147,  5302,  1227,
    4574,  1363,  2126,  4652,  1364,  5008,  1701,  3089,  1129,  4897,
    3892,  4452,  2875,  4656,  5061,  5062,  3770,  3646,  3590,  4127,
    5136,  4659,  4825,  2741,  3533,  2172,  1360,  1361,  1407,  3856,
    3977,  2237,  1404,  1674,  1266,  2563,  3868,  4907,  3670,  4575,
    4103,  1093,  4105,  1405,  3187,  1210,  4288,  3928,  1215,  1215,
    4123,  3996,    49, -2993,  1575,  1363,  1283,  4705,  1364, -2114,
    3423,  3423,  1322,  2968,  3423,  2754,  3970,  1363,  1918,  1236,
    1364,  1461,  3583,  2730,  2398,  4917,  5073,  1411,  1412,  1413,
   -2113,  3654,  1416,  1417,  3651,  3879,  1420,  2442,  1422,  1423,
    1424,  1363,  3411,  3567,  1364,  3069,  3070,  2443,  3927,  3663,
    3932,  1502,  4934,  1850,  2722,  3743,    54,  2135,  2942,  4361,
    1360,  1361,  4311,  3181,  1363,  3181,  1363,  1364,  1154,  1364,
    2445,  3853,  3854,    55,  2876,  2901,  1363,  3659,  1515,  1364,
    1580,  1147,  3540,  1358,  1450, -1850,  1533,  1538,  1371,  4253,
    2902,  4990,   987,  3776,  2739,  3779,  4257,  2837,  3861,  3512,
    2950,  1354,  3327,  3339, -2927,  1865,  1565,  1363,  2700,  2195,
    1364, -2334,  4180,  1487,  1366,  1447,  1363,  3733,  2205,  1364,
    4615,  1363,  2766,  1414,  1364,  2289,  2770,  1366,  1419,  2930,
    4981,  1702,  1366,  2705,  5291,  5332,  1363,  3853,  3854,  1364,
    1456,  1482,  1366,  3917,  1366, -1063,  3922,  4095,  2792,  3422,
    1941,  3120,  3783,  3934,  3963,  1366,  2465,  1366,  3939,  3940,
    3941,  3942,  3943,  3741,  4886,  4887, -1850,  3064,  1405,  3950,
    1360,  1361,  1366,  -726,  3957,  1237,  1366,  3960,  1147,  3056,
    3188,  1460,  4295,  3617,  1465,  2834,  4017,  3058,  2835,  1366,
    1865,  1366,  2930,  4106, -2993,  1865,  3099,  3100,  1480,  1147,
    4562,  5490,  2383, -2928,  3328,  3168,  1608,  4296,  4755,  5228,
    1699,  4643,  1366,  4112,  5431,  4546,  4014,  1360,  1361,  2561,
   -2172,  5275,  -727, -1850, -1850,  4649,   913,  2465,  4835,  2394,
    4886,  4887,  1360,  1361,  1081,  1147,   966,  1741,  1226,  -405,
    1382,  1176,  1093,  1147,  1147,  1127, -1078,  4472,  2465,  3007,
    4402,  5100,  1043,  4566,  4567, -1965,  4043,  2465,  4044,  3853,
    3854,  5248,   966,  1147,  1366,  1865,  1366,  3673,  1363,  3178,
    3340,  1364,  4062,  2574,  4063,  1044,  1155,  -600,  1366,  2465,
    1426, -2927,  2442,  1360,  1361,  2844,  3929,   935,  1363,  4077,
    2719,  1364,  2443,  2740,  2814,  -585,  3229,  2465,  2815,  1359,
    4378,  1865,  1366,  4295,  2059,  1099,  1624,  4644,  2060,  1363,
    2791,  1701,  1364,  3242,  1113,  2445,  1094,  2059, -2834,  2794,
    2465,  2758,  -627,  2795,  2465,  1366,  4109,  1366,  4453,   965,
    -616,  1735,  2465,  3962,  2811,  3857,  1211,  1366,  2812,  3027,
    1475,  3778,  2720, -1850,  1363,  1658,  1484,  1364,  3596,  4158,
    3287,  3288,  1135,  3548,  2878,  2745, -2104,  3549,  3301,  5495,
    3396,   116,   982,  1045,  1623,  4563,  3893,  1147,  1366,  1549,
    1408,  4576,  1511,  3077,  2806,  1892,  5117,  1366,  4151,  5507,
   -2928,  1470,  1366,  1174,  1609,  1730,  4668,  3050,   737,  1147,
    4017,  1737,  1738,   114,  1147,   121,  1742,  1366,  5527,  3723,
    1403,  1841,  1489,  1842,   723,   116,  1974,  1099,  2948,  1975,
    3740,  4346,  5395,   236,  1860,  2993,  2029,  1360,  1361,  1550,
    2395,  3747,  3257,  2764,  1882,  1883,  1884,  1550,  1363,  1887,
    4229,  1364,  1891,  1147, -1850,  1896,  1897,  4383, -2104,  4240,
    4048,  4292,  2998,  1385,  4049,  3973,  1360,  1361,  3889,  1843,
    2108,  4702,   242,  4293,  1626,  3974,   966,  3930,  3061,  2690,
    1625,  1052,  5491,  3890,  2124,  1610,  1215,  4294,  2746,  1283,
    3031,  2714,  2715,  2716,  2717,  5265,  2003,  3597,  3923,  1054,
    4305,  5492,  2718,  1283,  3598,  1081,  4284,  4285,  1107,  4270,
   -2993,  2751,  1680,  2756,  1454,  5076,  1360,  1361,  1876,  2169,
    1354,   237,  4009,  4214,   975,  3062,   967,  3725,  1677,  3404,
    1360,  1361,  3572,    42,  1256,  3393,   994,  3029,  1678,  1360,
    1361,  1360,  1361,  3391,  4010,  1360,  1361,  3034,  2396,  1366,
    3036,  2030,   967,  3039,  2757,  3405,  1759,  2138,  1363,  4056,
    1759,  1364,  5118,  4057,  4075,  1046,  1759,  2051,  4076,  1366,
    1360,  1361,  4557,  3986,  5043,  1129,  5045,  1360,  1361,  2721,
    2082,  2083,  5496,   913,  2087,  2385,  2069,  2088,  2089,  2090,
    1366,  4594,  2094,  2095,  2097,  2099,  2100,  2101,  2102,  2103,
    4384,  2085,  3620,  3621,  1324,  1363,    49,  1782,  1364,  1471,
    2168,  4002,  2903,  1360,  1361,  2860,  4555,  1490,  3639,  3576,
    1363,  1360,  1361,  1364,  3705,  1366,  4546,  1147,  2388,  3120,
    4904,  4905,   969,  4259,  2117,  2118,   723,  2120,  1679,  2122,
     723,  1147,  1767,  3599,   723,  2132,  1147,  1099,  4478,  2137,
    3385,  1839,  1839,  2163,  4465,  1840,  1840,  5266,   969,  3016,
      54,  1681,  1360,  1361,  1682,  2166,  2259,  1544,  1147,  1751,
     966,  1363,  1360,  1361,  1364,  5143,  1147,    55,  5396,  1147,
    2949,  2119,  2245,  2181,  2183,  2123,  4391,  4392,  1212,  2131,
    1168,  3660,  3661,  3679,  1511,  3386,  4252,  4171,  1099,  1099,
    3387,  3394,   966,  3395,  1360,  1361,  1215,  1099,  1099,  1366,
    1099,  2207,  4276,  2127,  3585,  2760,  4195,  4429,  2397,  1455,
    3465,  2126,   983,  4505,  3406,  1382,  2295,  4457,  1516,  5321,
    3466,  5213,  2241,  1512,  2049,  2378,  2398,  1404,  1040,  3724,
    1147,  4206,  2311,  3709,  1360,  1361,   967,  4413,  1550,  2547,
    1360,  1361,  4114,   966,  3639,  2260,  4115,  2192,  1215,  5279,
    4166,  1477,  2420,  2268,  1078,  4549,  2204,  1215,  1043,  2206,
    1360,  1361,  3547,  4204,  3713,  4824,  3715,  3716,  4911,   723,
     723,   723,  1099,   723,  1147,  1099,  1241,  2436,  5225,  3465,
    2306,  1044,  2882,  1759,  2523,   965,  2308,  2156,   723,  3466,
    1147,  3181,   240,   723,  4255,  1363,  4100,  2475,  1364,  4104,
    4233,  1360,  1361,  2104,  2997,  2837,  2364,  3726,  3231,  1366,
    3552,  3553,  4492,  4703,  2290,  2291,  2292,  2399,  2294,  1877,
    3241,  2050,  3676,  1327,  1363,  3168,  3168,  1364,  5267,  2184,
    5364,  2293,  3499,  2309,  2296,  4339,  1078,  2524,  2313,  1127,
    2402,  3468,   969,  3600,  1113,  2346,  4203,  2386,  1360,  1361,
    1491,  3281,  3924,  3925,  2950,  5385,  1366,  2391,  4987,  2357,
    3680,  3681,  1360,  1361,  1147,  2772,  5144,  4244,  2473,  1045,
    4457,  1366,  4820,  1011,  1363,  4427,  4428,  1364,  4245,  1360,
    1361,  3312,  1147,  4653,   240,  4458,  1187,  4496,  1363,  1659,
    2386,  1364,  2930,  2475,  2504,  1169,  2505,  1363,  1147,  1363,
    1364,  1188,  1364,  1363,  2438,  1795,  1364,   989,  4421,  1147,
    4073,  1397,  1398,  1399,  1400,  4495,  1102,  5036,  1385,  1753,
    5094,  3763,  1366,  2525,  1899,  4591,  2305,  2305,  1363,  2433,
     967,  1364, -2104,  3412,  1147,  1363,  4431,  3558,  1364,  3952,
    1456,  4267,   116,   116,   116,  3748,  4605,  3749,  4479,  5198,
    1170,  2447,  2448,  4693,  4414,  2930,  4688,   812,  4613,  3525,
    1360,  1361,   967,  4617,  2426,  2427,  2428,  4459,  4803,  4420,
    4689,  1363,  2590,  2591,  1364,  2777,  5145,  2442,  3916,  1363,
    3918,  3765,  1364,  3407,  1262,  2061,  2297,  2443,  4965,  3764,
    3935,  3936,  3937,  3938,  3655,  3656,  3657,  4834,  1851,  3944,
    3945,  3946,  3947,  3948,  3949,  1312,  3951,  3954,  3955,  3956,
    2445,  1749,  2549,   967,  3961,  1921,  1403,  4142,  2475,  2105,
    1363,  1601,  2781,  1364,  2261,  1512,  1852,  1749,  4295,  5204,
    1363,  1386,  1387,  1364,  3104,  5322,   969,  2782,  4458,  1316,
    3423,  5327,  3411,  5517,  4506,  2106,  3727,  3728,  2298,  4306,
    3840,  1046,  3204,  3116,  1751,  4623,  1366,  4445,  2062,  5184,
    2449,  2509,  1363,  2567,  1099,  1364,  4376,  4684,   969,   730,
    5185,  3970,  1204,  1360,  1361,   784,  5140,  1389,  1390,  1099,
    1900,  4507,  3522,  1360,  1361,  1366,  2551,  1171,  2784,  4624,
    3592,  1360,  1361,  5230,  4973,  1002,  5234,  2262,  4684,  4246,
    1360,  1361,  1363,  2829,  3212,  1364,  1517,  3258,  1363,  3523,
    3556,  1364,  1099,  1901,  3888,  4506,  2607,  2608,  3205,   969,
    4463,  2841,  5328,  2569,  1009,  2196,  1360,  1361,  1363,  2386,
    1654,  1364,  4387,  5260,  5261,  1366,  5323,  3469,  2678,   240,
    2875,   789,  1922,  1751,  1360,  1361,  4974,  4388,  4417,  1366,
    4826,  4986,  4507,  1360,  1361,  1921,   998,  3414,  1366,  1751,
    1366,  1382,  4690,  1703,  1366,  1360,  1361,  5324,  1103,  1363,
    3213,  2712,  1364,   836,  1360,  1361,  4610,  -658,  3168,  1360,
    1361,  4446,  4612,  3111,  3671,  1602,  1360,  1361,  4460,  1366,
    3982,  3983,  3984,  3985,  3678, -1352,  1366,  1189,  3541,  1360,
    1361,  3214,  1283,  2765,  3976,  4845,  1360,  1361,  1360,  1361,
     731,  2107,  3975,  1360,  1361,  2904,  1363,  1360,  1361,  1364,
    3206,  1263,  2785,  3668,  2510,  2845,   733,  5204,  1190,   734,
    1363,  1078,  1366,  1364,  2450,  4896,  2875,  1360,  1361, -2028,
    1366,  2299,  1313,   801,  1360,  1361,  2870,  1363,  2915,  4128,
    1364,  2789,  3412,  2940,  1661,  1100,  1617,  3168,  3168,  4632,
    1147,  4235,  4187,  1129,  4636,  1360,  1361,  4783,  4639,  4422,
    4423,  4424,  3215,  2063,  4201,  4202,  1317, -1352,  1147,  3514,
    2853,  1366,  1936,  5389,  4247,  2901, -1352,  1129,  5186,  2849,
    4508,  1366,  3112,  2857,  3425,  4188,  2861,  1360,  1361,  2996,
    2902,  2807,  3207,  4627,  4628,  1104,  5119,  4746,  4747,  4629,
    4205,  2734,  2263,  2859,  1753,  3008,  -962,  1360,  1361,  1354,
    1078,   999,  2738,  1366,  2824,   817,  1371,  3539,  1363,  4923,
    2828,  1364,  1902,  1404,  4366,  1099,  1078,  1360,  1361,  1360,
    1361,  4460,  4534,  1618,  1662,  2526,  4975,  5099,  1921,  2058,
    1405,  3550,  1099,  3551,  3216,  4054,  2944,  2945,  2747,  1360,
    1361,  4508,  4228,  1366,  1385,  4501,  4234,  4502,  4447,  1366,
    1099,  1283,  1147,  1394,  1395,  1396,  1397,  1398,  1399,  1400,
    4846,  4236,  4133, -2028,  2967,  1360,  1361,  2912, -1352,  1366,
    5366,  2917,  5448,  5448,  2868,  5256,  1360,  1361,  4055,  1099,
    2247,    42,  1099,  1753,  3990,  1921,  4068,  2875,  4346,  2903,
    1147,  1215,  1107,  5064,  1147,  1147,  1129,  2846,  5067,  1753,
    4167,  1125,  1921,  4909,  4910,  2876,  2876,  2735,  4758,  1215,
    1366,  1360,  1361,  2247,  1360,  1361,  2628,  2629, -2028,  3742,
    3080,  1363,  1147,  1147,  1364,  1844,  2970,  4079,  1099,  4441,
    1127,  1363,  2411,  2412,  1364,  2413,  1147,  4080,  2931,  1363,
    3884,  2936,  1364,  4730,  2930,  2930,  4113,  2264,  1363,  1125,
    2930,  1364,  1147,  5283,    49,  1990,  3414,  1366,  1699,  1043,
    1921,  1360,  1361,  4448,  5207,  4731,  2265,  1043,  1663,  4561,
    1405,  1366,   966,  3640,  1363,   966,  4237,  1364,  -962,  1903,
    4189,   976,  1044,  3025,  1360,  1361,  4857,  1712,  1366,  1851,
    1044,  4367,  1363,    42,  3858,  1364,  3439,  2029,  4181,  2876,
    2029,  1363,  4107,  3208,  1364,  4074,  4159,  4192,    54,  1129,
    1360,  1361,  1994,  1363,  1138,  4785,  1364,  1852,  1360,  1361,
    1099,  1099,  1363,  1139,  2759,  1364,   844,  1363,  5191,  2016,
    1364,  2748,  4791,  4858,  1363,  3049,  3987,  1364,  4660,  1141,
    5257,  3066,  5366,  3596,  3239,  3873,  4413,  1363,  3710,  1713,
    1364,  1360,  1361,  3876,  1363,  3217,  1363,  1364,  3880,  1364,
    1721,  1363, -2028,  4256,  1364,  1363,    49,  4817,  1364,  1366,
    1045,  1182,  2755,   977,  4232,  3711,  4111,  1147,  1045,  3037,
    3038,  3284,  3107, -1352,  2478,  1363,  1185,  2056,  1364,  1851,
    1360,  1361,  1363,  1005,  2468,  1364,   966,  1129,  4151,  4970,
    4151,  1005,  2736,  1360,  1361,  2433,  2574,    25,  2549,  2479,
    3268,  3641,  3269,  1363,  2847,  1147,  1364,  1852,  1192,  2768,
      54,  1360,  1361,  1197,  3118,  1360,  1361,  1360,  1361,  1099,
    2848,  3642,  4119,  2769,  2029,  4118,  4661,    55, -1352,  4954,
     733,  2865,  3861,   734,  3643,  1363,   978,  3053,  1364,  4955,
    2773,  1360,  1361,  1199,  1853,  3270,  3228,  3174,  1360,  1361,
    1360,  1361,  1200,  3180,  2359,  1363,  5190,  2360,  1364,  3193,
    3195,  3198,  3199,  3200,  3201,  3202,  1360,  1361,  3271,  3211,
    4662,  3222,  1366,  3117,  1714,  1363,  1294,  1363,  1364,  3516,
    1364,  3222,  1366,  3232,  3233,   221,  3222,  1127,  3237,  3238,
    1366,  1147,  3240,  3222,  1360,  1361,  1311,  1363,  3250,  1366,
    1364,  3253,  5285,  2030,  5382,  1360,  1361,  3272,  3263,  1325,
    1326,  3264,  1099,  5210,  5238,  5239,  3183,  3644,  2930,  1360,
    1361,  4135,  3279,  1363,  3222,  1366,  1364,  3203,  1147,  1603,
    1604,  5559,   967,  3223,  1363,   967,  1208,  1364,  5138,  5139,
    4570,  1210,  1046,  1366,  1099,  2480,  1213,  4415,  4416,  1441,
    1046,  2029,  1366,  1452,  3222,  3317,  1605,  3257,  1054,  1027,
    3001,  1114,  1515,  3254,  1366, -1352,  1515,  3262,  5286,  1363,
    1746,  3265,  1364,  1366,  3266,  3267,  1360,  1361,  1366,  5211,
    1655,  3002,  4956,  4707,  1433,  1366,  4709,  4710,  3393,  4020,
    1395,  1396,  1397,  1398,  1399,  1400,  3391,  3212,  1366,  1127,
    3277,  1217,  -658,  3309,  2465,  1366,  2361,  1366,  1115,  1221,
    4035,    36,  1366,  5422,  3150,  3787,  1366,  1219,  1745,  1363,
    3378,  5240,  1364,  3003,  5376,  3851,  3852,   366,  1747,   368,
    5137,  1892,  4884,  1406,  2780,  4669,  1366,  1746,   969,  3645,
    1222,   969,  1363,  1366,  2783,  1364,  1231,  3124,    42,  1054,
    1027,  2737,  2786,  4589,  4590,  2574,   967,  3422,  4670,  2548,
    2475,  5480,  1223,  3213,  1366,  -808,  4207,  1434,  1363,  1099,
    2761,  1364,  1435,  1099,  2574,  2468,  1363,  1638,  1639,  1364,
    1642,  3168,  1643,  1116,  2762,  4016,  1228,  2798,  1988,  1147,
    2469,  2412,  1232,  2413,  3214,  1747,  1366,  4671,   723,  3428,
     723,   723,   723,  2774,  2775,  2816,  2850,  2574,  2574,  1363,
    3570,  3646,  1364,  3125,  2823,  1436,  1366,   116,   219,  1147,
    2776,    49,  3488,  1147,  2574,  3575,  2826,  3151,  3371,  1233,
    2778,  1437,  3375,  4560,  2574,  3054,  1366,  4455,  1366,  3168,
    3168,  3853,  3854,  3426,  3126,  3429,  3430,  4013,  1363,  3298,
    3299,  1364,  2819,  1054,  1027,  1748,  2574,  1438,  1366,  3273,
    4047,  1363,   969,  2548,  1364,  3215,  1359,  4050,  2908,  4058,
    4468,  4469,  2909,  1405,  4064,    54,  3135,  4571,  4065,  1363,
    1749,  1749,  1364,  1363,  1366,  1363,  1364,  3047,  1364,  3473,
    1238,  3048,    55,  2574,  -808,  1366,  4484,  5386,  4066,  3545,
    2470,  1239,  3568,  2574,  3531,  4067,  1410,  3773,  2051,  1363,
    1746,  3774,  1364,  1240,  2029,  3127,  1363,  4885,  1363,  1364,
    4994,  1364,  4995,  4242,  4243,  4116,  4069,  4070,  1382,  1817,
    1366,  2574,  1818,  4938,  1363,  4978,  1851,  1364,  4943,  4751,
    4752,  4753,  4754,  1554,  1415,  4286,  1759,  3216,  1749,  4287,
    3560,  3561,  4440,  1242,  2375,  2376,  4287,  2377,  4072,  4435,
    1147,  2176,  1363,  1354,  1852,  1364,  1750,  1147,  1747,  3765,
    1243,  4473,  3136,  1363,  4477,  4433,  1364,  3764,  4078,  4513,
    1366,  1382,  1147,  2574,  2163,  4434,  5087,  1363,  3137,  2163,
    1364,  4536,  4550,  3584,  1147,  3046,  4551,  3128,  4081,  3152,
    4083,  1244,  1555,  1366,  1247,   784,  3381,  4599,  1248,  3153,
    1249,  4600,  1751,  1751,  1013,  1250,  3154,  4601,  4634,  4694,
    4695,  4600,  4635,  1099,  1251,  1129,  1129,  1252,  5219,  1366,
    1099,  1099,  4514,  1750,  1515,  1556,  1418,  1366,  4408,  4409,
   -1850,  1253, -2104,  1117,  1363,  4291,  4085,  1364,  1283,  4842,
    4843,  3631,  1421,  2912,  1425,  4641,  1429,  4087,  1099,  4642,
     116,  3554,  4733,  4938,    64,  1118,  4734,  4943,  5529,  5530,
    1366,   789,  1040,  1581,  3294,  3297,  1095,  1097,  4315,  1354,
    1751,  3965,  2192,  4735,  4738,  1430,  4320,  4736,  4739,  2204,
    3607,  4741,  4088,  4353,  1432,  4742, -1850,   966,   966,   966,
    4743,  2471,  1043,  1582,  4744,  3775,  1119,  2019,  2020,  1366,
    2306,  2306,  1147,  2326,  2327,  3695,  1254,  3697,  -808,  3976,
    3155,  1749,  1366,  1257,  4938,  1044,  1259,  3975,  5199,  4943,
    1445,  1385,  3690,  1448, -1850,  4745,  1260,  3560,  1451,  4642,
    1366,  1014,  4089,  1453,  1366,  3640,  1366,  4750,  1261,  1746,
    1264,  4642, -1850,  1265,  1583,  1515,  1267, -1850,  1584,  4773,
    3138,  1752,  3124,  4776,  1440,  4489,  1268,  1120,  3217,  1269,
    1366,  1129,  1270,   801,   219,  1271,  1900,  1366, -1850,  1366,
    1444,  4786,  1272,  1382,  1385,  2574, -1850,  3091,  3092,  1078,
    1078,  1147,  3093,  3094,  1273,  1366,  4812,  5086, -1850,  4490,
    3378,  2073,  -808,  1099,  2433,  3746,  1750,  1747,  1274,  1911,
    5539, -1850,  2468,  1045,  2996,  1515, -1850,  3156,  3129,  2472,
    4831,  1015,  4655,  1366,  1277, -1850,  5539,  2469,  3125,  3757,
    1278,  4547,  4491,  4655,  1366,  4809,  1382,  3139,  4859,  2574,
    2176,  3966,  4635,  4875,  1439,  4879,  2708,  4642,  1366,  4642,
    1284,  1285,  5539,  1751,  1557,   817,  4882,  1078,  1286,  3126,
    4642,  1382,  1147,  3140,  1708,  1709,  3180,  5087,  3180,  2709,
     739,  4637,  1753,  1753,  3193,  1287,  1644,  1288,  3796,   818,
    1289, -2104,  1443,  3641,  4781,  1290,   784,  3222,  4898,   221,
    1389,  1390,  4899,  3124, -1850,  3859,  4239,    42,  1291,  1292,
    3379,  3978,  4784,  3642,  -808,  1366,  4790,  3380,  4792,  1295,
    3853,  3854,  1147,  1585,  1296,  1297,  3643, -1850,  3867, -1850,
    4900,  3729,  4947,  2029,  4899,  3141,  4642, -1850,  2029,  5033,
    3127,  -808,  4793,  5034,  4159,  1298,  1457,  2470,  3222,  4794,
    1753,  4795,  1462,  1389,  1390,  5053,  3222,  1299,  1300,  4635,
    3222,  3222,   789,  1463,  5066,  1301,  1469,  4883,  3774,  3125,
    1749,   740,  1302,  1303,  1304,  1476,  1099,   967,   967,   967,
      49,  1147,  1147,  1851,  5141, -1850,   219,  1305,  5142,  5299,
    1306,  1382,  1307,  5300,  2176,  5050,  1385,  1386,  1387,  1308,
    3126,  1586,  1754,  2074,  5304,  1046,  5052, -1012,  3901,  3644,
    1558,  1852,  2567,  4886,  4887,  1473,  1309,  1310,  1314,  5088,
    5083, -1850,  3128, -1850,  3212,  3124, -1850,  1147,  4616,  1315,
    1318,  1559,  4572,  1319,    54,  1215,  1323,  3142,  1902,  5307,
    1078, -1850,  1382,  4600,  1327,  1328, -1850,  1485,  1329,  1385,
   -1850,    55,  1330,  3378,  1331,  1750,  1560,  1332,   741,  5309,
   -1850,  1382,  1494,  5310,   801,  1587,  5318, -1850,  1147,  1754,
    5319,  3127,  1561, -1850,  1385, -1850,  1496,  5249,  1333,  1334,
    1381,  1335,   220,   969,   969,   969,   844, -1850,  5390,  2903,
    3213,  3125,  5391,  5521,  1336,  1337,  3381,  5522, -1850,  1338,
   -1850,   221,  1751,  1339,  1099, -1850,  4991,  1099,  1340,  3796,
    1341,  1342,  1343,  1344, -1850,  3124,  5113,   966,  1345,  4004,
    1346,  3214,  3126,  1753,  1347,  1348,   116,  1409,  1441, -1850,
    1135,  3645,  1498,  1506, -2104,   116,   116,  1016,  1017,   116,
    1018,  1019,  1020,  1531,  1548,  1539,   817,  4865,  4866,  1382,
    4868,  1844, -1850,  3128,  1545,  1389,  1390,  4918,  1553,  1021,
    1566,   742,  1576,  3995, -1850,  -808,  3997, -1850,  1577,  1578,
     818,  4872,  4873,  1593,   222,  1594,  1595,  5038,  5039,  5040,
    1598,  3125,  1599, -1850, -1850, -1850, -1850,  1588,  1382,  5200,
   -1850,  1600,  3215,  3127,  1385,  1393,  1394,  1395,  1396,  1397,
    1398,  1399,  1400,  3646,  1628,  1903, -1850, -1850,  1389,  1390,
    1460, -1850,  3162,  1749,  1627,  1631, -1850,   223,  1382, -1850,
    2075,  3531,  1746,    64,  1630,  1640,  3640,  3212,  1645,  1589,
    1646, -1850,  1647,  1389,  1390,  1648,  2076,  1649,  1650,  1651,
    4110,  4149,  1754,  3129, -1850,  1385,  1653, -1850,  1655, -1850,
    1395,  1396,  1397,  1398,  1399,  1400,  5308,  2779, -1850,  1657,
     224,  1668,  1656,  1660,  1385,  1700,  2472,  1686,  4778,  4573,
     743,  1687,  1688,  3378,  3216,  3128,  1952,  2912,  1689,  1078,
    1747,  4132,  1147,  3163,  1704,   999,  1718,  1720,  1099,  1744,
     744,  1844,  1886,  3213,  1885,  1888,  1383,  1889,  1403,  1147,
    1129,  1129,  1921,  3222,  2030, -1850,  1928,  4160,   116,  1129,
    1129,  1129,  1939,  5124,  1977,  1942,  5127,  5128,  5129,  5130,
    1147,  1987,  1384,  1988,  3214,  1989,  4059, -1850,  1135, -1850,
    2010,  2027,  1099,  1099,  2039,   745,  2040, -1962,  2052,  3381,
     746,  1099,  1099,  1099, -1850,  1751,  2053,  4141,  2054,  2065,
   -1850,  -808,  1385,  1389,  1390,  2084,  2092,  5093, -1850, -1850,
   -1850, -1850,  1753, -1850,  3641,  3164,  2121,   844, -1850,  2091,
    4223,   747,    42,  3379,  3129,   748,  2125, -1850,  2139,  2165,
    3380,  1382,  1956,   749,  3642,  2186,  2187,   967,  4216,  2188,
    4216,  1385,  2189,   225,  2305,  3215,  5011,  3643,  5012,  5013,
    2191,  2199,  1129,  2200,  1389,  1390,  1867,  2201,  5226,  2590,
    2591,  2211,  1386,  1387,  3965,  2228,    42,  5236,  5237,  2231,
    2242,  1385,  2247,  1389,  1390,   750,  5245,  2246,  5044,  2252,
    2249, -1850,  2256,  1749,  1099,  2254,  4254,  2258,  1508,  2284,
    2259,  2030, -1850, -1850,  2288,    49,  2315,  2316,  2317, -1850,
    1393,  1394,  1395,  1396,  1397,  1398,  1399,  1400,  4985,  3124,
    2318,  2320,  2323, -1850,  2333, -1850,  5203,  2334,  2347,  2336,
    5089,  2348,   226, -1850,  2349,  3180,    42,  3216,  2353,   751,
    3644,  1754,  2365,  4283,  3610,  2029, -1850,  2351,  1388,    49,
    1957,  2366,  2368,   969,  1960,  3217,  3129,  2369,  2370,  3611,
    3612,  1961,  2371,  1393,  1394,  1395,  1396,  1397,  1398,  1399,
    1400,  1389,  1390,  2372,  4217,  1663,    55,  2380,  1750,  2381,
    2386, -1850,  1078,  1868,  2404,  3125, -1850,  1869,  1393,  1394,
    1395,  1396,  1397,  1398,  1399,  1400,  2417,   227,    42,   228,
    2421,  1870,  2422,    54,  2437,  2451,  4137,  2452,  2454,    49,
    1389,  1390,  2455,  2607,  2608,  4362,  3162,  2463,  2467,  3381,
      55,  2482,  2468,  1391,   366,  1751,   368,  2487,  2030,  2488,
    2141,  4370,  4371,   229,  3966, -1850,  2493,  2494,  4517,  2496,
    1389,  1390,  1962,  2506,  1385,   230,  3165, -1850,  4518,  2508,
    2511,  3222,  3222,  2518,  2519,  3317,  2532,  4397,  4519,  2522,
    4401,  2529,  3645,  3611,  3612,  1753,  2530, -1850,  2540, -1850,
    2553,    49,  4520,  4521,  4522,  2542,  2543,  2554,  2555,  2556,
      55,  2559,  2560, -1850,  2570,  2574,  1004,  3163,  4523,  2573,
   -1850,  2571,  3682,  3683,  3684,  1406,  2679,  2681, -1850,  2682,
   -1850,  5287, -1850,  2683,  2686,  2688,  1964, -1850,  1393,  1394,
    1395,  1396,  1397,  1398,  1399,  1400,  2685,  2687,  4283,  4219,
    5021,  2689,  2692,  2694,  5203,  3611,  3612,  2707,  2713,  2723,
   -1850,  2725,  2726,  4283,  3646,  4425,  2727,  1871,  2742,  2750,
    2744,   231,    55,  2749,  2752,  2753,  2759,  2763,  1127,  2796,
    2767,  2771,  1099,  2142,  5022,  5295,  2797,  2143,  3217,  1393,
    1394,  1395,  1396,  1397,  1398,  1399,  1400,  2787,  2788,  3164,
    4604,   916,     1,  2793,  2808,     2,  2809,  5374,  1393,  1394,
    1395,  1396,  1397,  1398,  1399,  1400,  5059,  2810,  2499,  5224,
     912,  2820,  1127,  2838,     4,  2817,   962,  2144,  2468,  2818,
    2839, -2104,  1078,  1389,  1390,  2830,  2836, -1468,     5,     6,
    1400,  4439,  2840,  2500,  2854,  2858,     7,  2145,  1041,  2863,
    2880,     8,     9,  2867,  2864,  2876,  2883, -1850,  1392,  2892,
     917,  2886,   912,  1124,  1669,  1872,  2887,    10,   912,  2888,
    2889,  2890, -1850,  2891, -1850,  2905, -1850,  1965,  2906,  2907,
    2937, -1850,  3613,  2910,  1550,  2939,  1865,    11,  2946,  2947,
    2957,  2954,  2959,   918,  2963,  1967,  1393,  1394,  1395,  1396,
    1397,  1398,  1399,  1400,  2964,  2965,  2234,  2991,  5023,    12,
    2163,  2992,  2146,  1520,  1519,  1753,  3010,  3011,  3012,    13,
      14,  2030,  3013,  3014,  1129,  1515,  3015,  3019,   919,  3022,
    3024,    15,    16,  3028,  3030,  1393,  1394,  1395,  1396,  1397,
    1398,  1399,  1400,  3035,  3613,  4524,  3040,  2501,  1283,  3042,
    2912,  3045,  2996,  1147,  3046,  2029,  1099,  3051,    18,  3052,
     116,  5502,  4525,  2628,  2629,  1393,  1394,  1395,  1396,  1397,
    1398,  1399,  1400,  3063,  1372,  1373,  3059,  3071,    19,   920,
    2029,  3072,  1670,  3065,  1673,  3411,  5525,  3079,  3078,  1851,
    1746,  1770,  1771,  3083,  5024,  1671,    20,  3086,    21,  2029,
    3105,  1672,  3087,    22,  3110,  5502,    23,  2147,  1171,  4216,
    3121,  3088,  5025,  3133,  3145,  1374,  2141,  1852,  3115,  2029,
    3165,    24,  3146,  3147,  3234,  5525,  3236,  1773,  1375,    25,
    3282,  3148,    26,  3289,  1754,  3310,  5026,  3302,   764,  3304,
    3311,  1776,  5452,  2148,  2213,  3318,  4650,  1777,  1778,  3320,
    5355,  1779,    27,  4283,  2214,  4633,  3321,  3322,  4283,  3323,
    3324,  3325,  4283,  3326,  2215,  3329,  3330,  2149,  1376,    28,
     764,  3796,  3331,    29,  3332,  1781,   764,  3333,  2216,  2217,
    2218,  1377,  1147,  4526,  3334,  1673,  4026,  3136,  4030,  1782,
    3335,  3336,  2150,  1783,  2219,  3337,  3338,  3341,  3342,  3343,
    4527,  3344,  3345,  3137,  3346,  1099,  3347,  -153,  1378,  1147,
    3348,  3349,   921,  3350,  3373,  3351,  4674,  3352,  3353,  3354,
    -658,  3355,  1788,   784,  3374,  3356,  3357,  3358,  1393,  1394,
    1395,  1396,  1397,  1398,  1399,  1400,  2151,  3359,  3360,  2142,
    3361,  3377,  3362,  2143,  5365,  3363,  3364,  3365,  4674,  1099,
    4715,  3366,  3367,  2695,  4674,   784,  3399,  3401,  5557,  1683,
    3410,   784,  4528,  3433,  4666,  3442,  3476,  2152,  3475,    30,
     723,  2503,  1379,  3477,  3053,  3489,  3491,  1262,  3546,  4529,
     788,  3506,  3536,  2144,  3538,  5368,  5435,   733,  1312,   789,
     734,   922,  4397,  3543,  3571,  3412,  3586,  1316,  3588,  1792,
    1674, -2321,    31,  2145,  3587,  3589,  1793,  3591,  4714,  3594,
    3605,   923,   788,    32,  3624,  4725,  3625,  3609,   788,  1078,
     794,   789,  4283,  3626,  3630,  3638,  1794,   789,  4766,  1663,
    3639,  3652,  3658,  3664,  3677,    33,  5027,  3691,    34,  3413,
      35,  3693,  3692,    36,  3687,   116,  3694,  3702,  3699,  5485,
    3696,  5487,   794,    37,    38,  3701,   924,  3706,   794,  3707,
    3708,   746,  2499,    39,  3714,    40,  3712,  5510,  2146,  3120,
    3737,  3751,  2468,  1406,    41,  3138,  3756,  1515,  3780,   925,
      42,  3752,  3753,  3754,  3755,  1796,  3758,  2500,    43,  3790,
    3781,   801,   926,    44,    45,    46,  3789,  3782,  3791,  3784,
    4324,  3866,  5543,  1797,   927,  2575,  2576,  2577,  2578,  2579,
    2580,  2581,  5545,  5546,  3861,  3869,  1147,  3877,  3870,  3874,
     928,  2220,  4819,   801,  2996,  3878,    47,  3894,  3885,   801,
    2030,  3899,  3900,    48,  3901,  4160,  4828,  -808,  2221,  3897,
    1147,  3903,  3906,  3909,  4697,  3898,   929,  3912,  4326,  3915,
    4327,  3964,  3139,    49,  3979,   116,   812,  5368,  1801,  3981,
    3988,  3989,  2469,  2147,  1125,  4006,  4031,  1802,   815,  4017,
    3531,  1406,   816,   817,  4021,  1386,  1387,    50,  3140,  4023,
    4032,  4036,  4945,  4027,  4856,  4034,  4038,  4051,   812,    51,
    2918,  2501,  4039,    52,   812,  4098,  4040,  4041,  4328,  2148,
     930,    53,  4042,  4090,  4052,   817,  4094,    54,  4099,  4093,
     816,   817,  4101,  1322,  4117,  1795,  2919,  1767,  1078,  3414,
    4125,  4126,  4283,  2149,    55,  4130,  4283,  4134,  4147,  4161,
    4143,  2920,    56,  1851,  1147,  4148,  4164,  4289,  4290,  4165,
    3141,  5554,  4297,  4169,  2921,  4168,  1807,  4173,  2150,  4174,
    1948,  1949,  1950,  1951,  1952,  4172,    42,  4175,  4176,  4177,
    4183,  1852,  4184,    61,  4185,  4197,  4198,  5554,  4208,  4209,
    4210,  4211,  4212,  4220,  4221,  4224,  2222,  4225,  4319,  4226,
    4227,  1147,  4238,  4241,  4349,  4351,  4352,  4250,  4256,  4026,
    4265,  4261,  2151,  4262,  4266,  4269,  2922,  2923,  4271,  4274,
      62,  4277,  1808,  1809,  1810,  1811,  4278,  4303,  4314,  4354,
    1812,  4321,  4358,  4365,  4374,  4375,  4386,  4432,  4397,  4419,
    4401,  4929,  4438,  2152,  2924,  4442,  4443,  1813,  4450,    49,
    1814,  4462,  4464,  4466,   116,  4474,  -982,  4480,  2223,  1147,
    4481,  4984,  3142,  4493,  4498,  4494,  4497,  4503,  4516,  4538,
    4533,  4532,  4540,  1099,  4543,  2224,  5409,  1953,  1954,  1955,
    1956,  4546,  4544,  4556,  4565,  4564,  1816,  4545,   912,  4596,
    4554,  5409,   836,   912,  4559,  4568,  4675,  4569,  4552,  4676,
   -1743,  4586,  4597,    54, -1742,  5419,  4608,  2359,  4609,   842,
    4611,  4618,  2925,  4619,   844,  4620,    64,   845,  2502,  1147,
      55,  4621,  3745,   912,   836,  4630,  1099,  4638,  4675,  4647,
     836,  4676,  4961,  4651,  4675,  2503,  1147,  4676,  4657,   912,
    -811,   842,  4686,  3222,  5031,  3222,   844,   842,  4687,   845,
    4692,  4699,   844,  3185,  4701,   845,  4348,  5451,  1386,  4329,
    4708,  4716,  4717,  4719,  4330,  4727,  2926,  4720,  4729,  4723,
    4331,  5409,  4726,  4749,  4737,  4759,  4762,  4767,  4769,  4771,
    4772,  5474,  4773,  4787,  4788,  4989,  4789,  4774,  1957,  4775,
    1958,  1959,  1960,  4779,  4780,  4805,  4782,   912,   912,  1961,
     912,   912,  4797,  4798,  4799,  4810,  5047,  4811,  1819,  4808,
    4332,   241,  5494,   912,  4814,  4815,  4821,  4813,  4832,  4836,
    4822,  5409,  4829,  5409,  4837,   884,  4839,  4853,   963,  4863,
    4841,  4864,  1822,  1823,  4867,  4397,  4397,  4860,  4869,  4854,
    4870,  4874,  1168,  4876,  4600,  4895,  5409,  4902,   815,  4908,
    4912,  4913,  3892,  4776,  4919,  4766,  4921,  4925,  4931,  4944,
    4926,  4948,  4951,  4964,  5079,  4962,  4968,  4967,  4932,  4972,
    4988,  4979,  4950,  1132,  4963,  4996,  4969,  5000,  5003,  4983,
    1962,  5409,  5409,  2866,  5114,  5001,  5561,  5014,  5005,  4333,
    5017,  5048,  3415,  5057,  5060,  -658,  5031,  5069,  5063,  3710,
    5042,  5051,  5080,  5077,  4980,  3531,  5096,  5082,  5078,   912,
    5098,  5116,  5081,  5084,  5123,  5125,  5126,  5101,  2306,  5134,
    5146,  4677,  4678,  4846,  5102,  5103,  5104,  5108,  5109,  4679,
    3527,  5115,  5197,  5120,  5131,   962,  5149,  5187,  4283,  4334,
    5188,  5193,  5207,  1963,  1964,  5205,  5208,   912,  5220,  5212,
    5210,  5211,  5221,  4677,  4678,  5227,  5228,  5242,  5251,  4677,
    4678,   962,  5269,  -544,  5271,  5272,  5273,  4711,  5284,  5274,
    5281,  5303,  3107,  5280,  1041,  5305,  5298,  5296,  5332,  5335,
    -562,  5360,  5361,  5362,  5363,  5376,  5377,  5378,  5380,  5317,
    5394,  5384,  5320,  5397,  5008,  5398,  4335,  5405,  5406,  5410,
    5418,  5423,  2030,  5426,  5430,  5218,  5429,  5431,  5436,  5440,
    5441,  5438,  3317,  3317,  5444, -2779,  5453,  5455,  5462,  4216,
    5465,  5475,  5467,  5477,  5478,  5482,  5484,  5483,  5488,  5509,
    5493,  5503,  5515,  5518,  5241,  5513,  5535,  5519,  5532,  5528,
    5542,  5533,  5562,  5544,  5264,  4981,  5246,  3914,  3853,  3854,
    4121,  3905,  3908,  3911,  4928,  4930,  5255,  4933,  3933,  4418,
    4939,  5262,  4268,  4949,  5416,  1912,  5192,  5276,  5450,  2453,
    5181,  5075,  5563,  5195,  5537,   114,  1091,   121,  1611,  3579,
    3622,  4531,  5160,  5547,  5161,  1965,  5163,   116,  5164,  5166,
    5459,  5167,  4397,  5168,  5403,  5169,  5170,  5460,  4336,  5449,
    5171,  5174,  1966,  1967,  5175,  5415,  5176,  5414,  4430,  1755,
    5314,  3171,  3177,  4120,  4748,  4631,  4760,  4003,  4001,  5420,
    4000,  4602,  -810,  3372,  5387,  5006,  4878,  5428,  5393,  5392,
    3134,  3292,  4761,   912,  5133,  4646,  3999,  4645,   966,  4696,
    4307,  4337,  4338,  4357,  4355,  4901,  1147,  5399,  4698,  1147,
    5214,  4092,  5065,  5018,  5135,   962,  4894,  5041,  5032,  5068,
    3788,  2711,  5336,   912,   912,  4756,  4436,  3735,  4658,  5181,
    5181,  3991,   912,   912,   912,   912,   912,   912,  4916,  2410,
    3722,  3295,  3296,  3293,  5031,   912,   912,  2435,   912,   912,
    3041,  3044,  4373,   912,   912,  3860,  1622,   912,   912,   912,
     912,  3606,   912,   912,  5218,  3608,  2680,  2568,  3902,  4140,
     912,   912,  3595,   912,   912,   912,   912,   912,  1133,  4542,
     912,   912,   912,   912,   912,   912,   912,   912,   912,  2990,
     912,  1505,  3106,   912,   912,  2862,  1504,  4777,   912,  3535,
    2827,  5110,   912,   912,   912,  3557,  5520,  2067,  5091,  3634,
    5375,  1986,  5182,  3635,  3636,   912,   912,   912,  3637,  5425,
     912,  5505,  5526,   912,   912,   912,   912,   912,  5383,  4998,
    5314,  4844,   912,  5222,  4393,  4588,  1147,  1629,  2344,  5181,
    5181,  4851,  5223,   912,   912,  5111,  1938,  4200,  4971,  4369,
    5016,   912,  5085,   912,   912,  3109,   931,  2185,  2869,  3566,
    4138,  4139,  4830,  2343,  4553,   912,   912,   912,  4136,   912,
     912,  4818,  1723,   912,   912,   912,  1724,  1725,   912,   912,
     912,   912,   912,   912,   912,   912,  1717,  1478,  4823,   912,
    2434,  1726,  3032,  2321,   912,  1719,  3033,  3881,  2962,  5381,
    3573,  5464,  4622,  2961,  4146,  5424,  5541,  4871,  5472,   962,
    5558,  5182,  5182,  4712,  5181,  4804,  4827,  4999,  5183,  3744,
    4862,  3009,  2068,  3921,  3669,  5379,  2270,  1049,  1050,  5181,
    3020,  1501,  2269,  3006,  3005,  3602,  3717,  3402,  2175,  3398,
    1676,   962,  2030,  5181,  3403,  2403,  2227,  4982,  5511,  5095,
    1503,   755,  2233,  5516,   756,  1915,  5388,  4437,  4718,  1916,
    1917,  4757,  4946,  1147,  4380,     0,     0,  2030,   967,     0,
       0,     0,     0,     0,     0,     0,  5181,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2030,     0,  5181,  5181,
       0,     0,   962,     0,     0,  5181,     0,     0,  5555,   912,
       0,     0,     0,     0,     0,     0,  2030,     0,     0,  5181,
       0,     0,     0,   114,     0,     0,     0,  5183,  5183,  5181,
       0,  5182,  5182,     0,  5555,   116,     0,     0,     0,     0,
    1041,     0,   912,     0,     0,   912,     0,     0,     0,  5181,
       0,  5181,     0,     0,     0,     0,     0,     0,     0,     0,
    5181,     0,     0,     0,     0,     0,     0,  5181,     0,  5181,
       0,  5181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   969,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5181,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5182,     0,     0,  -961,
       0,     0,  5181,  5181,     0,  4324,     0,     0,     0,     0,
       0,  5182,   912,     0,     0,     0,     0,     0,     0,  5181,
    5181,     0,     0,     0,  5181,  5182,     0,  5183,  5183,     0,
       0,   912,     0,     0,     0,     0,     0,     0,  1245,     0,
       0,     0,  -808,     0,     0,     0,     0,     0,     0,  4325,
       0,     0,     0,  4326,     0,  4327,  3443,     0,  5182,     0,
       0,     0,     0,     0,     0,     0,     0,  2469,  1276,     0,
    5182,  5182,     0,     0,     0,     0,     0,  5182,     0,     0,
       0,     0,     0,  3444,  1293,     0,     0,     0,     0,   912,
       0,  5182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5182,  5183,  4328,     0,  3411,     0,     0,     0,     0,
    1746,  1770,  1771,     0,     0,     0,     0,  5183,     0,     0,
       0,  5182,     0,  5182,     0,     0,     0,     0,     0,     0,
       0,  5183,  5182,  3445,     0,     0,  3446,     0,     0,  5182,
       0,  5182,     0,  5182,  3447,     0,  1355,  1773,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1776,     0,  3448,  5183,     0,  5182,  1777,  1778,     0,
       0,  1779,     0,     0,     0,     0,  5183,  5183,     0,     0,
       0,  -961,     0,  5183,  5182,  5182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1781,     0,  5183,     0,     0,
       0,  5182,  5182,     0,     0,     0,  5182,  5183,     0,  1782,
    3449,     0,     0,  1783,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3450,  5183,     0,  5183,
       0,     0,     0,     0,     0,     0,     0,     0,  5183,     0,
    -658,  -982,  1788,     0,     0,  5183,     0,  5183,  1466,  5183,
       0,     0,     0,     0,  1468,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5183,     0,     0,     0,     0,   963,     0,     0,
       0,  3451,     0,     0,     0,     0,     0,     0,     0,     0,
    5183,  5183,   884,     0,     0,     0,     0,     0,     0,     0,
    3452,     0,     0,   963,     0,     0,     0,  5183,  5183,   912,
       0,     0,  5183,   912,     0,  3412,     0,     0,     0,  1792,
       0,   912,     0,   912,     0,     0,  1793,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1386,  4329,     0,  1794,     0,     0,  4330,
       0,     0,     0,     0,     0,  4331,     0,     0,     0,     0,
       0,     0,     0,   912,     0,     0,     0,  3453,  3454,  3455,
    1466,     0,     0,     0,  3456,     0,     0,  3457,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4332,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1796,     0,   912,   912,   912,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1797,     0,     0,     0,     0,     0,  3458,
    3459,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   912,     0,     0,     0,     0,
     912,     0,     0,     0,     0,  3460,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   912,
       0,     0,     0,     0,  4333,     0,   912,     0,  1801,     0,
       0,   912,     0,   912,  1125,     0,     0,  1802,     0,   912,
       0,   912,   912,     0,     0,     0,     0,   963,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1919,  1920,
       0,     0,     0,     0,     0,     0,     0,  1930,  1931,     0,
       0,  1934,  1935,     0,  4334,     0,     0,     0,     0,  3461,
    1943,  1944,     0,  1945,  1946,     0,     0,     0,  1970,  3414,
       0,     0,  1979,  1980,  1981,  1982,     0,  1984,     0,     0,
       0,     0,     0,     0,     0,  1992,  1993,     0,  1996,  1997,
       0,     0,     0,     0,     0,  2001,  1807,     0,  2004,  2005,
    2006,  2007,  2008,  2009,     0,  2011,    42,     0,  2014,  2015,
       0,  4335,     0,  2018,     0,     0,     0,  2021,  2025,  2026,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3462,
    2033,  2034,  2035,     0,     0,     0,     0,     0,  2041,  2042,
    2043,  2044,  2045,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1808,  1809,  1810,  1811,     0,  3463,  2066,   884,
    1812,     0,     0,  3853,  3854,     0,  2070,     0,  2071,  2072,
       0,   962,     0,     0,   962,     0,     0,  1813,     0,    49,
    1814,  1041,   912,     0,     0,     0,   912,     0,     0,  1041,
       0,     0,   912,     0,     0,     0,     0,     0,     0,     0,
    3464,     0,     0,     0,     0,     0,     0,     0,     0,  2112,
       0,     0,     0,  4336,     0,     0,  1816,     0,     0,     0,
       0,   963,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    54,     0,     0,     0,  -810,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      55,     0,     0,   963,     0,     0,  4337,  4338,     0,  1466,
       0,     0,     0,     0,  3797,  3798,     0,     0,     0,     0,
    3799,     0,  3800,  2198,  3801,  3802,     0,     0,     0,  1746,
    1770,  1771,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3803,     0,     0,   962,     0,     0,     0,     0,
       0,     0,     0,     0,   963,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2244,     0,  1773,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1776,     0,     0,     0,     0,     0,  1777,  1778,  1819,     0,
    1779,     0,  3804,     0,     0,  3805,     0,  2282,     0,     0,
    2287,     0,     0,  3806,     0,     0,     0,     0,     0,     0,
       0,     0,  1822,  1823,  1781,     0,     0,     0,     0,     0,
       0,     0,  3448,  3169,     0,     0,  3169,  3169,  1782,     0,
       0,     0,  1783,     0,     0,     0,     0,     0,     0,  3807,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1788,     0,     0,     0,     0,     0,  3808,     0,  3809,
       0,     0,  1127,     0,     0,  -658,     0,  2339,     0,     0,
       0,     0,     0,     0,     0,  3810,  3811,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2358,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3812,     0,     0,
       0,     0,     0,  2407,  2407,  2407,     0,     0,  1792,   912,
    3813,     0,     0,     0,     0,  1793,     0,     0,     0,     0,
       0,     0,     0,     0,  2423,     0,     0,     0,     0,  3814,
       0,     0,     0,     0,     0,  1794,     0,     0,  3815,  3816,
       0,  3817,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1360,  1361,     0,     0,     0,     0,     0,  3818,  3819,  3820,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1796,     0,  3821,  3822,  3823,     0,
       0,     0,     0,  3824,     0,     0,  3825,     0,     0,     0,
       0,     0,  1797,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3826,  3827,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   912,     0,     0,  3828,  3829,
       0,     0,     0,     0,   912,   912,     0,  1801,  1948,  1949,
    1950,  1951,  1952,     0,     0,     0,  1802,     0,     0,     0,
       0,     0,     0,     0,  3460,   912,   912,     0,   912,     0,
       0,   912,   912,   912,   912,   912,     0,     0,   912,     0,
       0,     0,     0,     0,     0,     0,     0,   912,     0,     0,
       0,     0,   912,     0,   912,     0,   912,   912,     0,   912,
     912,     0,     0,     0,   912,   912,   912,     0,     0,     0,
     912,   912,   912,     0,   912,     0,   912,     0,   912,     0,
     912,     0,   912,     0,  2724,     0,  3830,   912,  2728,     0,
    3831,     0,     0,     0,     0,  1807,     0,     0,  2724,     0,
       0,     0,  3832,   912,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1953,  1954,  1955,  1956,     0,
       0,     0,     0,     0,     0,   912,     0,   912,     0,   912,
       0,     0,     0,   912,     0,     0,     0,     0,     0,   912,
     912,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1808,  1809,  1810,  1811,     0,     0,     0,     0,  1812,
       0,     0,  3833,     0,     0,  3834,     0,     0,  3835,  3836,
    3837,  3838,     0,     0,     0,     0,  1813,     0,     0,  1814,
       0,     0,  2800,  2802,  2804,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3839,  3840,     0,     0,  1816,   912,     0,     0,     0,
       0,     0,     0,     0,     0,  2843,  1957,     0,  1958,  1959,
    1960,     0,     0,     0,     0,     0,     0,  1961,     0,  3841,
       0,     0,     0,     0,  2851,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2855,     0,  2856,     0,
       0,     0,     0,     0,     0,     0,   962,   962,   962,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1363,     0,
       0,  1364,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1041,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1962,     0,
       0,   912,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   912,     0,   912,     0,     0,     0,  1819,  1052,  1053,
       0,     0,     0,  2932,  2933,     0,     0,     0,     0,     0,
       0,     0,     0,  1766,     0,     0,     0,     0,  1767,     0,
    1768,  1822,  1823,  1769,  1054,  1027,     0,     0,     0,     0,
       0,     0,  1746,  1770,  1771,  1055, -2112,     0,     0,     0,
       0,  1963,  1964,     0,     0,     0,     0,     0,     0,     0,
     912,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1056,     0,  1057,  5489,  1772,     0,     0,  -963,  -963,  1773,
    1774,     0,  1058,   963,     0,  1775,   963,  -963,     0,     0,
       0,     0,     0,  1776,     0,     0,     0,  3017,     0,  1777,
    1778,  2282,     0,  1779,     0,     0,     0,     0,     0,     0,
       0,  3021,  1780,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1781,     0,     0,
   -2104,  1059,     0,     0,     0,     0,  1060,     0,     0,  1061,
       0,  1782,     0,     0,     0,  1783,     0,     0,     0,  1062,
       0,     0,     0,  1784,  1785,     0,     0,     0,     0,     0,
    1786,     0,     0,     0,     0,     0,     0,     0,  1787,     0,
       0,  1063,     0,  1064,  1788,     0,     0,     0,     0,     0,
       0,     0,  1065,     0,  1066,  1789,     0,     0,     0,     0,
       0,     0,     0,  1965,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   963,  1790,  1366,
    1966,  1967,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1791,
       0,  1792,     0,     0,     0,  1067,     0,     0,  1793,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1794,     0,
       0,     0,  3159,     0,     0,     0,  3170,     0,  1068,     0,
       0,  3175,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1795,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3224,  3225,  3226,  3227,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1796,     0,     0,
       0,     0,     0,     0,     0,     0,   962,     0,  3261,     0,
       0,     0,     0,  1069,     0,  1797,     0,     0,     0,  1798,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3175,  3175,     0,     0,   912,     0,     0,     0,
    1070,     0,     0,     0,   912,     0,     0,     0,     0,     0,
       0,  1071,  1072,     0, -2108,  1073,  1074,  1799,     0,     0,
       0,     0,     0,  1800,  3319,     0,     0,     0,     0,     0,
    1801,     0,     0,     0,     0,     0,  1075,     0,     0,  1802,
       0,   912,   912,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   912,     0,     0,
       0,  1803,     0,     0,     0,     0,     0,   912,     0,   912,
       0,   912,     0,     0,     0,     0,  1804,  1805,  1806,     0,
    1076,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1077,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   912,     0,     0,     0,  1807,   912,
       0,   912,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -2848,     0,     0,     0,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -2112,   912,     0,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3432,     0,     0,     0,  1808,  1809,  1810,  1811, -2108,  3440,
    3441,     0,  1812,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   912,     0,     0,     0,  1813,
    3478,  3479,  1814,  3480,     0,     0,  3483,  3484,  3485,  3486,
    3487,     0,     0,     0,     0,     0, -2848,     0,     0,     0,
       0,     0,  3493,  1080,     0,  1815,     0,  3494,     0,  3495,
       0,  3496,  3497,   912,  3498,     0,     0,     0,  1816,  3503,
    3504,  3505,     0,     0,     0,  3508,  3509,  3510,     0,  3511,
       0,  3513,     0,  3515,     0,  3517,     0,  3518,     0,     0,
       0,     0,  3521,     0,     0,     0,   912,     0,     0,     0,
       0,     0,  1817,     0,     0,  1818,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3555,     0,
       0,     0,     0,     0,  2112,     0,     0,     0,     0,     0,
       0,     0,  1746,  1770,  1771,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   912,  1081,  1082,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  -963,  -963,  1773,
    1819,  1820,  1821,     0,     0,     0,     0,  -963,     0,     0,
       0,     0,     0,  1776,     0,     0,     0,     0,     0,  1777,
    1778,     0,     0,  1779,  1822,  1823,     0,     0,     0,  3604,
       0,  3603,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1781,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1782,     0,     0,     0,  1783,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   963,   963,
     963,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1788,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1792,     0,     0,     0,     0,     0,     0,  1793,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3169,  3169,
       0,     0,     0,     0,     0,     0,     0,     0,  1794,     0,
       0,     0,     0,     0,     0,  2423,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   912,     0,  3750,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3759,     0,  3766,  3767,  3768,
    3769,     0,  3771,  3772,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   912,     0,   912,  1796,     0,   912,
     912,     0,   912,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   912,     0,  1797,     0,     0,   912,     0,
       0,   912,     0,     0,   912,   912,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3865,     0,     0,     0,
     912,     0,     0,     0,     0,     0,     0,     0,     0,  3871,
    1801,     0,     0,     0,     0,     0,     0,     0,     0,  1802,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   912,   912,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2407,  1807,  2407,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2407,
    2407,  2407,  2407,     0,     0,     0,     0,     0,  2407,  2407,
    2407,  2407,  2407,  2407,     0,  2407,  2407,  2407,  2407,     0,
       0,  3959,     0,  2407,     0,     0,     0,     0,     0,     0,
       0,     1,     0,     0,     2,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1808,  1809,  1810,  1811,     0,     3,
       0,     0,  1812,     4,   912,     0,     0,     0,   963,     0,
       0,     0,     0,     0,     0,     0,     0,     5,     6,  1813,
       0,     0,  1814,     0,     0,     7,     0,     0,     0,     0,
       8,     9,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4012,     0,     0,     0,     0,    10,     0,     0,  4015,
       0,     0,     0,     0,     0,     0,     0,     0,  1816,     0,
       0,     0,     0,     0,     0,     0,    11,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4045,  4046,    12,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,    14,
       0,     0,     0,     0,     0,     0,     0,     0,   912,   912,
      15,    16,  4071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4082,    17,  4084,     0,  4086,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
    3169,  3169,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,    21,     0,     0,
    1819,     0,    22,     0,     0,    23,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      24,  2339,     0,     0,  1822,  1823,     0,     0,    25,     0,
       0,    26,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    27,     0,     0,     0,     0,     0,     0,     0,     0,
    4170,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1766,     0,     0,     0,     0,  1767,
       0,  1768,   912,     0,  1769,     0,     0,     0,  2282,     0,
       0,     0,     0,  1746,  1770,  1771,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   912,     0,   912,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1772,     0,  4230,     0,     0,
    1773,  1774,     0,     0,     0,     0,  1775,     0,     0,     0,
       0,     0,     0,     0,  1776,     0,     0,     0,     0,     0,
    1777,  1778,     0,     0,  1779,     0,     0,     0,    30,     0,
       0,     0,     0,  1780,     0,     0,  4260,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1781,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,  1782,     0,     0,     0,  1783,     0,     0,     0,
    4275,     0,    32,     0,  1784,  1785,     0,     0,     0,     0,
       0,  1786,     0,     0,   912,     0,     0,     0,     0,  1787,
       0,     0,     0,     0,    33,  1788,     0,    34,     0,    35,
       0,     0,    36,     0,     0,     0,  1789,     0,     0,     0,
       0,     0,    37,    38,     0,     0,   912,     0,     0,     0,
       0,     0,    39,     0,    40,     0,     0,     0,     0,  1790,
       0,     0,     0,    41,     0,     0,     0,     0,     0,    42,
       0,     0,     0,     0,     0,     0,     0,    43,     0,     0,
       0,     0,    44,    45,    46,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1791,     0,  1792,     0,     0,     0,     0,     0,     0,  1793,
       0,     0,     0,     0,     0,    47,     0,   912,     0,     0,
     912,     0,    48,     0,     0,     0,  2407,     0,     0,  1794,
       0,     0,     0,   912,     0,     0,     0,     0,     0,     0,
       0,     0,    49,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1795,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    50,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    51,     0,
       0,   912,    52,     0,     0,     0,     0,     0,  1796,     0,
      53,     0,     0,     0,     0,     0,    54,     0,     0,  4426,
       0,     0,     0,     0,     0,     0,  1797,     0,     0,     0,
    1798,     0,     0,    55,     0,     0,     0,     0,     0,     0,
       0,    56,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4456,    57,    58,    59,
      60,     0,     0,     0,     0,     0,     0,     0,  1799,     0,
       0,     0,    61,     0,  1800,     0,     0,     0,     0,     0,
       0,  1801,     0,     0,     0,     0,     0,     0,     0,  4470,
    1802,  2423,     0,     0,  4475,  4476,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4483,    62,
       0,     0,     0,  4485,     0,     0,  4486,     0,     0,  4487,
    4488,     0,  1803,     0,     0,     0,     0,   912,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1804,  1805,  1806,
       0,  4500,     0,     0,     0,     0,     0,     0,     0,    63,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     912,     0,     0,     0,     0,     0,     0,     0,     0,  1807,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2339,     0,     0,     0,    64,   912,     0,     0,     0,
       0,  5178,     0,     0,     0,     0,     0,     0,  5189,     0,
       0,     0,     0,     0,     0,  1808,  1809,  1810,  1811,     0,
       0,     0,     0,  1812,     0,     0,     0,  4582,  4585,     0,
       0,     0,     0,   912,     0,  4592,  4593,     0,  4595,     0,
    1813,     0,  3290,  1814,     0,     0,     0,  1767,     0,  1768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1746,  1770,  1771,     0,     0,  1815,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1816,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1772,   912,     0,     0,     0,  1773,     0,
    5178,  5178,     0,     0,     0,     0,     0,     0,     0,  4640,
       0,     0,  1776,  1817,     0,     0,  1818,     0,  1777,  1778,
       0,     0,  1779,     0,     0,     0,     0,     0,     0,     0,
       0,  1780,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   912,     0,  1781,     0,     0,     0,
       0,     0,     0,     0,  4673,     0,     0,   962,     0,     0,
    1782,     0,     0,     0,  1783,     0,     0,     0,     0,     0,
       0,     0,  1784,     0,     0,     0,   912,     0,     0,  3291,
       0,     0,     0,     0,     0,     0,     0,  1787,     0,     0,
       0,     0,     0,  1788,     0,     0,   912,     0,   912,     0,
       0,  1819,  1820,  1821,     0,     0,     0,     0,   912,     0,
    5178,  5178,     0,  4721,  4722,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1822,  1823,  1790,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2407,  2407,
    2407,  2407,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1792,     0,     0,     0,     0,     0,     0,  1793,     0,     0,
       0,     0,     0,   912,     0,  5178,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1794,     0,     0,
    5178,   912,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5178,     0,     0,     0,     0,     0,
    1795,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,  5178,     0,     0,
       0,     0,     0,     0,     0,     0,  1796,     0,     0,  5178,
    5178,     0,     0,     0,     0,     0,  5178,     0,     0,     0,
       0,     0,     0,     0,  1797,     0,     0,  2339,  1798,     0,
    5178,     0,     0,     0,     0,     0,     0,   912,     0,     0,
    5178,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4838,     0,  4840,   912,     0,     0,     0,     0,     0,     0,
    5178,     0,  5178,     0,     0,     0,     0,     0,     0,     0,
       0,  5178,  1800,  4852,     0,     0,     0,     0,  5178,  1801,
    5178,     0,  5178,     0,     0,  4861,  4230,     0,  1802,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5178,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5178,  5178,     0,     0,     0,     0,     0,
     912,     0,     0,     0,     0,  1804,     0,     0,   912,     0,
    5178,  5178,     0,     0,     0,  5178,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4906,
       0,     0,     0,     0,     0,     0,     0,  1807,     0,     0,
       0,  3175,  3175,     0,  3797,  3798,     0,     0,     0,     0,
    3799,     0,  3800,     0,  3801,  3802,     0,     0,     0,     0,
       0,  4914,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3803,     0,  4920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2407,     0,     0,     0,
       0,     0,     0,  1808,  1809,  1810,  1811,     0,     0,     0,
       0,  1812,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4953,     0,     0,     0,  1813,     0,
       0,  1814,  3804,     0,     0,  3805,     0,     0,     0,     0,
       0,     0,  2423,  3806,     0,  4966,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4582,     0,
       0,     0,  3448,     0,     0,     0,     0,  1816,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3807,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1817,     0,     0,  1818,     0,  4582,  3808,     0,  3809,
    5002,     0,     0,     0,  5301,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3810,  3811,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3812,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3813,     0,     0,     0,     0,     0,     0,     0,     0,  1819,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3814,
       0,     0,     0,     0,     0,  5071,     0,     0,  3815,  3816,
       0,  3817,     0,  1822,  1823,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2423,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3818,  3819,  3820,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5112,     0,     0,     0,     0,     0,  3821,  3822,  3823,     0,
       0,     0,     0,  3824,     0,     0,  3825,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3826,  3827,  3175,  3175,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5148,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3828,  3829,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5206,     0,
       0,     0,     0,     0,  3460,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5235,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5250,
       0,     0,     0,     0,     0,     0,  3830,     0,     0,     0,
    3831,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3832,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5282,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   963,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3833,  5315,  5316,  3834,     0,     0,  3835,  3836,
    3837,  3838,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5330,     0,  5331,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3839,  3840,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3841,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5412,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   243,
     244,  5434,   760,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   761,     0,   253,
     254,   255,   256,   762,   258,     0,   259,     0,     0,   763,
     260,   764,   765,   766,   261,   767,     0,   262,   263,   264,
       0,   265,  5466,   266,   267,     0,     0,   268,   768,   769,
     269,   270,     0,   271,   272,   770,   771,   274,  5481,   275,
     276,   277,   278,   772,   280,     0,   773,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
     774,   775,   301,     0,     0,     0,   776,   302,   777,     0,
     303,   778,   779,     0,   304,   305,   306,   780,   781,   782,
       0,     0,     0,     0,   783,   309,   784,     0,     0,   785,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,  5556,     0,   318,     0,     0,
     319,   320,   321,  2339,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,   786,     0,   336,   337,   338,
     339,   340,   787,   788,   341,   342,     0,   343,   344,   345,
     346,   347,   789,     0,   348,   349,     0,     0,     0,   790,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   791,
     356,   792,     0,   358,     0,   359,     0,   793,     0,   360,
     361,     0,   362,   794,     0,   363,   364,     0,     0,     0,
     795,   366,   367,   368,   796,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,   797,   373,   374,   375,   798,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,   799,   386,   387,     0,     0,
       0,     0,     0,   800,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,   801,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,   802,   415,   416,   417,   418,   803,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   804,   426,
       0,     0,   805,   428,   806,   429,     0,   430,   807,   808,
     809,   810,   811,   435,   436,   437,   438,   439,     0,   812,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   813,
     814,   815,   447,   448,     0,   816,   817,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
     818,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   819,   820,   470,   821,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     822,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,   823,   824,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   825,     0,
     826,   514,   515,   516,   517,     0,   518,   827,   828,   520,
     521,   522,   523,     0,   829,   525,    42,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,   830,   831,   554,
     555,     0,     0,   556,   557,   832,   559,   560,   561,   833,
     834,   562,   563,   564,   565,   835,   566,   567,     0,    49,
     568,   569,   570,   571,     0,   836,   572,   573,     0,   837,
     838,   839,   840,     0,     0,     0,     0,     0,   578,   579,
       0,   841,   842,   843,   581,   582,     0,   844,   583,   584,
     845,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   846,   593,     0,     0,   847,
     848,   849,   594,  1352,   595,     0,     0,   596,   851,     0,
     852,   597,     0,   598,   599,   853,   854,     0,     0,     0,
      55,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   855,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,   856,   857,
       0,   616,   617,   618,   858,   619,   620,   621,     0,   622,
     859,   860,   623,   861,   624,     0,   862,   863,   864,   865,
     866,   625,   626,     0,   867,   627,   868,   628,   869,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   870,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   871,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,     0,   872,   873,     0,     0,     0,     0,
     875,     0,   876,     0,     0,     0,   877,     0,     0,     0,
     878,   879,   243,   244,     0,   760,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     761,     0,   253,   254,   255,   256,   762,   258,     0,   259,
       0,     0,   763,   260,   764,   765,   766,   261,   767,     0,
     262,   263,   264,  2022,   265,     0,   266,   267,     0,     0,
     268,   768,   769,   269,   270,     0,   271,   272,   770,   771,
     274,     0,   275,   276,   277,   278,   772,   280,     0,   773,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,   774,   775,   301,     0,     0,     0,   776,
     302,   777,     0,   303,   778,   779,     0,   304,   305,   306,
     780,   781,   782,     0,     0,     0,     0,   783,   309,   784,
       0,     0,   785,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,   786,     0,
     336,   337,   338,   339,   340,   787,   788,   341,   342,     0,
     343,   344,   345,   346,   347,   789,     0,   348,   349,     0,
       0,     0,   790,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   791,   356,   792,     0,   358,     0,   359,     0,
     793,     0,   360,   361,     0,   362,   794,     0,   363,   364,
       0,     0,     0,   795,   366,   367,   368,   796,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,   797,   373,
     374,   375,   798,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,  2023,   385,     0,   799,   386,
     387,     0,     0,     0,     0,     0,   800,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,   801,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,   802,   415,   416,   417,   418,
     803,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   804,   426,     0,     0,   805,   428,   806,   429,     0,
     430,   807,   808,   809,   810,   811,   435,   436,   437,   438,
     439,     0,   812,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   813,   814,   815,   447,   448,     0,   816,   817,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,   818,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   819,   820,   470,   821,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   822,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,   823,   824,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   825,     0,   826,   514,   515,   516,   517,     0,   518,
     827,   828,   520,   521,   522,   523,     0,   829,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
     830,   831,   554,   555,     0,     0,   556,   557,   832,   559,
     560,   561,   833,   834,   562,   563,   564,   565,   835,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   836,   572,
     573,     0,   837,   838,   839,   840,     0,     0,     0,     0,
    2024,   578,   579,     0,   841,   842,   843,   581,   582,     0,
     844,   583,   584,   845,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   846,   593,
       0,     0,   847,   848,   849,   594,   850,   595,     0,     0,
     596,   851,     0,   852,   597,     0,   598,   599,   853,   854,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   855,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,   856,   857,     0,   616,   617,   618,   858,   619,   620,
     621,     0,   622,   859,   860,   623,   861,   624,     0,   862,
     863,   864,   865,   866,   625,   626,     0,   867,   627,   868,
     628,   869,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   870,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     871,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,     0,     0,     0,     0,     0,   872,   873,     0,
       0,     0,     0,   875,     0,   876,     0,     0,     0,   877,
       0,     0,     0,   878,   879,   243,   244,     0,   760,   246,
     247,   248,   249,  2276,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   761,     0,   253,   254,   255,   256,   762,
     258,     0,   259,     0,     0,  2277,   260,   764,   765,   766,
     261,   767,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,   768,   769,   269,   270,     0,   271,
     272,   770,   771,   274,     0,   275,   276,   277,   278,   772,
     280,     0,   773,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,   774,   775,   301,     0,
       0,     0,   776,   302,   777,     0,   303,   778,   779,     0,
     304,   305,   306,   780,   781,   782,     0,     0,     0,     0,
     783,   309,   784,     0,     0,  2278,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,   786,     0,   336,   337,   338,   339,   340,   787,   788,
     341,   342,     0,   343,   344,   345,   346,   347,   789,     0,
     348,   349,     0,     0,     0,   790,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   791,   356,   792,     0,   358,
       0,   359,     0,   793,     0,   360,   361,     0,   362,   794,
       0,   363,   364,     0,     0,     0,   795,   366,   367,   368,
     796,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,   797,   373,   374,   375,   798,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,   799,   386,   387,     0,     0,     0,     0,     0,   800,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
     801,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,   802,   415,
     416,   417,   418,   803,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   804,   426,     0,     0,   805,   428,
     806,   429,     0,   430,   807,   808,   809,   810,   811,   435,
     436,   437,   438,   439,     0,   812,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   813,   814,   815,   447,   448,
       0,   816,   817,   449,     0,   450,   451,  2279,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   818,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   819,   820,
     470,   821,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   822,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,   823,   824,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   825,     0,   826,   514,   515,   516,
     517,     0,   518,  2280,   828,   520,   521,   522,   523,     0,
     829,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,   830,   831,   554,   555,     0,     0,   556,
     557,   832,   559,   560,   561,   833,   834,   562,   563,   564,
     565,   835,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   836,   572,   573,     0,   837,   838,   839,   840,     0,
       0,     0,     0,     0,   578,   579,     0,   841,   842,   843,
     581,   582,     0,   844,   583,   584,   845,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   846,   593,     0,     0,   847,   848,   849,   594,   850,
     595,     0,     0,   596,   851,     0,   852,   597,     0,   598,
     599,   853,   854,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   855,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,   856,   857,     0,   616,   617,   618,
     858,   619,   620,   621,     0,   622,   859,   860,   623,   861,
     624,     0,   862,   863,   864,   865,   866,   625,   626,     0,
     867,   627,   868,   628,   869,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,  2281,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   870,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   871,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,     0,
     872,   873,     0,     0,     0,     0,   875,     0,   876,     0,
       0,     0,   877,     0,     0,     0,   878,   879,   243,   244,
       0,   760,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   761,     0,   253,   254,
     255,   256,   762,   258,     0,   259,     0,     0,   763,   260,
     764,   765,   766,   261,   767,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,   768,   769,   269,
     270,     0,   271,   272,   770,   771,   274,     0,   275,   276,
     277,   278,   772,   280,     0,   773,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,   774,
     775,   301,     0,     0,     0,   776,   302,   777,     0,   303,
     778,   779,     0,   304,   305,   306,   780,   781,   782,     0,
       0,     0,     0,   783,   309,   784,     0,     0,   785,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,   786,     0,   336,   337,   338,   339,
     340,   787,   788,   341,   342,     0,   343,   344,   345,   346,
     347,   789,     0,   348,   349,     0,     0,     0,   790,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   791,   356,
     792,     0,   358,     0,   359,     0,   793,     0,   360,   361,
       0,   362,   794,     0,   363,   364,     0,     0,     0,   795,
     366,   367,   368,   796,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,   797,   373,   374,   375,   798,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,   799,   386,   387,     0,     0,     0,
       0,     0,   800,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,   801,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,   802,   415,   416,   417,   418,   803,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   804,   426,     0,
       0,   805,   428,   806,   429,     0,   430,   807,   808,   809,
     810,   811,   435,   436,   437,   438,   439,     0,   812,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   813,   814,
     815,   447,   448,     0,   816,   817,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   818,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   819,   820,   470,   821,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   822,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,   823,   824,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   825,     0,   826,
     514,   515,   516,   517,     0,   518,   827,   828,   520,   521,
     522,   523,     0,   829,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,   830,   831,   554,   555,
       0,     0,   556,   557,   832,   559,   560,   561,   833,   834,
     562,   563,   564,   565,   835,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   836,   572,   573,     0,   837,   838,
     839,   840,     0,     0,     0,     0,     0,   578,   579,     0,
     841,   842,   843,   581,   582,     0,   844,   583,   584,   845,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   846,   593,     0,     0,   847,   848,
     849,   594,   850,   595,     0,     0,   596,   851,     0,   852,
     597,     0,   598,   599,   853,   854,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   855,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,   856,   857,     0,
     616,   617,   618,   858,   619,   620,   621,     0,   622,   859,
     860,   623,   861,   624,     0,   862,   863,   864,   865,   866,
     625,   626,     0,   867,   627,   868,   628,   869,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   870,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   871,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,     0,     0,
       0,     0,     0,   872,   873,   874,     0,     0,     0,   875,
       0,   876,     0,     0,     0,   877,     0,     0,     0,   878,
     879,   243,   244,     0,   760,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   761,
       0,   253,   254,   255,   256,   762,   258,     0,   259,     0,
       0,   763,   260,   764,   765,   766,   261,   767,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
     768,   769,   269,   270,     0,   271,   272,   770,   771,   274,
       0,   275,   276,   277,   278,   772,   280,     0,   773,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,   774,   775,   301,     0,     0,     0,   776,   302,
     777,     0,   303,   778,   779,     0,   304,   305,   306,   780,
     781,   782,     0,     0,     0,     0,   783,   309,   784,     0,
       0,   785,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,   786,     0,   336,
     337,   338,   339,   340,   787,   788,   341,   342,     0,   343,
     344,   345,   346,   347,   789,     0,   348,   349,     0,     0,
       0,   790,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   791,   356,   792,     0,   358,     0,   359,     0,   793,
       0,   360,   361,     0,   362,   794,     0,   363,   364,     0,
       0,     0,   795,   366,   367,   368,   796,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,   797,   373,   374,
     375,   798,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,   799,   386,   387,
       0,     0,     0,     0,     0,   800,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,   801,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,   802,   415,   416,   417,   418,   803,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     804,   426,     0,     0,   805,   428,   806,   429,     0,   430,
     807,   808,   809,   810,   811,   435,   436,   437,   438,   439,
       0,   812,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   813,   814,   815,   447,   448,     0,   816,   817,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,   818,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   819,   820,   470,   821,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   822,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
     823,   824,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     825,     0,   826,   514,   515,   516,   517,     0,   518,   827,
     828,   520,   521,   522,   523,     0,   829,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,   830,
     831,   554,   555,     0,     0,   556,   557,   832,   559,   560,
     561,   833,   834,   562,   563,   564,   565,   835,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   836,   572,   573,
       0,   837,   838,   839,   840,     0,     0,     0,     0,     0,
     578,   579,     0,   841,   842,   843,   581,   582,     0,   844,
     583,   584,   845,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   846,   593,     0,
       0,   847,   848,   849,   594,   850,   595,     0,     0,   596,
     851,     0,   852,   597,     0,   598,   599,   853,   854,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   855,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
     856,   857,     0,   616,   617,   618,   858,   619,   620,   621,
       0,   622,   859,   860,   623,   861,   624,     0,   862,   863,
     864,   865,   866,   625,   626,     0,   867,   627,   868,   628,
     869,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   870,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   871,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,     0,   872,   873,  2743,     0,
       0,     0,   875,     0,   876,     0,     0,     0,   877,     0,
       0,     0,   878,   879,   243,   244,     0,   760,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   761,     0,   253,   254,   255,   256,   762,   258,
       0,   259,     0,     0,   763,   260,   764,   765,   766,   261,
     767,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,   768,   769,   269,   270,     0,   271,   272,
     770,   771,   274,     0,   275,   276,   277,   278,   772,   280,
       0,   773,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,   774,   775,   301,     0,     0,
       0,   776,   302,   777,     0,   303,   778,   779,     0,   304,
     305,   306,   780,   781,   782,     0,     0,     0,     0,   783,
     309,   784,     0,     0,   785,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
     786,     0,   336,   337,   338,   339,   340,   787,   788,   341,
     342,     0,   343,   344,   345,   346,   347,   789,     0,   348,
     349,     0,     0,     0,   790,   351,  2799,   352,     0,     0,
       0,   353,     0,   354,   791,   356,   792,     0,   358,     0,
     359,     0,   793,     0,   360,   361,     0,   362,   794,     0,
     363,   364,     0,     0,     0,   795,   366,   367,   368,   796,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
     797,   373,   374,   375,   798,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
     799,   386,   387,     0,     0,     0,     0,     0,   800,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,   801,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,   802,   415,   416,
     417,   418,   803,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   804,   426,     0,     0,   805,   428,   806,
     429,     0,   430,   807,   808,   809,   810,   811,   435,   436,
     437,   438,   439,     0,   812,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   813,   814,   815,   447,   448,     0,
     816,   817,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   818,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   819,   820,   470,
     821,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   822,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,   823,   824,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   825,     0,   826,   514,   515,   516,   517,
       0,   518,   827,   828,   520,   521,   522,   523,     0,   829,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,   830,   831,   554,   555,     0,     0,   556,   557,
     832,   559,   560,   561,   833,   834,   562,   563,   564,   565,
     835,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     836,   572,   573,     0,   837,   838,   839,   840,     0,     0,
       0,     0,     0,   578,   579,     0,   841,   842,   843,   581,
     582,     0,   844,   583,   584,   845,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     846,   593,     0,     0,   847,   848,   849,   594,   850,   595,
       0,     0,   596,   851,     0,   852,   597,     0,   598,   599,
     853,   854,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   855,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,   856,   857,     0,   616,   617,   618,   858,
     619,   620,   621,     0,   622,   859,   860,   623,   861,   624,
       0,   862,   863,   864,   865,   866,   625,   626,     0,   867,
     627,   868,   628,   869,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   870,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   871,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,     0,     0,     0,     0,     0,   872,
     873,     0,     0,     0,     0,   875,     0,   876,     0,     0,
       0,   877,     0,     0,     0,   878,   879,   243,   244,     0,
     760,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   761,     0,   253,   254,   255,
     256,   762,   258,     0,   259,     0,     0,   763,   260,   764,
     765,   766,   261,   767,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,   768,   769,   269,   270,
       0,   271,   272,   770,   771,   274,     0,   275,   276,   277,
     278,   772,   280,     0,   773,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,   774,   775,
     301,     0,     0,     0,   776,   302,   777,     0,   303,   778,
     779,     0,   304,   305,   306,   780,   781,   782,     0,     0,
       0,     0,   783,   309,   784,     0,     0,   785,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,   786,     0,   336,   337,   338,   339,   340,
     787,   788,   341,   342,     0,   343,   344,   345,   346,   347,
     789,     0,   348,   349,     0,     0,     0,   790,   351,  2801,
     352,     0,     0,     0,   353,     0,   354,   791,   356,   792,
       0,   358,     0,   359,     0,   793,     0,   360,   361,     0,
     362,   794,     0,   363,   364,     0,     0,     0,   795,   366,
     367,   368,   796,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,   797,   373,   374,   375,   798,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,   799,   386,   387,     0,     0,     0,     0,
       0,   800,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   801,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
     802,   415,   416,   417,   418,   803,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   804,   426,     0,     0,
     805,   428,   806,   429,     0,   430,   807,   808,   809,   810,
     811,   435,   436,   437,   438,   439,     0,   812,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   813,   814,   815,
     447,   448,     0,   816,   817,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   818,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     819,   820,   470,   821,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   822,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,   823,   824,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   825,     0,   826,   514,
     515,   516,   517,     0,   518,   827,   828,   520,   521,   522,
     523,     0,   829,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,   830,   831,   554,   555,     0,
       0,   556,   557,   832,   559,   560,   561,   833,   834,   562,
     563,   564,   565,   835,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   836,   572,   573,     0,   837,   838,   839,
     840,     0,     0,     0,     0,     0,   578,   579,     0,   841,
     842,   843,   581,   582,     0,   844,   583,   584,   845,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   846,   593,     0,     0,   847,   848,   849,
     594,   850,   595,     0,     0,   596,   851,     0,   852,   597,
       0,   598,   599,   853,   854,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   855,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,   856,   857,     0,   616,
     617,   618,   858,   619,   620,   621,     0,   622,   859,   860,
     623,   861,   624,     0,   862,   863,   864,   865,   866,   625,
     626,     0,   867,   627,   868,   628,   869,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   870,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   871,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,     0,   872,   873,     0,     0,     0,     0,   875,     0,
     876,     0,     0,     0,   877,     0,     0,     0,   878,   879,
     243,   244,     0,   760,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   761,     0,
     253,   254,   255,   256,   762,   258,     0,   259,     0,     0,
     763,   260,   764,   765,   766,   261,   767,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,   768,
     769,   269,   270,     0,   271,   272,   770,   771,   274,     0,
     275,   276,   277,   278,   772,   280,     0,   773,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,   774,   775,   301,     0,     0,     0,   776,   302,   777,
       0,   303,   778,   779,     0,   304,   305,   306,   780,   781,
     782,     0,     0,     0,     0,   783,   309,   784,     0,     0,
     785,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,   786,     0,   336,   337,
     338,   339,   340,   787,   788,   341,   342,     0,   343,   344,
     345,   346,   347,   789,     0,   348,   349,     0,     0,     0,
     790,   351,  2803,   352,     0,     0,     0,   353,     0,   354,
     791,   356,   792,     0,   358,     0,   359,     0,   793,     0,
     360,   361,     0,   362,   794,     0,   363,   364,     0,     0,
       0,   795,   366,   367,   368,   796,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,   797,   373,   374,   375,
     798,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,   799,   386,   387,     0,
       0,     0,     0,     0,   800,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   801,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,   802,   415,   416,   417,   418,   803,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   804,
     426,     0,     0,   805,   428,   806,   429,     0,   430,   807,
     808,   809,   810,   811,   435,   436,   437,   438,   439,     0,
     812,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     813,   814,   815,   447,   448,     0,   816,   817,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,   818,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   819,   820,   470,   821,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   822,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,   823,
     824,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   825,
       0,   826,   514,   515,   516,   517,     0,   518,   827,   828,
     520,   521,   522,   523,     0,   829,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,   830,   831,
     554,   555,     0,     0,   556,   557,   832,   559,   560,   561,
     833,   834,   562,   563,   564,   565,   835,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   836,   572,   573,     0,
     837,   838,   839,   840,     0,     0,     0,     0,     0,   578,
     579,     0,   841,   842,   843,   581,   582,     0,   844,   583,
     584,   845,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   846,   593,     0,     0,
     847,   848,   849,   594,   850,   595,     0,     0,   596,   851,
       0,   852,   597,     0,   598,   599,   853,   854,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   855,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,   856,
     857,     0,   616,   617,   618,   858,   619,   620,   621,     0,
     622,   859,   860,   623,   861,   624,     0,   862,   863,   864,
     865,   866,   625,   626,     0,   867,   627,   868,   628,   869,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     870,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   871,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
       0,     0,     0,     0,     0,   872,   873,     0,     0,     0,
       0,   875,     0,   876,     0,     0,     0,   877,     0,     0,
       0,   878,   879,   243,   244,     0,   760,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   761,     0,   253,   254,   255,   256,   762,   258,     0,
     259,     0,     0,   763,   260,   764,   765,   766,   261,   767,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,   768,   769,   269,   270,     0,   271,   272,   770,
     771,   274,     0,   275,   276,   277,   278,   772,   280,     0,
     773,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,   774,   775,   301,     0,     0,     0,
     776,   302,   777,     0,   303,   778,   779,     0,   304,   305,
     306,   780,   781,   782,     0,     0,     0,     0,   783,   309,
     784,     0,     0,   785,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,   786,
       0,   336,   337,   338,   339,   340,   787,   788,   341,   342,
       0,   343,   344,   345,   346,   347,   789,     0,   348,   349,
       0,     0,     0,   790,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   791,   356,   792,     0,   358,     0,   359,
       0,   793,     0,   360,   361,     0,   362,   794,     0,   363,
     364,     0,     0,     0,   795,   366,   367,   368,   796,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,   797,
     373,   374,   375,   798,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,   799,
     386,   387,     0,     0,     0,     0,     0,   800,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,   801,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,   802,   415,   416,   417,
     418,   803,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   804,   426,     0,     0,   805,   428,   806,   429,
       0,   430,   807,   808,   809,   810,   811,   435,   436,   437,
     438,   439,     0,   812,   440,   441,     0,     0,   442,   443,
     444,   445,   446,   813,   814,   815,   447,   448,     0,   816,
     817,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   818,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   819,   820,   470,   821,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   822,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,   823,   824,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   825,     0,   826,   514,   515,   516,   517,     0,
     518,   827,   828,   520,   521,   522,   523,     0,   829,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,   830,   831,   554,   555,     0,     0,   556,   557,   832,
     559,   560,   561,   833,   834,   562,   563,   564,   565,   835,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   836,
     572,   573,     0,   837,   838,   839,   840,     0,     0,     0,
       0,     0,   578,   579,     0,   841,   842,   843,   581,   582,
       0,   844,   583,   584,   845,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   846,
     593,     0,     0,   847,   848,   849,   594,   850,   595,     0,
       0,   596,   851,     0,   852,   597,     0,   598,   599,   853,
     854,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   855,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,   856,   857,     0,   616,   617,   618,   858,   619,
     620,   621,     0,   622,   859,   860,   623,   861,   624,     0,
     862,   863,   864,   865,   866,   625,   626,     0,   867,   627,
     868,   628,   869,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   870,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   871,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,     0,   872,   873,
       0,     0,     0,     0,   875,     0,   876,     0,     0,     0,
     877,     0,     0,     0,   878,   879,   243,   244,     0,   760,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   761,     0,   253,   254,   255,   256,
     762,   258,     0,   259,     0,     0,   763,   260,   764,   765,
     766,   261,   767,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,   768,   769,   269,   270,     0,
     271,   272,   770,   771,   274,     0,   275,   276,   277,   278,
     772,   280,     0,   773,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,   774,   775,   301,
       0,     0,     0,   776,   302,   777,     0,   303,   778,   779,
       0,   304,   305,   306,   780,   781,   782,     0,     0,     0,
       0,   783,   309,   784,     0,     0,   785,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,   786,     0,   336,   337,   338,   339,   340,   787,
     788,   341,   342,     0,   343,   344,   345,   346,   347,   789,
       0,   348,   349,     0,     0,     0,   790,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   791,   356,   792,     0,
     358,     0,   359,     0,   793,     0,   360,   361,     0,   362,
     794,     0,   363,   364,     0,     0,     0,   795,   366,   367,
     368,   796,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,   797,   373,   374,   375,   798,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,   799,   386,   387,     0,     0,     0,     0,     0,
     800,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   801,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,   802,
     415,   416,   417,   418,   803,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   804,   426,     0,     0,   805,
     428,   806,   429,     0,   430,   807,   808,   809,   810,   811,
     435,   436,   437,   438,   439,     0,   812,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   813,   814,   815,   447,
     448,     0,   816,   817,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   818,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   819,
     820,   470,   821,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   822,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,   823,   824,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   825,     0,   826,   514,   515,
     516,   517,     0,   518,   827,   828,   520,   521,   522,   523,
       0,   829,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,   830,   831,   554,   555,     0,     0,
     556,   557,   832,   559,   560,   561,   833,   834,   562,   563,
     564,   565,   835,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   836,   572,   573,     0,   837,   838,   839,   840,
       0,     0,     0,     0,     0,   578,   579,     0,   841,   842,
     843,   581,   582,     0,   844,   583,   584,   845,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   846,   593,     0,     0,   847,   848,   849,   594,
     850,   595,     0,     0,   596,   851,     0,   852,   597,     0,
     598,   599,   853,   854,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     855,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,   856,   857,     0,   616,   617,
     618,   858,   619,   620,   621,     0,   622,   859,   860,   623,
     861,   624,     0,   862,   863,   864,   865,   866,   625,   626,
       0,   867,   627,   868,   628,   869,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   870,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   871,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,     0,     0,     0,     0,
       0,   872,   873,     0,     0,     0,     0,   875,     0,  1275,
       0,     0,     0,   877,     0,     0,     0,   878,   879,   243,
     244,     0,   760,   246,   247,   248,   249,  2078,     0,   250,
       0,     0,     0,     0,  2079,     0,     0,   761,     0,   253,
     254,   255,   256,   762,   258,     0,   259,     0,     0,   763,
     260,   764,   765,   766,   261,   767,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,   768,   769,
     269,   270,     0,   271,   272,   770,   771,   274,     0,   275,
     276,   277,   278,   772,   280,     0,   773,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
     774,   775,   301,     0,     0,     0,   776,   302,   777,     0,
     303,   778,   779,     0,   304,   305,   306,   780,   781,   782,
       0,     0,     0,     0,   783,   309,   784,     0,     0,   785,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,   786,     0,   336,   337,   338,
     339,   340,   787,   788,   341,   342,     0,   343,   344,   345,
     346,   347,   789,     0,   348,   349,     0,     0,     0,   790,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   791,
     356,   792,     0,   358,     0,   359,     0,   793,     0,   360,
     361,     0,   362,   794,     0,   363,   364,     0,     0,     0,
     795,   366,   367,   368,   796,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,   797,   373,   374,   375,   798,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,   799,   386,   387,     0,     0,
       0,     0,     0,   800,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,   801,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,   802,   415,   416,   417,   418,   803,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   804,   426,
       0,     0,   805,   428,   806,   429,     0,   430,   807,   808,
     809,   810,   811,   435,   436,   437,   438,   439,     0,   812,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   813,
       0,   815,   447,   448,     0,   816,   817,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
     818,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   819,   820,   470,   821,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     822,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,   823,   824,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   825,     0,
     826,   514,   515,   516,   517,     0,   518,   827,   828,   520,
     521,   522,   523,     0,   829,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,   830,   831,   554,
     555,     0,     0,   556,   557,   832,   559,   560,   561,   833,
     834,   562,   563,   564,   565,   835,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   836,   572,   573,     0,   837,
     838,   839,   840,     0,     0,     0,     0,     0,   578,   579,
       0,   841,   842,   843,   581,   582,     0,   844,   583,   584,
     845,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   846,   593,     0,     0,   847,
     848,   849,   594,   850,   595,     0,     0,   596,   851,     0,
     852,   597,     0,   598,   599,   853,   854,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   855,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,   856,   857,
       0,   616,   617,   618,   858,   619,   620,   621,     0,   622,
     859,   860,   623,   861,   624,     0,   862,   863,   864,   865,
     866,   625,   626,     0,   867,   627,   868,   628,   869,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   870,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   871,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,     0,   872,   873,     0,     0,     0,     0,
     875,     0,   876,     0,     0,     0,   877,     0,     0,     0,
     878,   879,   243,   244,     0,   760,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     761,     0,   253,   254,   255,   256,   762,   258,     0,   259,
       0,     0,   763,   260,   764,   765,   766,   261,   767,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,   768,   769,   269,   270,     0,   271,   272,   770,   771,
     274,     0,   275,   276,   277,   278,   772,   280,     0,   773,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,   774,   775,   301,     0,     0,     0,   776,
     302,   777,     0,   303,   778,   779,     0,   304,   305,   306,
     780,   781,   782,     0,     0,     0,     0,   783,   309,   784,
       0,     0,  2338,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,   786,     0,
     336,   337,   338,   339,   340,   787,   788,   341,   342,     0,
     343,   344,   345,   346,   347,   789,     0,   348,   349,     0,
       0,     0,   790,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   791,   356,   792,     0,   358,     0,   359,     0,
     793,     0,   360,   361,     0,   362,   794,     0,   363,   364,
       0,     0,     0,   795,   366,   367,   368,   796,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,   797,   373,
     374,   375,   798,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,   799,   386,
     387,     0,     0,     0,     0,     0,   800,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,   801,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,   802,   415,   416,   417,   418,
     803,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   804,   426,     0,     0,   805,   428,   806,   429,     0,
     430,   807,   808,   809,   810,   811,   435,   436,   437,   438,
     439,     0,   812,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   813,   814,   815,   447,   448,     0,   816,   817,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,   818,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   819,   820,   470,   821,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   822,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,   823,   824,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   825,     0,   826,   514,   515,   516,   517,     0,   518,
     827,   828,   520,   521,   522,   523,     0,   829,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
     830,   831,   554,   555,     0,     0,   556,   557,   832,   559,
     560,   561,   833,   834,   562,   563,   564,   565,   835,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   836,   572,
     573,     0,   837,   838,   839,   840,     0,     0,     0,     0,
       0,   578,   579,     0,   841,   842,   843,   581,   582,     0,
     844,   583,   584,   845,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   846,   593,
       0,     0,   847,   848,   849,   594,   850,   595,     0,     0,
     596,   851,     0,   852,   597,     0,   598,   599,   853,   854,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   855,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,   856,   857,     0,   616,   617,   618,   858,   619,   620,
     621,     0,   622,   859,   860,   623,   861,   624,     0,   862,
     863,   864,   865,   866,   625,   626,     0,   867,   627,   868,
     628,   869,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   870,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     871,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,     0,     0,     0,     0,     0,   872,   873,     0,
       0,     0,     0,   875,     0,   876,     0,     0,     0,   877,
       0,     0,     0,   878,   879,   243,   244,     0,   760,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   761,     0,   253,   254,   255,   256,   762,
     258,     0,   259,     0,     0,   763,   260,   764,   765,   766,
     261,   767,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,   768,   769,   269,   270,     0,   271,
     272,   770,   771,   274,     0,   275,   276,   277,   278,   772,
     280,     0,   773,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,   774,   775,   301,     0,
       0,     0,   776,   302,   777,     0,   303,   778,   779,     0,
     304,   305,   306,   780,   781,   782,     0,     0,     0,     0,
     783,   309,   784,     0,     0,   785,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,   786,     0,   336,   337,   338,   339,   340,   787,   788,
     341,   342,     0,   343,   344,   345,   346,   347,   789,     0,
     348,   349,     0,     0,     0,   790,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   791,   356,   792,     0,   358,
       0,   359,     0,   793,     0,   360,   361,     0,   362,   794,
       0,   363,   364,     0,     0,     0,   795,   366,   367,   368,
     796,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,   797,   373,   374,   375,  3431,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,   799,   386,   387,     0,     0,     0,     0,     0,   800,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
     801,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,   802,   415,
     416,   417,   418,   803,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   804,   426,     0,     0,   805,   428,
     806,   429,     0,   430,   807,   808,   809,   810,   811,   435,
     436,   437,   438,   439,     0,   812,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   813,   814,   815,   447,   448,
       0,   816,   817,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   818,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   819,   820,
     470,   821,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   822,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,   823,   824,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   825,     0,   826,   514,   515,   516,
     517,     0,   518,   827,   828,   520,   521,   522,   523,     0,
     829,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,   830,   831,   554,   555,     0,     0,   556,
     557,   832,   559,   560,   561,   833,   834,   562,   563,   564,
     565,   835,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   836,   572,   573,     0,   837,   838,   839,   840,     0,
       0,     0,     0,     0,   578,   579,     0,   841,   842,   843,
     581,   582,     0,   844,   583,   584,   845,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   846,   593,     0,     0,   847,   848,   849,   594,   850,
     595,     0,     0,   596,   851,     0,   852,   597,     0,   598,
     599,   853,   854,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   855,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,   856,   857,     0,   616,   617,   618,
     858,   619,   620,   621,     0,   622,   859,   860,   623,   861,
     624,     0,   862,   863,   864,   865,   866,   625,   626,     0,
     867,   627,   868,   628,   869,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   870,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   871,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,     0,
     872,   873,     0,     0,     0,     0,   875,     0,   876,     0,
       0,     0,   877,     0,     0,     0,   878,   879,   243,   244,
       0,   760,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   761,     0,   253,   254,
     255,   256,   762,   258,     0,   259,     0,     0,   763,   260,
     764,   765,   766,   261,   767,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,   768,   769,   269,
     270,     0,   271,   272,   770,   771,   274,     0,   275,   276,
     277,   278,   772,   280,     0,   773,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,   774,
     775,   301,     0,     0,     0,   776,   302,   777,     0,   303,
     778,   779,     0,   304,   305,   306,   780,   781,   782,     0,
       0,     0,     0,   783,   309,   784,     0,     0,   785,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,   786,     0,   336,   337,   338,   339,
     340,   787,   788,   341,   342,     0,   343,   344,   345,   346,
     347,   789,     0,   348,   349,     0,     0,     0,   790,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   791,   356,
     792,     0,   358,     0,   359,     0,   793,     0,   360,   361,
       0,   362,   794,     0,   363,   364,     0,     0,     0,   795,
     366,   367,   368,   796,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,   797,   373,   374,   375,  3502,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,   799,   386,   387,     0,     0,     0,
       0,     0,   800,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,   801,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,   802,   415,   416,   417,   418,   803,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   804,   426,     0,
       0,   805,   428,   806,   429,     0,   430,   807,   808,   809,
     810,   811,   435,   436,   437,   438,   439,     0,   812,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   813,   814,
     815,   447,   448,     0,   816,   817,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   818,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   819,   820,   470,   821,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   822,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,   823,   824,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   825,     0,   826,
     514,   515,   516,   517,     0,   518,   827,   828,   520,   521,
     522,   523,     0,   829,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,   830,   831,   554,   555,
       0,     0,   556,   557,   832,   559,   560,   561,   833,   834,
     562,   563,   564,   565,   835,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   836,   572,   573,     0,   837,   838,
     839,   840,     0,     0,     0,     0,     0,   578,   579,     0,
     841,   842,   843,   581,   582,     0,   844,   583,   584,   845,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   846,   593,     0,     0,   847,   848,
     849,   594,   850,   595,     0,     0,   596,   851,     0,   852,
     597,     0,   598,   599,   853,   854,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   855,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,   856,   857,     0,
     616,   617,   618,   858,   619,   620,   621,     0,   622,   859,
     860,   623,   861,   624,     0,   862,   863,   864,   865,   866,
     625,   626,     0,   867,   627,   868,   628,   869,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   870,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   871,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,     0,     0,
       0,     0,     0,   872,   873,     0,     0,     0,     0,   875,
       0,   876,     0,     0,     0,   877,     0,     0,     0,   878,
     879,   243,   244,     0,   760,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   761,
       0,   253,   254,   255,   256,   762,   258,     0,   259,     0,
       0,   763,   260,   764,   765,   766,   261,   767,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
     768,   769,   269,   270,     0,   271,   272,   770,   771,   274,
       0,   275,   276,   277,   278,   772,   280,     0,   773,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,   774,   775,   301,     0,     0,     0,   776,   302,
     777,     0,   303,   778,   779,     0,   304,   305,   306,   780,
     781,   782,     0,     0,     0,     0,   783,   309,   784,     0,
       0,   785,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,   786,     0,   336,
     337,   338,   339,   340,   787,   788,   341,   342,     0,   343,
     344,   345,   346,   347,   789,     0,   348,   349,     0,     0,
       0,   790,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   791,   356,   792,     0,   358,     0,   359,     0,   793,
       0,   360,   361,     0,   362,   794,     0,   363,   364,     0,
       0,     0,   795,   366,   367,   368,   796,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,   797,   373,   374,
     375,   798,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,   799,   386,   387,
       0,     0,     0,     0,     0,   800,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,   801,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,   802,   415,   416,   417,   418,   803,
     419,   420,  5311,     0,     0,     0,   421,   422,   423,   424,
     804,   426,     0,     0,   805,   428,   806,   429,     0,   430,
     807,   808,   809,   810,   811,   435,   436,   437,   438,   439,
       0,   812,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   813,     0,   815,   447,   448,     0,   816,   817,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,   818,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   819,   820,   470,   821,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   822,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
     823,   824,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     825,     0,   826,   514,   515,   516,   517,     0,   518,   827,
     828,   520,   521,   522,   523,     0,   829,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,   830,
     831,   554,   555,     0,     0,   556,   557,   832,   559,   560,
     561,   833,   834,   562,   563,   564,   565,   835,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   836,   572,   573,
       0,   837,   838,   839,   840,     0,     0,     0,     0,     0,
     578,   579,     0,   841,   842,   843,   581,   582,     0,   844,
     583,   584,   845,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   846,   593,     0,
       0,   847,   848,   849,   594,   850,   595,     0,     0,   596,
     851,     0,   852,   597,     0,   598,   599,   853,   854,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   855,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
     856,   857,     0,   616,   617,   618,   858,   619,   620,   621,
       0,   622,   859,   860,   623,   861,   624,     0,   862,   863,
     864,   865,   866,   625,   626,     0,   867,   627,   868,   628,
     869,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   870,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   871,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,     0,   872,   873,     0,     0,
       0,     0,   875,     0,   876,     0,     0,     0,   877,     0,
       0,     0,   878,   879,   243,   244,     0,   760,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   761,     0,   253,   254,   255,   256,   762,   258,
       0,   259,     0,     0,   763,   260,   764,   765,   766,   261,
     767,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,   768,   769,   269,   270,     0,   271,   272,
     770,   771,   274,     0,   275,   276,   277,   278,   772,   280,
       0,   773,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,   774,   775,   301,     0,     0,
       0,   776,   302,   777,     0,   303,   778,   779,     0,   304,
     305,   306,   780,   781,   782,     0,     0,     0,     0,   783,
     309,   784,     0,     0,   785,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
     786,     0,   336,   337,   338,   339,   340,   787,   788,   341,
     342,     0,   343,   344,   345,   346,   347,   789,     0,   348,
     349,     0,     0,     0,   790,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   791,   356,   792,     0,   358,     0,
     359,     0,   793,     0,   360,   361,     0,   362,   794,     0,
     363,   364,     0,     0,     0,   795,   366,   367,   368,   796,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
     797,   373,   374,   375,   798,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
     799,   386,   387,     0,     0,     0,     0,     0,   800,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,   801,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,   802,   415,   416,
     417,   418,   803,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   804,   426,     0,     0,   805,   428,   806,
     429,     0,   430,   807,   808,   809,   810,   811,   435,   436,
     437,   438,   439,     0,   812,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   813,     0,   815,   447,   448,     0,
     816,   817,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   818,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   819,   820,   470,
     821,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   822,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,   823,   824,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   825,     0,   826,   514,   515,   516,   517,
       0,   518,   827,   828,   520,   521,   522,   523,     0,   829,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,   830,   831,   554,   555,     0,     0,   556,   557,
     832,   559,   560,   561,   833,   834,   562,   563,   564,   565,
     835,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     836,   572,   573,     0,   837,   838,   839,   840,     0,     0,
       0,     0,     0,   578,   579,     0,   841,   842,   843,   581,
     582,     0,   844,   583,   584,   845,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     846,   593,     0,     0,   847,   848,   849,   594,   850,   595,
       0,     0,   596,   851,     0,   852,   597,     0,   598,   599,
     853,   854,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   855,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,   856,   857,     0,   616,   617,   618,   858,
     619,   620,   621,     0,   622,   859,   860,   623,   861,   624,
       0,   862,   863,   864,   865,   866,   625,   626,     0,   867,
     627,   868,   628,   869,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   870,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   871,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,     0,     0,     0,     0,     0,   872,
     873,     0,     0,     0,     0,   875,     0,   876,     0,     0,
       0,   877,     0,     0,     0,   878,   879,   243,   244,     0,
     760,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   761,     0,   253,   254,   255,
     256,   762,   258,     0,   259,     0,     0,   763,   260,   764,
     765,   766,   261,   767,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,   768,   769,   269,   270,
       0,   271,   272,   770,   771,   274,     0,   275,   276,   277,
     278,   772,   280,     0,   773,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,   774,   775,
     301,     0,     0,     0,   776,   302,   777,     0,   303,   778,
     779,     0,   304,   305,   306,   780,   781,   782,     0,     0,
       0,     0,   783,   309,   784,     0,     0,   785,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,   786,     0,   336,   337,   338,   339,   340,
     787,   788,   341,   342,     0,   343,   344,   345,   346,   347,
     789,     0,   348,   349,     0,     0,     0,   790,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   791,   356,   792,
       0,   358,     0,   359,     0,   793,     0,   360,   361,     0,
     362,   794,     0,   363,   364,     0,     0,     0,   795,   366,
     367,   368,   796,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,   797,   373,   374,   375,  2096,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,   799,   386,   387,     0,     0,     0,     0,
       0,   800,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   801,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
     802,   415,   416,   417,   418,   803,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   804,   426,     0,     0,
     805,   428,   806,   429,     0,   430,   807,   808,   809,   810,
     811,   435,   436,   437,   438,   439,     0,   812,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   813,     0,   815,
     447,   448,     0,   816,   817,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   818,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     819,   820,   470,   821,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   822,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,   823,   824,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   825,     0,   826,   514,
     515,   516,   517,     0,   518,   827,   828,   520,   521,   522,
     523,     0,   829,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,   830,   831,   554,   555,     0,
       0,   556,   557,   832,   559,   560,   561,   833,   834,   562,
     563,   564,   565,   835,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   836,   572,   573,     0,   837,   838,   839,
     840,     0,     0,     0,     0,     0,   578,   579,     0,   841,
     842,   843,   581,   582,     0,   844,   583,   584,   845,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   846,   593,     0,     0,   847,   848,   849,
     594,   850,   595,     0,     0,   596,   851,     0,   852,   597,
       0,   598,   599,   853,   854,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   855,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,   856,   857,     0,   616,
     617,   618,   858,   619,   620,   621,     0,   622,   859,   860,
     623,   861,   624,     0,   862,   863,   864,   865,   866,   625,
     626,     0,   867,   627,   868,   628,   869,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   870,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   871,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,     0,   872,   873,     0,     0,     0,     0,   875,     0,
     876,     0,     0,     0,   877,     0,     0,     0,   878,   879,
     243,   244,     0,   760,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   761,     0,
     253,   254,   255,   256,   762,   258,     0,   259,     0,     0,
     763,   260,   764,   765,   766,   261,   767,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,   768,
     769,   269,   270,     0,   271,   272,   770,   771,   274,     0,
     275,   276,   277,   278,   772,   280,     0,   773,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,   774,   775,   301,     0,     0,     0,   776,   302,   777,
       0,   303,   778,   779,     0,   304,   305,   306,   780,   781,
     782,     0,     0,     0,     0,   783,   309,   784,     0,     0,
     785,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,   786,     0,   336,   337,
     338,   339,   340,   787,   788,   341,   342,     0,   343,   344,
     345,   346,   347,   789,     0,   348,   349,     0,     0,     0,
     790,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     791,   356,   792,     0,   358,     0,   359,     0,   793,     0,
     360,   361,     0,   362,   794,     0,   363,   364,     0,     0,
       0,   795,   366,   367,   368,   796,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,   797,   373,   374,   375,
    2098,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,   799,   386,   387,     0,
       0,     0,     0,     0,   800,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   801,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,   802,   415,   416,   417,   418,   803,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   804,
     426,     0,     0,   805,   428,   806,   429,     0,   430,   807,
     808,   809,   810,   811,   435,   436,   437,   438,   439,     0,
     812,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     813,     0,   815,   447,   448,     0,   816,   817,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,   818,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   819,   820,   470,   821,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   822,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,   823,
     824,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   825,
       0,   826,   514,   515,   516,   517,     0,   518,   827,   828,
     520,   521,   522,   523,     0,   829,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,   830,   831,
     554,   555,     0,     0,   556,   557,   832,   559,   560,   561,
     833,   834,   562,   563,   564,   565,   835,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   836,   572,   573,     0,
     837,   838,   839,   840,     0,     0,     0,     0,     0,   578,
     579,     0,   841,   842,   843,   581,   582,     0,   844,   583,
     584,   845,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   846,   593,     0,     0,
     847,   848,   849,   594,   850,   595,     0,     0,   596,   851,
       0,   852,   597,     0,   598,   599,   853,   854,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   855,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,   856,
     857,     0,   616,   617,   618,   858,   619,   620,   621,     0,
     622,   859,   860,   623,   861,   624,     0,   862,   863,   864,
     865,   866,   625,   626,     0,   867,   627,   868,   628,   869,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     870,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   871,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
       0,     0,     0,     0,     0,   872,   873,     0,     0,     0,
       0,   875,     0,   876,     0,     0,     0,   877,     0,     0,
       0,   878,   879,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
      42,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,    49,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,    54,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,    55,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,  2972,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,  2973,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,  2974,     0,   250,     0,
       0,     0,     0,   251,     0,  2975,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,  2971,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,  2972,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,  2973,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,     0,     0,
       0,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,  2974,     0,   250,     0,     0,     0,     0,   251,     0,
    2975,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,  2972,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,  2973,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,  2974,   250,     0,     0,
       0,     0,   251,     0,     0,  2975,     0,   253,   254,   255,
     256,   257,   258,     0,  -564,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,     0,     0,     0,     0,   268,  5151,     0,   269,   270,
       0,   271,   272,     0,     0,     0,     0,   275,   276,   277,
    5152,   279,   280,     0,   281,   282,     0,   283,   284,     0,
     286,     0,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,     0,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,     0,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,     0,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,     0,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,     0,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,  5153,   343,   344,   345,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,     0,   361,     0,
       0,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,  5154,     0,   369,     0,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,     0,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,  5155,
       0,     0,   381,     0,   382,     0,     0,     0,   384,     0,
       0,   385,  5156,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,  -519,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,  5157,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,     0,     0,     0,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,     0,   498,  -519,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,     0,     0,   508,
     509,     0,   510,   511,   512,  5158,   513,     0,     0,     0,
     515,   516,   517,     0,   518,     0,   519,   520,     0,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,     0,     0,
       0,   533,     0,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
       0,   550,   551,   552,   553,     0,     0,     0,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,     0,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,     0,     0,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,  -519,     0,     0,
       0,   602,   603,   604,     0,   605,     0,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,     0,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,     0,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,  5560,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,   764,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,  2895,     0,     0,     0,
       0,   308,   309,   784,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
     788,   341,   342,     0,   343,   344,   345,   346,   347,   789,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
     794,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   801,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,   812,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,   816,   817,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   836,   572,   573,     0,  2896,   575,   576,  2897,
       0,     0,     0,     0,     0,   578,   579,     0,     0,   842,
     580,   581,   582,     0,   844,   583,   584,   845,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  2898,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   801,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,   817,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   818,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,   844,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  2046,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,  1693,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1143,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,  1694,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  1695,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,  1026,  1027,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  1028,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
    1029,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,  1030,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,  1031,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,  1032,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,  1033,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,  1034,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,  1035,  1036,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,  1037,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,  1038,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  1039,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1143,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  1356,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1143,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  1532,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,  1026,  1027,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  1540,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
    1029,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,  1030,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,  1031,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,  1033,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,  1035,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,  1037,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  1039,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1143,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  1695,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,  2157,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  2158,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
    5498,   251,     0,  5499,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  2158,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  5499,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,    42,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,    49,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
      54,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,    55,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,  1127,
    4155,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
    4394,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
    4398,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
    2469,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
    2470,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,  1851,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,  1852,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,  3998,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,    42,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,  2472,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,    49,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
      54,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,    55,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,  1127,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,  2972,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,  2973,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,  2974,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,  1279,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,  3194,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,  3527,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,  4279,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,  2116,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,  2911,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,  3559,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,  3745,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,     0,     0,     0,     0,
       0,   243,   244,  4131,   245,   246,   247,   248,   249,   937,
     938,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,   939,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,   940,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
     941,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   942,   333,   334,   943,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   944,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,   945,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,   946,     0,   372,     0,     0,     0,   947,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
     948,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,   949,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
       0,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   950,   477,   478,   479,
     951,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,   952,     0,   489,   490,
     491,   492,   493,     0,   953,   495,     0,   496,   497,   498,
       0,     0,   954,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,   955,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,   956,   957,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   958,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,   959,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,   960,   591,   961,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,     0,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,  1499,   938,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,   939,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,   940,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,   941,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   942,   333,   334,   943,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   944,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,   945,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
     946,     0,   372,     0,     0,     0,   947,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,   948,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
     949,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,     0,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   950,   477,   478,   479,  1500,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,   952,     0,   489,   490,   491,
     492,   493,     0,   953,   495,     0,   496,   497,   498,     0,
       0,   954,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,   955,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
     956,   957,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   958,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,   959,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,   960,   591,   961,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,     0,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,   938,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,   939,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,   940,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,   941,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   942,   333,   334,   943,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   944,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,   945,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,   946,
       0,   372,     0,     0,     0,   947,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,   948,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,   949,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,     0,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   950,   477,   478,   479,     0,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,   952,     0,   489,   490,   491,   492,
     493,     0,   953,   495,     0,   496,   497,   498,     0,     0,
     954,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,   955,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,   956,
     957,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   958,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   240,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
     959,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,   960,   591,   961,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,     0,     0,   639,   640,   641,     0,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,  3212,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,  3213,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,  3214,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,  3215,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,  1386,  1387,
       0,   447,   448,     0,     0,  3216,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,  5548,  1004,  5549,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,  3217,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
    1360,  1361,   251,  1362,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,  1363,     0,
       0,  1364,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,  1365,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,  1366,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,  1509,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  1510,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,  1511,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1143,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,  1512,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,  2469,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,  2470,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,  1851,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,  1852,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,  2472,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,  1534,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,  1535,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,  1143,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,  2300,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
    2301,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   818,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,  2302,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,  1509,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,  3863,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,  1143,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
    1142,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
    1143,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,  1144,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,  1142,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,  1143,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,  1563,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,  1143,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   240,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
    1633,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,  1634,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,  1405,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,  2994,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,  1143,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   240,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1143,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,  3283,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,  1509,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,  1143,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,  1143,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
    3919,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,  1143,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,  5468,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,  5469,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,  1004,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,  1110,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,  1177,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,  1178,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,  1365,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,  2430,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  2565,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  3196,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,  3219,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,  3248,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,  3313,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,  2179,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,  2180,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,  5215,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,  1540,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,     0,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,     0,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
       0,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,  1541,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,     0,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,     0,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,  1540,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,     0,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,     0,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,     0,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,     0,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,     0,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,  1525,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  1526,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,     0,   333,
     334,     0,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,     0,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,   948,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,  1527,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,     0,   477,   478,   479,     0,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,     0,
     495,     0,   496,   497,   498,     0,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,     0,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,     0,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,     0,     0,
     639,   640,   641,     0,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,  5292,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  5293,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,     0,   333,   334,
       0,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,     0,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,   948,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,  5294,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
       0,   477,   478,   479,     0,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,     0,   495,
       0,   496,   497,   498,     0,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,     0,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,     0,     0,   639,
     640,   641,     0,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,  2238,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,     0,   333,   334,     0,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,     0,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,   948,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,  2239,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,     0,
     477,   478,   479,     0,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,     0,   495,     0,
     496,   497,   498,     0,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,     0,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,     0,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,     0,     0,   639,   640,
     641,     0,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,  3075,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,     0,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,     0,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,   948,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,  3076,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,     0,   477,
     478,   479,     0,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,     0,   495,     0,   496,
     497,   498,     0,     0,     0,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,     0,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,     0,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,     0,   333,   334,     0,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
       0,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,   948,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,     0,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,     0,   477,   478,
     479,     0,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,     0,   495,     0,   496,   497,
     498,     0,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,     0,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,     0,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,     0,     0,   639,   640,   641,     0,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,     0,
       0,   253,   254,   255,   256,   257,   258,     0,  -564,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,     0,     0,     0,     0,   268,
    5151,     0,   269,   270,     0,   271,   272,     0,     0,     0,
       0,   275,   276,   277,  5152,   279,   280,     0,   281,   282,
       0,   283,   284,     0,   286,     0,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,     0,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,     0,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,     0,
       0,     0,   319,   320,   321,     0,  -534,  -534,   322,     0,
    -534,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,  5153,   343,
     344,   345,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,     0,   361,     0,     0,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,  5154,     0,   369,     0,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
       0,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,  5155,     0,     0,   381,     0,   382,     0,
       0,     0,   384,     0,     0,   385,  5156,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,  -519,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,  5157,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,     0,     0,
       0,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,     0,   498,
    -519,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,     0,     0,   508,   509,     0,   510,   511,   512,  5158,
     513,     0,     0,     0,   515,   516,   517,     0,   518,     0,
     519,   520,     0,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,     0,   533,     0,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,     0,   550,   551,   552,   553,     0,
       0,     0,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,     0,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,     0,     0,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,  -519,     0,     0,     0,   602,   603,   604,     0,   605,
       0,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,     0,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,     0,     0,
     253,   254,   255,   256,   257,   258,     0,  -564,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,     0,     0,     0,     0,   268,  5151,
       0,   269,   270,     0,   271,   272,     0,     0,     0,     0,
     275,   276,   277,  5152,   279,   280,     0,   281,   282,     0,
     283,   284,     0,   286,     0,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,     0,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,     0,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,     0,     0,
       0,   319,   320,   321,     0,  -555,     0,   322,     0,  -555,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,     0,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,  5153,   343,   344,
     345,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
       0,   361,     0,     0,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,  5154,     0,   369,     0,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,     0,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,  5155,     0,     0,   381,     0,   382,     0,     0,
       0,   384,     0,     0,   385,  5156,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,  -519,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,  5157,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,     0,     0,     0,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,     0,   498,  -519,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
       0,     0,   508,   509,     0,   510,   511,   512,  5158,   513,
       0,     0,     0,   515,   516,   517,     0,   518,     0,   519,
     520,     0,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,     0,     0,     0,   533,     0,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,     0,   550,   551,   552,   553,     0,     0,
       0,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,     0,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,     0,     0,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,  -555,     0,
    -519,     0,     0,     0,   602,   603,   604,     0,   605,     0,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
       0,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,     0,     0,   253,
     254,   255,   256,   257,   258,     0,  -564,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,     0,     0,     0,     0,   268,  5151,     0,
     269,   270,     0,   271,   272,     0,     0,     0,     0,   275,
     276,   277,  5152,   279,   280,     0,   281,   282,     0,   283,
     284,     0,   286,     0,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,     0,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,     0,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,     0,     0,     0,
     319,   320,   321,     0,  -552,     0,   322,     0,  -552,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,     0,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,  5153,   343,   344,   345,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,     0,
     361,     0,     0,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,  5154,     0,   369,     0,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,     0,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,  5155,     0,     0,   381,     0,   382,     0,     0,     0,
     384,     0,     0,   385,  5156,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,  -519,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,  5157,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,     0,     0,     0,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,     0,   498,  -519,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,     0,
       0,   508,   509,     0,   510,   511,   512,  5158,   513,     0,
       0,     0,   515,   516,   517,     0,   518,     0,   519,   520,
       0,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
       0,     0,     0,   533,     0,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,     0,   550,   551,   552,   553,     0,     0,     0,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,     0,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,     0,     0,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,  -552,     0,  -519,
       0,     0,     0,   602,   603,   604,     0,   605,     0,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,     0,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,     0,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,     0,     0,   253,   254,
     255,   256,   257,   258,     0,  -564,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,     0,     0,     0,     0,   268,  5151,     0,   269,
     270,     0,   271,   272,     0,     0,     0,     0,   275,   276,
     277,  5152,   279,   280,     0,   281,   282,     0,   283,   284,
       0,   286,     0,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,     0,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,     0,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,     0,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,  5408,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,     0,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,  5153,   343,   344,   345,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,     0,   361,
       0,     0,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,  5154,     0,   369,     0,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,     0,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
    5155,     0,     0,   381,     0,   382,     0,     0,     0,   384,
       0,     0,   385,  5156,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,  -519,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,  5157,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,     0,     0,     0,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,     0,   498,  -519,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,     0,     0,
     508,   509,     0,   510,   511,   512,  5158,   513,     0,     0,
       0,   515,   516,   517,     0,   518,     0,   519,   520,     0,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,     0,
       0,     0,   533,     0,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,     0,   550,   551,   552,   553,     0,     0,     0,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,     0,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,     0,     0,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,  -519,     0,
       0,     0,   602,   603,   604,     0,   605,     0,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,     0,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,     0,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,     0,     0,   253,   254,   255,
     256,   257,   258,     0,  -564,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,     0,     0,     0,     0,   268,  5151,     0,   269,   270,
       0,   271,   272,     0,     0,     0,     0,   275,   276,   277,
    5152,   279,   280,     0,   281,   282,     0,   283,   284,     0,
     286,     0,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,     0,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,     0,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,     0,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,  -557,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,     0,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,  5153,   343,   344,   345,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,     0,   361,     0,
       0,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,  5154,     0,   369,     0,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,     0,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,  5155,
       0,     0,   381,     0,   382,     0,     0,     0,   384,     0,
       0,   385,  5156,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,  -519,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,  5157,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,     0,     0,     0,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,     0,   498,  -519,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,     0,     0,   508,
     509,     0,   510,   511,   512,  5158,   513,     0,     0,     0,
     515,   516,   517,     0,   518,     0,   519,   520,     0,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,     0,     0,
       0,   533,     0,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
       0,   550,   551,   552,   553,     0,     0,     0,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,     0,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,     0,     0,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,  -519,     0,     0,
       0,   602,   603,   604,     0,   605,     0,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,     0,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,     0,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,     0,     0,   253,   254,   255,   256,
     257,   258,     0,  -564,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
       0,     0,     0,     0,   268,  5151,     0,   269,   270,     0,
     271,   272,     0,     0,     0,     0,   275,   276,   277,  5152,
     279,   280,     0,   281,   282,     0,   283,   284,     0,   286,
       0,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,     0,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,     0,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,     0,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,  5473,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,     0,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,  5153,   343,   344,   345,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,     0,   361,     0,     0,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,  5154,     0,   369,     0,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,     0,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,  5155,     0,
       0,   381,     0,   382,     0,     0,     0,   384,     0,     0,
     385,  5156,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,  -519,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,  5157,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,     0,     0,     0,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,     0,   498,  -519,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,     0,     0,   508,   509,
       0,   510,   511,   512,  5158,   513,     0,     0,     0,   515,
     516,   517,     0,   518,     0,   519,   520,     0,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,     0,     0,     0,
     533,     0,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,     0,
     550,   551,   552,   553,     0,     0,     0,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
       0,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,     0,     0,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,  -519,     0,     0,     0,
     602,   603,   604,     0,   605,     0,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,     0,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,     0,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,     0,     0,   253,   254,   255,   256,   257,
     258,     0,  -564,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,     0,
       0,     0,     0,   268,  5151,     0,   269,   270,     0,   271,
     272,     0,     0,     0,     0,   275,   276,   277,  5152,   279,
     280,     0,   281,   282,     0,   283,   284,     0,   286,     0,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,     0,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,     0,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,     0,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,  5514,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
       0,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,  5153,   343,   344,   345,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,     0,   361,     0,     0,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
    5154,     0,   369,     0,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,     0,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,  5155,     0,     0,
     381,     0,   382,     0,     0,     0,   384,     0,     0,   385,
    5156,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,  -519,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,     0,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
    5157,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,     0,     0,     0,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,     0,   498,  -519,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,     0,     0,   508,   509,     0,
     510,   511,   512,  5158,   513,     0,     0,     0,   515,   516,
     517,     0,   518,     0,   519,   520,     0,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,     0,     0,     0,   533,
       0,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,     0,   550,
     551,   552,   553,     0,     0,     0,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,     0,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
       0,     0,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,  -519,     0,     0,     0,   602,
     603,   604,     0,   605,     0,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,     0,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,     0,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,     0,     0,   253,   254,   255,   256,   257,   258,
       0,  -564,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,     0,     0,
       0,     0,   268,  5151,     0,   269,   270,     0,   271,   272,
       0,     0,     0,     0,   275,   276,   277,  5152,   279,   280,
       0,   281,   282,     0,   283,   284,     0,   286,     0,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,     0,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
       0,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,     0,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,  -538,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,     0,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,  5153,   343,   344,   345,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,     0,   361,     0,     0,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,  5154,
       0,   369,     0,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,     0,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,  5155,     0,     0,   381,
       0,   382,     0,     0,     0,   384,     0,     0,   385,  5156,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,  -519,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,  5157,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,     0,     0,     0,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,     0,   498,  -519,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,     0,     0,   508,   509,     0,   510,
     511,   512,  5158,   513,     0,     0,     0,   515,   516,   517,
       0,   518,     0,   519,   520,     0,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,     0,     0,     0,   533,     0,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,     0,   550,   551,
     552,   553,     0,     0,     0,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,     0,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,     0,
       0,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,  -519,     0,     0,     0,   602,   603,
     604,     0,   605,     0,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,     0,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,     0,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,     0,     0,   253,   254,   255,   256,   257,   258,     0,
    -564,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,     0,     0,     0,
       0,   268,  5151,     0,   269,   270,     0,   271,   272,     0,
       0,     0,     0,   275,   276,   277,  5152,   279,   280,     0,
     281,   282,     0,   283,   284,     0,   286,     0,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,     0,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,     0,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,     0,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,     0,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
    5153,   343,   344,   345,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,     0,   361,     0,     0,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,  5154,     0,
     369,     0,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,     0,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,  5155,     0,     0,   381,     0,
     382,     0,     0,     0,   384,     0,     0,   385,  5156,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
    -519,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,  5157,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
       0,     0,     0,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
       0,   498,  -519,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,     0,     0,   508,   509,     0,   510,   511,
     512,  5158,   513,     0,     0,     0,   515,   516,   517,     0,
     518,     0,   519,   520,     0,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,     0,   533,     0,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,     0,   550,   551,   552,
     553,     0,     0,     0,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,     0,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,     0,     0,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,  -519,     0,     0,     0,   602,   603,   604,
       0,   605,     0,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,     0,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
       0,     0,   253,   254,   255,   256,   257,   258,     0,  -564,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,     0,     0,     0,     0,
     268,  5151,     0,   269,   270,     0,   271,   272,     0,     0,
       0,     0,   275,   276,   277,  5152,   279,   280,     0,   281,
     282,     0,   283,   284,     0,   286,     0,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
       0,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,     0,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
       0,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,     0,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,     0,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,  5153,
     343,   344,   345,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,     0,   361,     0,     0,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,  5154,     0,   369,
       0,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,     0,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,  5155,     0,     0,   381,     0,   382,
       0,     0,     0,   384,     0,     0,   385,  5156,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,  -519,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,  5157,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,     0,
       0,     0,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,     0,
     498,  -519,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,     0,     0,   508,   509,     0,   510,   511,   512,
    5158,   513,     0,     0,     0,   515,   516,   517,     0,   518,
       0,   519,   520,     0,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,     0,     0,     0,   533,     0,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,     0,   550,   551,   552,   553,
       0,     0,     0,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,     0,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,     0,     0,     0,
       0,   589,     0,     0,  5411,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,  -519,     0,     0,     0,   602,   603,   604,     0,
     605,     0,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,     0,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,     0,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,     0,
       0,   253,   254,   255,   256,   257,   258,     0,     0,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,     0,     0,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,     0,     0,     0,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,     0,   286,     0,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,     0,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,     0,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,     0,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
       0,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,     0,   361,     0,     0,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,     0,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
       0,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,     0,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,     0,     0,
       0,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,     0,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,     0,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,     0,   515,   516,   517,     0,   518,     0,
     519,   520,     0,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,     0,   533,     0,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,     0,   550,   551,   552,   553,     0,
       0,     0,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,     0,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,     0,     0,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
       0,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,     0,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
    3797,  3798,     0,     0,     0,     0,  3799,     0,  3800,     0,
    3801,  3802,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3803,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3804,     0,
       0,  3805,     0,     0,     0,     0,     0,     0,     0,  3806,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3448,     0,
       0,     0,     0,     0,     0,  2584,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3807,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3808,     0,  3809,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3810,  3811,     0,     0,     0,     0,     0,  2585,  2586,
    2587,  2588,  2589,  2590,  2591,  2592,  2593,  2594,  2595,  2596,
    2597,  2598,  2599,  2600,  2601,  2602,  2603,  2604,     0,  2605,
    2606,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3812,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3813,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3814,     0,     0,     0,     0,
       0,     0,     0,     0,  3815,  3816,     0,  3817,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3818,  3819,  3820,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3821,  3822,  3823,     0,     0,     0,     0,  3824,
       0,     0,  3825,     0,     0,     0,     0,  2607,  2608,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3826,  3827,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3828,  3829,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3460,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3830,     0,     0,     0,  3831,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3832,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3833,     0,
       0,  3834,     0,     0,  3835,  3836,  3837,  3838,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3839,  3840,     0,
       0,     0,     0,  2609,  2610,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2611,  3841,  2612,  2613,  2614,  2615,
    2616,     0,     0,  2617,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2618,     0,     0,     0,     0,  2619,  2620,
    2621,  2622,  2623,  2624,  2625,  2626,  2627,  2628,  2629,  2630,
    2631,  2632,  2633,  2634,  2635,  2636,  2637,  2638,  2639,  2640,
    2641,  2642,  2643,  2644,  2645,  2646,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2647
};

static const yytype_int16 yycheck[] =
{
       6,    44,   901,     0,   887,     0,    43,    44,  1180,    15,
    1181,  1276,    18,  1230,  1327,     0,    22,  1174,  1031,  1032,
    1327,  1080,    60,  1343,  1694,    31,    57,   802,  2192,  1455,
    1150,  1419,    38,    97,  1622,    41,    43,    21,  1051,  1419,
      46,  1145,   763,    49,  3046,     6,  1150,    53,    60,    55,
    2834,  1145,  1825,  1058,  2545,  2546,  1150,  1855,  2157,    43,
    3201,  2502,  1666,   226,  1196,  1195,  2235,    64,  1196,  2931,
    2826,  3257,  1380,  2157,    19,    22,  1249,  1250,  1083,    64,
    2458,  2039,  2040,  2461,  2462,    30,  3363,  2690,  2486,  2129,
      35,    97,  2712,    59,  2052,  2053,  2054,  2495,  3026,  3027,
    2735,  3115,    49,  1669,  2739,  1278,  1672,  2379,  1674,  3462,
     749,   750,  2384,  1172,  1686,  1687,  1688,  1290,  1291,  1292,
    1343,  1269,  1734,  1296,  1766,  2987,  2740,  2693,  3309,  3843,
      21,   230,  1734,  2461,  2462,  2230,   121,  2535,  3287,  3696,
    1678,  2539,  1680,  1681,  1682,  2969,  2271,    43,     9,  1766,
    3747,   872,   873,  1768,   875,  1734,  1150,  1772,   121,   735,
     736,  2435,  1335,  2900,  1242,  1243,  1244,   888,    29,  1786,
    2469,  1786,  2693,    34,  2182,  1253,  3843,  2693,  2693,  1150,
    2693,  1578,  1150,  1798,  2732,   191,  2964,  1804,  2533,  2534,
    3372,  4510,  2740,  3042,  2732,  2709,  3863,  3864,  1595,  4510,
    3372,  3613,  2740,    35,  1748,  1602,  1284,  1424,  1165,  1287,
    3906,  1608,  1049,    21,   220,    22,   222,  4167,    11,   225,
     226,   227,   228,    21,    52,    68,  2472,  2235,  1306,  1307,
    2820,  4408,  1310,    71,    73,   125,   242,    77,  2974,  2370,
    2484,  2372,    73,  3253,   191,    71,  1566,   160,    21,   125,
    1328,  1329,  4385,     5,  2385,  1333,  1334,  2388,   176,  2684,
    2391,   222,  3816,  3817,   225,    71,  3820,  2870,    37,  2513,
    1348,  2515,  2516,   194,   194,    18,    19,   125,    19,   249,
     156,   228,   231,    77,  3838,    73,  4766,   235,    18,    19,
    1507,   158,    62,    18,    19,   242,    21,    31,  2725,  2726,
    2727,    59,   231,    18,    19,    18,    19,    21,   156,   100,
      73,   144,  2690,   125,   197,  2742,    18,    19,    18,    19,
    4221,   246,    70,    78,   131,   197,   125,    65,   756,    43,
     150,    73,   103,    18,    19,  2955,  1219,    18,    19,  1747,
    2767,  1749,  1750,    21,  2771,  1889,  1754,   111,   194,    77,
      18,    19,    18,    19,  2957,   156,   109,   156,   156,  1767,
    2787,  2788,  1770,  1771,  4638,  1773,  2793,  4155,  1776,  1777,
    1778,  1779,   366,    18,    19,  1783,   160,   238,  3746,   464,
    1788,   156,  2809,  2810,   162,  1793,  1794,  1795,  1796,  1797,
     156,  2818,   111,  1801,  1802,    23,  1234,  1235,    70,  1807,
     200,  1809,  1810,  1811,    48,  1813,  1814,    35,  1816,  2836,
      48,  1819,   156,    21,  1822,  1823,   156,  2815,   176,  4328,
    2882,    49,   180,  2695,    37,    18,    19,    18,    19,   230,
     156,    64,  1165,    61,    62,   198,   194,     7,    23,    18,
      19,   212,   150,   472,   332,  4349,   406,   238,  4352,   379,
     219,  3804,   379,   156,   176,    71,   191,   156,   231,   239,
      19,   571,    67,    18,    19,   156,  4020,   258,   262,   249,
    3651,   235,  3107,   197,   432,   204,    61,    62,   156,   212,
     271,  3834,  3835,   139,   197,  5248,    18,    19,    18,    19,
    1265,   258,  2870,  1376,   377,   255,   653,   400,    18,    19,
    3645,    21,  4328,   372,  1279,    25,   186,    73,  1407,  1408,
     428,    13,  3010,   127,   500,   156,    23,   326,   256,   125,
    1533,   150,   246,   502,    22,   258,   127,   611,    35,    18,
      19,  1544,   194,  4359,   262,   186,   276,   373,    18,    19,
    4137,   368,    49,    18,    19,   194,  4882,   235,   243,   165,
     388,   400,   197,   130,    61,    62,   432,  4734,    18,    19,
     193,  3059,   388,   354,   562,   156,  1571,   565,   138,   366,
    1575,   746,   330,   130,   144,  1580,   372,  4322,   197,  2957,
     743,   126,   388,  3149,   246,   249,   266,   282,   501,   432,
     163,   591,   622,  3228,  1233,   625,  1495,   368,   276,  5079,
     449,  3099,  3100,    21,  1609,  1610,   219,   571,   272,   784,
    4560,  4947,   392,   611,   614,   266,  4361,   801,   415,   419,
     447,  3638,  3639,   285,   708,   809,  1347,  1203,  4342,   608,
     249,  3648,  3649,   131,   248,   276,   285,   387,   140,   625,
     130,   469,  2246,   386,  2248,   103,   389,   248,   484,   808,
    1549,   403,  1711,  3288,   387,   814,   386,   814,   228,   389,
     563,   386,   372,  1384,   389,  3063,  5429,  5430,  4225,   228,
     428,   386,   432,   386,   389,   331,   389,   412,   636,   546,
    4506,   569,   455,  1404,   386,   476,   386,   389,   368,   389,
      18,    19,   376,  3091,  3092,  3093,  3094,  1654,   658,   809,
    2974,   386,  3843,   470,   389,   386,   428,   595,   389,   387,
      18,    19,   642,  5193,   877,   642,  3857,   501,   386,   492,
     386,   389,   400,   389,   401,  3223,   204,    52,   813,   735,
     736,    18,    19,   112,  2122,   729,   115,   743,  5218,   745,
     192,   386,  2122,  4297,   389,   464,  1703,    19,   786,  4653,
      81,   241,  2132,  4307,  4931,  4932,  3154,   548,  2927,  3583,
    5034,  4315,  4550,  1936,   693,   565,    18,    19,   259,   144,
    3373,  1504,   388,   343,   786,   608,  3238,  4686,  3022,   231,
    3536,   510,  3538,   571,   417,   814,  3796,   282,   735,   736,
     636,  3411,   565,    65,   542,   386,   802,  4351,   389,   562,
    3420,  3421,   571,  2229,  3424,  1978,  3372,   386,  1236,   757,
     389,   974,  2907,   633,   552,  4716,  4949,   916,   917,   918,
     562,  2990,   921,   922,  2988,  3266,   925,  2439,   927,   928,
     929,   386,    21,  2873,   389,  2373,  2374,  2439,  3336,   594,
    3338,   582,   636,   813,  1922,  3119,   619,  1423,   582,  3859,
      18,    19,   622,  2470,   386,  2472,   386,   389,   403,   389,
    2439,   655,   656,   636,   813,  2964,   386,  2998,  1031,   389,
     542,   877,  2830,   879,   627,   293,  1039,  1040,   884,  3741,
    2964,  4831,   646,  3182,   614,  3184,  4254,  2060,   813,   197,
     612,   876,   813,   813,   634,   813,  1059,   386,  1892,  1475,
     389,   814,  3638,  1002,   647,   510,   386,   747,  1484,   389,
     722,   386,  1990,   919,   389,  1554,  1994,   647,   924,  2927,
     698,  1654,   647,   813,   695,   633,   386,   655,   656,   389,
     813,   995,   647,  3331,   647,   811,  3334,  3527,  2016,  2712,
     809,   813,  3188,  3341,  3369,   647,   813,   647,  3346,  3347,
    3348,  3349,  3350,  3117,   748,   749,   634,  2365,   571,  3357,
      18,    19,   647,   811,  3362,   758,   647,  3365,   974,   808,
     603,   814,   600,  3593,   980,   813,   808,   808,  2056,   647,
     813,   647,  2990,   809,   256,   813,   738,   739,   994,   995,
    4171,  5471,   636,   634,  2582,  3373,   562,   625,   636,   808,
    1163,   808,   647,   809,   633,   813,  3433,    18,    19,  1847,
     811,  5188,   811,   811,   432,   600,  1022,   813,   809,    65,
     748,   749,    18,    19,   753,  1031,  1010,  1190,   716,   809,
     141,   608,   510,  1039,  1040,   808,   811,  4051,   813,  2256,
    4736,  4991,  1049,  4188,  4189,   811,  3473,   813,  3475,   655,
     656,   608,  1036,  1059,   647,   813,   647,   630,   386,  2467,
    2648,   389,  3489,   813,  3491,  1049,   611,   811,   647,   813,
     931,   811,  2684,    18,    19,   818,   571,   535,   386,  3506,
    1918,   389,  2684,   813,   809,   811,  2494,   813,   813,   813,
     800,   813,   647,   600,   809,  1101,  1102,  4283,   813,   386,
     813,  2058,   389,  2511,  1110,  2684,   584,   809,   811,   809,
     813,   813,   811,   813,   813,   647,  3543,   647,   608,  1010,
     811,  1185,   813,  3367,   809,   500,   185,   647,   813,   813,
     991,   808,   813,   811,   386,  1141,   997,   389,  2936,  4551,
    2548,  2549,  1127,   809,   469,   813,   158,   813,  2556,   278,
    2694,  1136,    87,  1049,  1101,  4172,   487,  1163,   647,   275,
     651,   613,   160,  2380,   809,  1229,   368,   647,  3609,  5480,
     811,    85,   647,  1136,   542,  1181,  4325,  2348,   640,  1185,
     808,  1187,  1188,  1180,  1190,  1180,  1192,   647,  5507,   285,
      71,  1197,   315,  1199,  1200,  1180,   575,  1203,   176,   578,
     614,  4342,   125,   282,  1210,   582,  2519,    18,    19,   634,
     256,   500,  2519,  1988,  1220,  1221,  1222,   634,   386,  1225,
     219,   389,  1228,  1229,   642,  1231,  1232,    25,   158,  3727,
     809,    23,  2245,   344,   813,  4417,    18,    19,   137,  1200,
    1403,   371,   235,    35,  1105,  4417,  1230,   742,   216,  1888,
    1103,    35,    86,   152,  1417,   623,  1203,    49,   813,  1265,
    2319,  1900,  1901,  1902,  1903,   292,  1297,  2937,   377,    61,
      62,   105,  1911,  1279,   293,   753,  3790,  3791,   483,  3777,
     552,   813,  2402,   813,   377,  4952,    18,    19,    57,  1452,
    1275,   370,     9,  3691,   565,   263,  1010,   174,  2402,  2707,
      18,    19,  2890,   492,   777,  2693,   486,  2312,  2402,    18,
      19,    18,    19,  2693,    31,    18,    19,  2322,   364,   647,
    2325,  1327,  1036,  2328,   813,    47,  2456,  1426,   386,   809,
    2460,   389,   534,   813,   809,  1049,  2466,  1343,   813,   647,
      18,    19,  4166,  3383,  4898,  1383,  4900,    18,    19,   809,
    1381,  1382,   481,  1359,  1385,   455,  1362,  1388,  1389,  1390,
     647,  4210,  1393,  1394,  1395,  1396,  1397,  1398,  1399,  1400,
     168,  1383,  2960,  2961,   847,   386,   565,   125,   389,   293,
    1444,  3421,  2157,    18,    19,  2106,  4164,   510,   813,  4126,
     386,    18,    19,   389,  3064,   647,   813,  1403,   455,   813,
    4677,  4678,  1010,  3748,  1410,  1411,  1412,  1413,  2402,  1415,
    1416,  1417,    12,   432,  1420,  1421,  1422,  1423,    44,  1425,
    3986,  2553,  2554,  1429,  4038,  2553,  2554,   454,  1036,  2266,
     619,  2402,    18,    19,  2402,  1441,   813,  2274,  1444,   369,
    1424,   386,    18,    19,   389,   198,  1452,   636,   371,  1455,
     428,  1412,  1516,  1459,  1460,  1416,  3897,  3898,   517,  1420,
     387,  2999,  3000,  3035,   160,  3986,  3740,  3631,  1474,  1475,
    3986,  3986,  1456,  3986,    18,    19,  1423,  1483,  1484,   647,
    1486,  1487,  3781,  2871,  2910,   813,  3650,  3985,   534,   582,
    4038,  2871,   427,  4107,   216,   141,  1560,   122,   194,    52,
    4038,  5098,  1508,   501,  2824,  1668,   552,   388,  1545,   605,
    1516,  3680,  1576,  3079,    18,    19,  1230,  3915,   634,  3292,
      18,    19,   809,  1507,   813,  1531,   813,  1474,  1475,  5196,
    3625,   315,  1695,  1539,   546,  4155,  1483,  1484,  1545,  1486,
      18,    19,  2850,  3668,  3082,  4547,  3084,  3085,  4697,  1555,
    1556,  1557,  1558,  1559,  1560,  1561,  2277,  1720,  5115,  4107,
    1566,  1545,  2138,  2693,    21,  1456,  1572,  1428,  1574,  4107,
    1576,  3188,   571,  1579,  3743,   386,  3534,  3194,   389,  3537,
    3711,    18,    19,    33,   582,  2758,  1650,   464,  2497,   647,
    2855,  2856,  4090,   723,  1555,  1556,  1557,   643,  1559,   368,
    2509,  2824,  3028,   808,   386,  3983,  3984,   389,   635,  1462,
    5277,  1558,  2785,  1574,  1561,  5329,   546,    74,  1579,   808,
    1684,   282,  1230,   642,  1630,  1631,  3666,   727,    18,    19,
     753,  2540,   741,   742,   612,  5302,   647,   455,  4819,  1645,
    3037,  3038,    18,    19,  1650,   813,   399,   153,  3290,  1545,
     122,   647,  4539,    40,   386,  3983,  3984,   389,   164,    18,
      19,  2570,  1668,  4298,   571,   290,   137,  4094,   386,  1142,
     727,   389,  3680,  3290,  3291,   602,  3291,   386,  1684,   386,
     389,   152,   389,   386,   432,   285,   389,   243,   352,  1695,
     194,   802,   803,   804,   805,  4093,   406,  4883,   344,   629,
    4977,  4267,   647,   160,    11,  4203,  3026,  3027,   386,  1715,
    1424,   389,   158,   231,  1720,   386,  3988,  2865,   389,   371,
     813,  3761,  1707,  1708,  1709,  3133,  4224,  3135,   354,  5082,
     657,  1737,  1738,  4336,  3964,  3743,   125,   355,  4236,  2817,
      18,    19,  1456,  4241,  1707,  1708,  1709,   372,  4504,  3979,
     139,   386,   300,   301,   389,   813,   509,  3369,  3330,   386,
    3332,  3149,   389,   485,   571,   209,   287,  3369,  4782,  3149,
    3342,  3343,  3344,  3345,  2991,  2992,  2993,  4561,   235,  3351,
    3352,  3353,  3354,  3355,  3356,   571,  3358,  3359,  3360,  3361,
    3369,   237,  1829,  1507,  3366,    13,    71,  3595,  3415,   249,
     386,   421,   813,   389,   209,   501,   263,   237,   600,  5086,
     386,   365,   366,   389,  2411,   368,  1424,   813,   290,   571,
    4440,   547,    21,  5490,   125,   275,   703,   704,   349,   621,
     622,  1545,   122,  2430,   369,   536,   647,   123,   282,    53,
     194,   400,   386,  1849,  1850,   389,  3886,  4328,  1456,   315,
      64,  4417,   239,    18,    19,   122,  5042,   503,   504,  1865,
     167,   162,    35,    18,    19,   647,  1832,   794,   813,   570,
    2929,    18,    19,  5120,   429,   652,  5123,   282,  4359,   385,
      18,    19,   386,  2046,   122,   389,   582,   125,   386,    62,
     165,   389,  1898,   200,  3302,   125,   444,   445,   188,  1507,
     372,  2064,   628,  1850,   230,   812,    18,    19,   386,   727,
    1134,   389,   137,  5155,  5156,   647,   469,   578,  1865,   571,
    3300,   188,   140,   369,    18,    19,   481,   152,  3968,   647,
    4550,  4818,   162,    18,    19,    13,   128,   455,   647,   369,
     647,   141,   331,  1167,   647,    18,    19,   500,   658,   386,
     188,  1898,   389,   571,    18,    19,  4228,   156,  4336,    18,
      19,   247,  4234,    22,  3023,   585,    18,    19,   593,   647,
    3378,  3379,  3380,  3381,  3033,   194,   647,   448,   596,    18,
      19,   219,  1988,  1989,  3372,   638,    18,    19,    18,    19,
     456,   441,  3372,    18,    19,  2158,   386,    18,    19,   389,
     290,   808,   813,  3016,   563,   179,   562,  5284,   479,   565,
     386,   546,   647,   389,   368,  4650,  3396,    18,    19,   614,
     647,   542,   808,   290,    18,    19,  2125,   386,   636,   636,
     389,   813,   231,  2196,   138,   565,   446,  4415,  4416,  4269,
    2046,   125,   238,  2081,  4274,    18,    19,  4474,  4278,   713,
     714,   715,   290,   497,  3658,  3659,   808,   276,  2064,   197,
    2091,   647,   140,  5310,   570,  4164,   285,  2105,   282,  2081,
     371,   647,   131,  2104,  2713,   271,  2107,    18,    19,  2242,
    4164,   813,   372,  4252,  4253,   243,  5014,  4415,  4416,  4258,
    3678,   809,   497,  2105,   629,  2258,    21,    18,    19,  2084,
     546,   293,   809,   647,   813,   372,  2112,  2828,   386,  4729,
     813,   389,   419,   388,     9,  2121,   546,    18,    19,    18,
      19,   593,   636,   533,   228,   582,   681,  4989,    13,  1353,
     571,  2852,  2138,  2854,   372,   813,  2200,  2201,   809,    18,
      19,   371,  3708,   647,   344,  4103,  3712,  4105,   434,   647,
    2156,  2157,  2158,   799,   800,   801,   802,   803,   804,   805,
     813,   245,  3588,   614,  2228,    18,    19,  2173,   387,   647,
    5278,  2177,  5414,  5415,  2121,   197,    18,    19,   813,  2185,
     571,   492,  2188,   629,  3401,    13,   813,  3567,  5329,  2964,
    2196,  2138,   483,  4935,  2200,  2201,  2234,   371,  4940,   629,
    3626,   400,    13,  4694,  4695,   813,   813,   614,  4438,  2156,
     647,    18,    19,   571,    18,    19,   764,   765,   813,   814,
    2383,   386,  2228,  2229,   389,   532,  2232,   813,  2234,  4002,
     808,   386,   666,   667,   389,   669,  2242,   813,  2185,   386,
    3300,  2188,   389,   614,  4252,  4253,  3554,   652,   386,   400,
    4258,   389,  2258,   680,   565,   140,   455,   647,  2421,  2266,
      13,    18,    19,   549,   691,   636,   671,  2274,   372,   813,
     571,   647,  2256,   100,   386,  2259,   360,   389,   203,   586,
     476,   128,  2266,  2289,    18,    19,   216,   231,   647,   235,
    2274,   186,   386,   492,  3203,   389,   574,  3610,  3638,   813,
    3613,   386,   743,   593,   389,   809,  3613,  3647,   619,  2347,
      18,    19,   140,   386,     0,   813,   389,   263,    18,    19,
    2326,  2327,   386,   156,   801,   389,   593,   386,  5070,   140,
     389,   809,   809,   263,   386,  2347,  3396,   389,   508,   414,
     362,   732,  5450,  4141,  2507,  3254,  4744,   386,    21,   293,
     389,    18,    19,  3262,   386,   593,   386,   389,  3267,   389,
     194,   386,   813,   814,   389,   386,   565,  4536,   389,   647,
    2266,   160,   809,   220,   732,    48,  3549,  2383,  2274,  2326,
    2327,  2544,  2419,   602,    64,   386,   160,   140,   389,   235,
      18,    19,   386,    38,    74,   389,  2380,  2435,  4839,  4797,
    4841,    46,   809,    18,    19,  2411,   813,   241,  2445,    89,
      80,   238,    82,   386,   588,  2421,   389,   263,   212,   809,
     619,    18,    19,   563,  2430,    18,    19,    18,    19,  2435,
     604,   258,  3564,   809,  3747,  3563,   606,   636,   657,   239,
     562,   808,   813,   565,   271,   386,   293,   814,   389,   249,
     809,    18,    19,   212,   400,   125,  2493,  2463,    18,    19,
      18,    19,   167,  2469,   277,   386,  5069,   280,   389,  2475,
    2476,  2477,  2478,  2479,  2480,  2481,    18,    19,   148,  2485,
     650,  2487,   647,  2430,   428,   386,   815,   386,   389,   197,
     389,  2497,   647,  2499,  2500,   127,  2502,   808,  2504,  2505,
     647,  2507,  2508,  2509,    18,    19,   835,   386,  2514,   647,
     389,  2517,   680,  2519,  5298,    18,    19,   187,  2524,   848,
     849,  2527,  2528,   691,  5127,  5128,  2471,   354,  4536,    18,
      19,  3590,  2538,   386,  2540,   647,   389,  2482,  2544,   234,
     235,  5543,  2256,  2488,   386,  2259,   808,   389,  5039,  5040,
     377,   814,  2266,   647,  2560,   235,   582,  3965,  3966,   808,
    2274,  3874,   647,   812,  2570,  2571,   261,  3874,    61,    62,
     432,    32,  2735,  2518,   647,   794,  2739,  2522,   680,   386,
      26,  2528,   389,   647,  2529,  2530,    18,    19,   647,   691,
     809,   453,   392,  4353,   480,   647,  4356,  4357,  3986,  3444,
     800,   801,   802,   803,   804,   805,  3986,   122,   647,   808,
     125,    19,   811,  2560,   813,   647,   429,   647,    79,   235,
    3465,   455,   647,   680,   108,  3189,   647,   230,     7,   386,
      77,  5129,   389,   495,   691,  3199,  3200,   227,    84,   229,
    5038,  2705,    77,  3542,   809,   125,   647,    26,  2256,   476,
     212,  2259,   386,   647,   809,   389,   212,   122,   492,    61,
      62,   809,   809,  4201,  4202,   813,  2380,  4440,   148,    71,
    4287,  5455,   455,   188,   647,    64,  3681,   563,   386,  2685,
     809,   389,   568,  2689,   813,    74,   386,  1116,  1117,   389,
    1119,  5069,  1121,   154,   809,   574,   563,   809,   813,  2705,
      89,   667,   235,   669,   219,    84,   647,   187,  2714,  2715,
    2716,  2717,  2718,   809,   809,   809,    19,   813,   813,   386,
    2883,   548,   389,   188,   809,   611,   647,  2712,    12,  2735,
     809,   565,  2763,  2739,   813,  2898,   809,   221,  2685,   565,
     809,   627,  2689,  4169,   813,   809,   647,  4012,   647,  5127,
    5128,   655,   656,  2714,   219,  2716,  2717,   809,   386,   717,
     718,   389,   809,    61,    62,   144,   813,   653,   647,   439,
     809,   386,  2380,    71,   389,   290,   813,   809,   809,   809,
    4045,  4046,   813,   571,   809,   619,    84,   614,   809,   386,
     237,   237,   389,   386,   647,   386,   389,   809,   389,   809,
     808,   813,   636,   813,   193,   647,  4071,  5305,   809,   809,
     199,   808,  2876,   813,  2820,   809,   814,   809,  2824,   386,
      26,   813,   389,   808,  4137,   290,   386,   262,   386,   389,
    4839,   389,  4841,  3732,  3733,  3556,   809,   809,   141,   636,
     647,   813,   639,  4745,   386,  4803,   235,   389,  4750,  4421,
    4422,  4423,  4424,   108,   212,   809,  3986,   372,   237,   813,
    2866,  2867,   809,   808,   787,   788,   813,   790,   809,  3989,
    2876,    21,   386,  2858,   263,   389,   322,  2883,    84,  4267,
     808,  4052,    77,   386,  4057,  3989,   389,  4267,   809,   809,
     647,   141,  2898,   813,  2900,  3989,   103,   386,    93,  2905,
     389,   809,   809,  2909,  2910,   813,   813,   372,   809,   393,
     809,   808,   167,   647,   808,   122,   363,   809,   808,   403,
     808,   813,   369,   369,    13,   808,   410,   809,   809,  4337,
    4338,   813,   813,  2939,   808,  2973,  2974,   808,  5102,   647,
    2946,  2947,  4115,   322,  3107,   200,   716,   647,   808,   809,
     100,   808,   158,   414,   386,  3800,   809,   389,  2964,  4576,
    4577,  2973,   563,  2969,   212,   809,   135,   809,  2974,   813,
    2955,    19,   809,  4875,   808,   436,   813,  4879,   150,   151,
     647,   188,  3019,    13,  2553,  2554,    47,    48,  3833,  2974,
     369,   438,  2939,   809,   809,   418,  3841,   813,   813,  2946,
    2947,   809,   809,  3848,   480,   813,   156,  2991,  2992,  2993,
     809,   400,  3019,    43,   813,  3178,   477,  1314,  1315,   647,
    3026,  3027,  3028,  1606,  1607,  3056,   808,  3058,   417,  4417,
     514,   237,   647,   808,  4936,  3019,   808,  4417,   245,  4941,
     952,   344,  3048,   955,   194,   809,   808,  3053,   960,   813,
     647,   140,   809,   965,   647,   100,   647,   809,   808,    26,
     808,   813,   212,   808,    94,  3228,   808,   217,    98,   809,
     265,   450,   122,   813,   384,   809,   808,   538,   593,   808,
     647,  3119,   808,   290,    12,   808,   167,   647,   238,   647,
     377,   809,   808,   141,   344,   813,   246,   319,   320,   546,
     546,  3107,   324,   325,   808,   647,  4532,    33,   258,   809,
      77,   179,    64,  3119,  3120,  3121,   322,    84,   808,   200,
    5518,   271,    74,  3019,  3287,  3288,   276,   611,   593,   518,
    4556,   220,  4303,   647,   808,   285,  5534,    89,   188,  3145,
     808,  4154,   809,  4314,   647,   809,   141,   342,   809,   813,
      21,   598,   813,   809,   653,   809,   591,   813,   647,   813,
     808,   808,  5560,   369,   419,   372,   809,   546,   808,   219,
     813,   141,  3178,   368,  1170,  1171,  3182,   103,  3184,   614,
     108,   809,   629,   629,  3190,   808,   156,   808,  3194,   396,
     808,   158,   562,   238,   809,   808,   122,  3203,   809,   127,
     503,   504,   813,   122,   354,  3211,   125,   492,   808,   808,
     177,  3374,   809,   258,   603,   647,   809,   184,   809,   808,
     655,   656,  3228,   253,   808,   808,   271,   377,  3234,   100,
     809,   696,   809,  4546,   813,   430,   813,   387,  4551,   809,
     290,   193,   809,   813,  4551,   808,   380,   199,  3254,   809,
     629,   809,   197,   503,   504,   809,  3262,   808,   808,   813,
    3266,  3267,   188,   231,   809,   808,   246,   809,   813,   188,
     237,   199,   808,   808,   808,   197,  3282,  2991,  2992,  2993,
     565,  3287,  3288,   235,   809,   156,    12,   808,   813,   809,
     808,   141,   808,   813,    21,   809,   344,   365,   366,   808,
     219,   331,   748,   371,   809,  3019,   809,   235,   813,   354,
     565,   263,  3318,   748,   749,   194,   808,   808,   808,   245,
     809,   192,   372,   194,   122,   122,   476,  3333,   125,   808,
     808,   586,   377,   808,   619,  3282,   808,   532,   419,   809,
     546,   212,   141,   813,   808,   808,   217,   246,   808,   344,
     500,   636,   808,    77,   808,   322,   611,   808,   286,   809,
     231,   141,   620,   813,   290,   395,   809,   238,  3374,   748,
     813,   290,   627,   100,   344,   246,   500,   809,   808,   808,
      33,   808,   108,  2991,  2992,  2993,   593,   258,   809,  4164,
     188,   188,   813,   809,   808,   808,   363,   813,   548,   808,
     271,   127,   369,   808,  3410,   276,  4832,  3413,   808,  3415,
     808,   808,   808,   808,   285,   122,  5004,  3401,   808,  3425,
     808,   219,   219,   629,   808,   808,  3411,   808,   808,   156,
    3415,   476,   171,   500,   158,  3420,  3421,   526,   527,  3424,
     529,   530,   531,   212,   166,   814,   372,  4618,  4619,   141,
    4621,   532,   602,   372,   813,   503,   504,  4722,   808,   548,
     276,   389,   194,  3410,   614,   417,  3413,   194,   542,   562,
     396,  4628,  4629,   166,   200,   222,   542,  4885,  4886,  4887,
     542,   188,   287,   354,   634,   212,   636,   517,   141,   696,
     217,   157,   290,   290,   344,   798,   799,   800,   801,   802,
     803,   804,   805,   548,   813,   586,   377,   657,   503,   504,
     814,   238,   219,   237,   808,   808,   387,   243,   141,   246,
     588,  3527,    26,   808,   813,    96,   100,   122,   814,   559,
     808,   258,    48,   503,   504,   156,   604,   156,   197,   111,
    3546,  3605,   748,   593,   271,   344,   809,   697,   809,   276,
     800,   801,   802,   803,   804,   805,  5226,   249,   285,   811,
     286,   812,   809,   808,   344,   249,   518,   160,  4467,   614,
     498,   160,   160,    77,   372,   372,   120,  3583,   813,   546,
      84,  3587,  3588,   290,    48,   293,   195,   160,  3594,   383,
     518,   532,   193,   188,   518,   708,   249,     7,    71,  3605,
    3638,  3639,    13,  3609,  3610,   476,   633,  3613,  3593,  3647,
    3648,  3649,   809,  5021,   140,   809,  5024,  5025,  5026,  5027,
    3626,    10,   275,   813,   219,   814,   249,   354,  3613,   500,
     809,   809,  3638,  3639,   809,   563,   809,   565,   809,   363,
     568,  3647,  3648,  3649,   794,   369,   809,  3594,   809,   501,
     377,   603,   344,   503,   504,   808,   666,  4977,   808,   809,
     387,   811,   629,   813,   238,   372,   377,   593,   818,   275,
    3701,   599,   492,   177,   593,   603,   708,   548,   614,   562,
     184,   141,   226,   611,   258,   515,   813,  3401,  3694,    50,
    3696,   344,   282,   419,  5014,   290,  4867,   271,  4869,  4870,
      30,   287,  3740,   813,   503,   504,    59,   582,  5116,   300,
     301,   813,   365,   366,   438,   377,   492,  5125,  5126,   486,
      71,   344,   571,   503,   504,   653,  5134,   732,  4899,   813,
     273,   602,   657,   237,  3740,   813,  3742,   812,   814,   249,
     813,  3747,   613,   614,   802,   565,   252,   560,   181,   476,
     798,   799,   800,   801,   802,   803,   804,   805,  4817,   122,
     194,   813,   194,   634,    88,   636,  5086,   813,    21,   813,
     696,   813,   498,   500,   378,  3781,   492,   372,   645,   707,
     354,   748,   136,  3789,   500,  5098,   657,   558,   441,   565,
     334,   156,   809,  3401,   338,   593,   593,   728,    48,   619,
     620,   345,   786,   798,   799,   800,   801,   802,   803,   804,
     805,   503,   504,   455,   809,   372,   636,   653,   322,   728,
     727,   548,   546,   176,   636,   188,   697,   180,   798,   799,
     800,   801,   802,   803,   804,   805,   571,   563,   492,   565,
     813,   194,   502,   619,    87,   315,   500,     7,   808,   565,
     503,   504,   110,   444,   445,  3861,   219,   582,   158,   363,
     636,   400,    74,   516,   227,   369,   229,   400,  3874,   400,
      35,  3877,  3878,   599,   598,   602,   582,   136,    56,   261,
     503,   504,   426,   261,   344,   611,   593,   614,    66,   400,
     136,  3897,  3898,   400,    48,  3901,   584,  3903,    76,   400,
    3906,   400,   476,   619,   620,   629,   400,   634,   400,   636,
     813,   565,    90,    91,    92,   618,   618,   813,   500,   709,
     636,   491,   627,   794,   808,   813,   521,   290,   106,   809,
     657,   808,   523,   524,   525,  4834,   609,    57,   809,   447,
     811,  5206,   813,   171,     7,   111,   490,   818,   798,   799,
     800,   801,   802,   803,   804,   805,   377,   716,  3964,   809,
      77,   377,   613,     7,  5284,   619,   620,   591,   200,   809,
     697,   809,   809,  3979,   548,  3981,   809,   330,   809,   197,
     809,   707,   636,   809,   809,   813,   801,   808,   808,   813,
     809,   809,  3998,   158,   111,  5212,   813,   162,   593,   798,
     799,   800,   801,   802,   803,   804,   805,   809,   809,   372,
     809,   108,    14,   809,   809,    17,   809,  5282,   798,   799,
     800,   801,   802,   803,   804,   805,  4925,   809,    64,   809,
      15,   689,   808,   814,    36,   813,    21,   202,    74,   809,
     814,   158,   546,   503,   504,   809,   809,   808,    50,    51,
     805,  3998,   814,    89,   808,   808,    58,   222,    43,   809,
     192,    63,    64,   814,   813,   813,   812,   794,   721,   813,
     167,   287,    57,    58,     7,   428,   287,    79,    63,   287,
     287,   287,   809,   287,   811,   813,   813,   631,   160,   377,
     236,   818,   808,   582,   634,   813,   813,    99,   813,   582,
     582,   400,    13,   200,   813,   649,   798,   799,   800,   801,
     802,   803,   804,   805,   160,   813,   197,   582,   235,   121,
    4126,   582,   287,   432,   255,   629,   194,   814,   814,   131,
     132,  4137,   814,   814,  4172,  4298,   814,   813,   235,   197,
     809,   143,   144,   614,   427,   798,   799,   800,   801,   802,
     803,   804,   805,    60,   808,   333,   513,   193,  4164,   607,
    4166,   809,  4325,  4169,   813,  5478,  4172,   404,   170,   194,
    4155,  5478,   350,   764,   765,   798,   799,   800,   801,   802,
     803,   804,   805,   815,   160,   161,   401,   789,   190,   286,
    5503,   789,   125,   403,   228,    21,  5503,   144,   403,   235,
      26,    27,    28,   103,   321,   138,   208,   571,   210,  5522,
     668,   144,   571,   215,   341,  5522,   218,   382,   794,  4225,
     814,   571,   339,   379,    60,   201,    35,   263,   813,  5542,
     593,   233,   477,   263,   263,  5542,   263,    63,   214,   241,
     808,   597,   244,   402,   748,   672,   363,   706,    37,   377,
     672,    77,  5423,   418,    56,   249,  4293,    83,    84,   160,
    5266,    87,   264,  4269,    66,  4271,   160,   160,  4274,   160,
     160,   160,  4278,   160,    76,   160,   160,   442,   254,   281,
      37,  4287,   160,   285,   160,   111,    37,   160,    90,    91,
      92,   267,  4298,   471,   160,   228,  3447,    77,  3449,   125,
     160,   160,   467,   129,   106,   160,   160,   160,   160,   160,
     488,   160,   160,    93,   160,  4321,   160,   414,   294,  4325,
     160,   160,   419,   160,   708,   160,   115,   160,   160,   160,
     156,   160,   158,   122,   641,   160,   160,   160,   798,   799,
     800,   801,   802,   803,   804,   805,   511,   160,   160,   158,
     160,   286,   160,   162,   134,   160,   160,   160,   115,  4365,
    4366,   160,   160,    19,   115,   122,   791,   653,  5540,   464,
     377,   122,   550,   809,  4321,   154,   245,   542,   809,   381,
    4386,   417,   358,   245,   814,   809,   809,   571,   814,   567,
     179,   809,   809,   202,   809,  5278,  5402,   562,   571,   188,
     565,   498,  4408,   809,   813,   231,   814,   571,   582,   235,
     343,   814,   414,   222,   814,   654,   242,   808,  4365,   813,
     582,   518,   179,   425,   210,  4386,   377,   808,   179,   546,
     219,   188,  4438,   197,   808,   730,   262,   188,  4444,   372,
     813,   212,   732,   432,   372,   447,   563,   813,   450,   275,
     452,   156,   335,   455,   611,  4440,   808,    12,   554,  5465,
     808,  5467,   219,   465,   466,   808,   563,   403,   219,   500,
       7,   568,    64,   475,   403,   477,   343,  5483,   287,   813,
      73,   532,    74,  5382,   486,   265,   491,  4650,   808,   586,
     492,   532,   532,   532,   532,   321,   377,    89,   500,   614,
     263,   290,   599,   505,   506,   507,   808,   263,   591,   366,
      27,   563,  5525,   339,   611,   457,   458,   459,   460,   461,
     462,   463,  5528,  5529,   813,   636,  4532,   582,   563,   813,
     627,   333,  4538,   290,  4697,   582,   538,   450,   372,   290,
    4546,   809,   809,   545,   813,  4551,  4552,    64,   350,   377,
    4556,   808,   808,   808,    71,   377,   653,   808,    75,   808,
      77,   808,   342,   565,   808,  4550,   355,  5450,   394,   212,
      19,   785,    89,   382,   400,   808,    62,   403,   367,   808,
    4586,  5480,   371,   372,   808,   365,   366,   589,   368,   808,
     247,   720,  4755,   413,  4600,   247,    21,    48,   355,   601,
     160,   193,   751,   605,   355,   687,   809,   809,   125,   418,
     707,   613,   809,   808,   494,   372,   809,   619,   687,   813,
     371,   372,   813,   571,   809,   285,   186,    12,   546,   455,
     160,   813,  4638,   442,   636,   802,  4642,   384,   642,   808,
     231,   201,   644,   235,  4650,   282,   160,  3798,  3799,   384,
     430,  5534,  3803,   197,   214,   604,   482,   809,   467,   809,
     116,   117,   118,   119,   120,   813,   492,   809,   809,   809,
     258,   263,   258,   675,   390,    48,   217,  5560,   160,   160,
     813,   160,   403,    48,   808,   160,   488,   808,  3839,   228,
     792,  4697,   103,   245,  3845,  3846,  3847,   278,   814,  3850,
     368,   111,   511,   111,   162,   808,   266,   267,   400,   808,
     712,   729,   538,   539,   540,   541,   808,   808,   808,   808,
     546,   440,   125,   565,   809,   800,   582,   228,  4734,   383,
    4736,  4737,   808,   542,   294,   472,   377,   563,   808,   565,
     566,   372,   809,   245,  4729,   809,   263,   809,   550,  4755,
     636,  4815,   532,   809,   400,   809,   809,   197,   432,    21,
     210,   582,   377,  4769,   269,   567,  5340,   223,   224,   225,
     226,   813,   246,   197,   258,   818,   602,   809,   763,   160,
     813,  5355,   571,   768,   611,   258,   575,   258,   814,   578,
     818,   697,   126,   619,   818,  5369,    48,   277,    21,   588,
     403,    48,   362,    48,   593,   153,   808,   596,   400,  4815,
     636,    48,   802,   798,   571,   477,  4822,   808,   575,    35,
     571,   578,  4769,    35,   575,   417,  4832,   578,   625,   814,
     729,   588,   608,  4839,  4877,  4841,   593,   588,   125,   596,
     263,   203,   593,    64,   263,   596,    35,  5421,   365,   366,
     372,   808,   372,   372,   371,    77,   416,   415,    21,   377,
     377,  5435,   377,   808,   814,   809,   487,   515,   377,   809,
     809,  5445,   809,   341,   265,  4822,   427,   809,   334,   809,
     336,   337,   338,   809,   809,   809,   813,   872,   873,   345,
     875,   876,   813,    48,   387,   175,  4902,   285,   724,   377,
     417,     4,  5476,   888,   210,    21,   147,   384,   197,   258,
     565,  5485,   809,  5487,   258,    15,   808,   160,    21,   120,
     808,   120,   748,   749,    48,  4931,  4932,   809,    48,   405,
      48,   377,   387,   619,   813,   372,  5510,   808,   367,   620,
      15,    21,    81,   813,   510,  4951,   143,   111,   813,   228,
     372,   515,   813,    21,  4960,   372,   173,   341,   808,    48,
     263,   377,   809,    63,   809,   194,   809,    21,   160,   384,
     426,  5545,  5546,   814,  5005,   813,  5550,   276,   808,   496,
     162,   318,   808,   636,   673,   811,  5029,    48,   397,    21,
     809,   808,   194,   809,   162,  5001,   636,   112,   813,   984,
     608,   136,   809,   809,   573,   136,   136,   808,  5014,   158,
     377,   800,   801,   813,   809,   809,   809,   808,   808,   808,
     808,   808,   149,   808,   808,  1010,   537,   809,  5034,   546,
     813,   472,   691,   489,   490,   483,   678,  1022,    48,   653,
     691,   691,    48,   800,   801,   534,   808,   554,   155,   800,
     801,  1036,    32,   633,   815,    64,   384,   808,    19,    64,
     809,   809,  5099,   483,  1049,   553,   702,   481,   633,   197,
      32,   384,   384,   809,   143,   691,   483,   688,   228,  5242,
       6,   701,  5245,   377,   464,   377,   603,   246,   154,   811,
     134,    48,  5098,   171,   130,  5101,   608,   633,   154,   292,
     811,   230,  5108,  5109,   124,   815,   231,   702,    54,  5115,
     574,   811,   143,   372,   808,   154,   813,   574,   215,    54,
     811,   500,   194,   194,  5130,   154,   125,   194,   454,   574,
     813,   635,   196,   377,  5162,   698,  5142,  3327,   655,   656,
    3571,  3321,  3323,  3325,  4736,  4739,  5152,  4744,  3339,  3977,
    4749,  5157,  3774,  4762,  5363,  1235,  5072,  5192,  5417,  1743,
    5056,  4951,  5560,  5078,  5518,  5162,    46,  5162,  1091,  2905,
    2963,  4126,  5056,  5530,  5056,   631,  5056,  5162,  5056,  5056,
    5432,  5056,  5188,  5056,  5333,  5056,  5056,  5432,   705,  5415,
    5056,  5056,   648,   649,  5056,  5359,  5056,  5358,  3986,  1195,
    5231,  2460,  2466,  3567,  4417,  4267,  4440,  3424,  3421,  5372,
    3420,  4220,   729,  2686,  5307,  4858,  4635,  5391,  5319,  5317,
    2439,  2553,  4442,  1208,  5029,  4288,  3415,  4287,  5212,  4339,
    3817,   748,   749,  3850,  3849,  4664,  5242,  5329,  4342,  5245,
    5099,  3523,  4936,  4875,  5033,  1230,  4642,  4889,  4879,  4941,
    3190,  1897,  5258,  1238,  1239,  4436,  3991,  3102,  4314,  5155,
    5156,  3403,  1247,  1248,  1249,  1250,  1251,  1252,  4714,  1689,
    3095,  2554,  2554,  2553,  5317,  1260,  1261,  1717,  1263,  1264,
    2334,  2336,  3880,  1268,  1269,  3220,  1097,  1272,  1273,  1274,
    1275,  2946,  1277,  1278,  5300,  2952,  1875,  1850,  3318,  3594,
    1285,  1286,  2936,  1288,  1289,  1290,  1291,  1292,    64,  4142,
    1295,  1296,  1297,  1298,  1299,  1300,  1301,  1302,  1303,  2237,
    1305,  1023,  2414,  1308,  1309,  2112,  1022,  4465,  1313,  2824,
    2044,  5000,  1317,  1318,  1319,  2864,  5499,  1359,  4977,  2974,
    5284,  1279,  5056,  2974,  2974,  1330,  1331,  1332,  2974,  5382,
    1335,  5480,  5507,  1338,  1339,  1340,  1341,  1342,  5300,  4843,
    5391,  4579,  1347,  5108,  3901,  4200,  5372,  1110,  1630,  5265,
    5266,  4588,  5109,  1358,  1359,  5001,  1253,  3654,  4798,  3874,
    4873,  1366,  4972,  1368,  1369,  2421,    16,  1464,  2122,  2871,
    3593,  3593,  4554,  1628,  4161,  1380,  1381,  1382,  3591,  1384,
    1385,  4537,  1180,  1388,  1389,  1390,  1180,  1180,  1393,  1394,
    1395,  1396,  1397,  1398,  1399,  1400,  1176,   993,  4546,  1404,
    1716,  1180,  2320,  1593,  1409,  1177,  2321,  3282,  2211,  5297,
    2892,  5437,  4248,  2210,  3597,  5381,  5522,  4625,  5444,  1424,
    5542,  5155,  5156,  4359,  5340,  4506,  4551,  4846,  5056,  3120,
    4609,  2259,  1362,  3333,  3019,  5292,  1543,    43,    43,  5355,
    2274,  1010,  1541,  2254,  2252,  2939,  3090,  2705,  1456,  2697,
    1150,  1456,  5478,  5369,  2706,  1684,  1499,  4812,  5484,  4982,
    1011,    11,  1503,  5489,    11,  1235,  5308,  3994,  4376,  1235,
    1235,  4437,  4757,  5499,  3891,    -1,    -1,  5503,  5212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5402,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5522,    -1,  5414,  5415,
      -1,    -1,  1507,    -1,    -1,  5421,    -1,    -1,  5534,  1514,
      -1,    -1,    -1,    -1,    -1,    -1,  5542,    -1,    -1,  5435,
      -1,    -1,    -1,  5540,    -1,    -1,    -1,  5155,  5156,  5445,
      -1,  5265,  5266,    -1,  5560,  5540,    -1,    -1,    -1,    -1,
    1545,    -1,  1547,    -1,    -1,  1550,    -1,    -1,    -1,  5465,
      -1,  5467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5476,    -1,    -1,    -1,    -1,    -1,    -1,  5483,    -1,  5485,
      -1,  5487,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5510,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5340,    -1,    -1,    21,
      -1,    -1,  5528,  5529,    -1,    27,    -1,    -1,    -1,    -1,
      -1,  5355,  1627,    -1,    -1,    -1,    -1,    -1,    -1,  5545,
    5546,    -1,    -1,    -1,  5550,  5369,    -1,  5265,  5266,    -1,
      -1,  1646,    -1,    -1,    -1,    -1,    -1,    -1,   768,    -1,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    71,
      -1,    -1,    -1,    75,    -1,    77,    35,    -1,  5402,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,   798,    -1,
    5414,  5415,    -1,    -1,    -1,    -1,    -1,  5421,    -1,    -1,
      -1,    -1,    -1,    62,   814,    -1,    -1,    -1,    -1,  1704,
      -1,  5435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5445,  5340,   125,    -1,    21,    -1,    -1,    -1,    -1,
      26,    27,    28,    -1,    -1,    -1,    -1,  5355,    -1,    -1,
      -1,  5465,    -1,  5467,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5369,  5476,   112,    -1,    -1,   115,    -1,    -1,  5483,
      -1,  5485,    -1,  5487,   123,    -1,   876,    63,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    77,    -1,   142,  5402,    -1,  5510,    83,    84,    -1,
      -1,    87,    -1,    -1,    -1,    -1,  5414,  5415,    -1,    -1,
      -1,   203,    -1,  5421,  5528,  5529,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   111,    -1,  5435,    -1,    -1,
      -1,  5545,  5546,    -1,    -1,    -1,  5550,  5445,    -1,   125,
     189,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   205,  5465,    -1,  5467,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5476,    -1,
     156,   263,   158,    -1,    -1,  5483,    -1,  5485,   981,  5487,
      -1,    -1,    -1,    -1,   984,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5510,    -1,    -1,    -1,    -1,  1010,    -1,    -1,
      -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5528,  5529,  1022,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     279,    -1,    -1,  1036,    -1,    -1,    -1,  5545,  5546,  1924,
      -1,    -1,  5550,  1928,    -1,   231,    -1,    -1,    -1,   235,
      -1,  1936,    -1,  1938,    -1,    -1,   242,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   365,   366,    -1,   262,    -1,    -1,   371,
      -1,    -1,    -1,    -1,    -1,   377,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1978,    -1,    -1,    -1,   346,   347,   348,
    1103,    -1,    -1,    -1,   353,    -1,    -1,   356,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   417,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   321,    -1,  2022,  2023,  2024,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   339,    -1,    -1,    -1,    -1,    -1,   408,
     409,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2060,    -1,    -1,    -1,    -1,
    2065,    -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2084,
      -1,    -1,    -1,    -1,   496,    -1,  2091,    -1,   394,    -1,
      -1,  2096,    -1,  2098,   400,    -1,    -1,   403,    -1,  2104,
      -1,  2106,  2107,    -1,    -1,    -1,    -1,  1230,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1238,  1239,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1247,  1248,    -1,
      -1,  1251,  1252,    -1,   546,    -1,    -1,    -1,    -1,   508,
    1260,  1261,    -1,  1263,  1264,    -1,    -1,    -1,  1268,   455,
      -1,    -1,  1272,  1273,  1274,  1275,    -1,  1277,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1285,  1286,    -1,  1288,  1289,
      -1,    -1,    -1,    -1,    -1,  1295,   482,    -1,  1298,  1299,
    1300,  1301,  1302,  1303,    -1,  1305,   492,    -1,  1308,  1309,
      -1,   603,    -1,  1313,    -1,    -1,    -1,  1317,  1318,  1319,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   578,
    1330,  1331,  1332,    -1,    -1,    -1,    -1,    -1,  1338,  1339,
    1340,  1341,  1342,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   538,   539,   540,   541,    -1,   606,  1358,  1359,
     546,    -1,    -1,   655,   656,    -1,  1366,    -1,  1368,  1369,
      -1,  2256,    -1,    -1,  2259,    -1,    -1,   563,    -1,   565,
     566,  2266,  2267,    -1,    -1,    -1,  2271,    -1,    -1,  2274,
      -1,    -1,  2277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1409,
      -1,    -1,    -1,   705,    -1,    -1,   602,    -1,    -1,    -1,
      -1,  1424,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   619,    -1,    -1,    -1,   729,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     636,    -1,    -1,  1456,    -1,    -1,   748,   749,    -1,  1462,
      -1,    -1,    -1,    -1,    34,    35,    -1,    -1,    -1,    -1,
      40,    -1,    42,  1476,    44,    45,    -1,    -1,    -1,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    62,    -1,    -1,  2380,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1507,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1514,    -1,    63,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,   724,    -1,
      87,    -1,   112,    -1,    -1,   115,    -1,  1547,    -1,    -1,
    1550,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   748,   749,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   142,  2458,    -1,    -1,  2461,  2462,   125,    -1,
      -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,   159,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   158,    -1,    -1,    -1,    -1,    -1,   187,    -1,   189,
      -1,    -1,   808,    -1,    -1,   811,    -1,  1627,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   205,   206,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1646,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,  1686,  1687,  1688,    -1,    -1,   235,  2574,
     260,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1704,    -1,    -1,    -1,    -1,   279,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,   288,   289,
      -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    -1,    -1,    -1,    -1,    -1,   327,   328,   329,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   321,    -1,   346,   347,   348,    -1,
      -1,    -1,    -1,   353,    -1,    -1,   356,    -1,    -1,    -1,
      -1,    -1,   339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   374,   375,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2720,    -1,    -1,   408,   409,
      -1,    -1,    -1,    -1,  2729,  2730,    -1,   394,   116,   117,
     118,   119,   120,    -1,    -1,    -1,   403,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   434,  2750,  2751,    -1,  2753,    -1,
      -1,  2756,  2757,  2758,  2759,  2760,    -1,    -1,  2763,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2772,    -1,    -1,
      -1,    -1,  2777,    -1,  2779,    -1,  2781,  2782,    -1,  2784,
    2785,    -1,    -1,    -1,  2789,  2790,  2791,    -1,    -1,    -1,
    2795,  2796,  2797,    -1,  2799,    -1,  2801,    -1,  2803,    -1,
    2805,    -1,  2807,    -1,  1924,    -1,   496,  2812,  1928,    -1,
     500,    -1,    -1,    -1,    -1,   482,    -1,    -1,  1938,    -1,
      -1,    -1,   512,  2828,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   223,   224,   225,   226,    -1,
      -1,    -1,    -1,    -1,    -1,  2850,    -1,  2852,    -1,  2854,
      -1,    -1,    -1,  2858,    -1,    -1,    -1,    -1,    -1,  2864,
    2865,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   538,   539,   540,   541,    -1,    -1,    -1,    -1,   546,
      -1,    -1,   572,    -1,    -1,   575,    -1,    -1,   578,   579,
     580,   581,    -1,    -1,    -1,    -1,   563,    -1,    -1,   566,
      -1,    -1,  2022,  2023,  2024,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   621,   622,    -1,    -1,   602,  2941,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2065,   334,    -1,   336,   337,
     338,    -1,    -1,    -1,    -1,    -1,    -1,   345,    -1,   649,
      -1,    -1,    -1,    -1,  2084,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2096,    -1,  2098,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2991,  2992,  2993,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   386,    -1,
      -1,   389,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3019,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   426,    -1,
      -1,  3046,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3056,    -1,  3058,    -1,    -1,    -1,   724,    35,    36,
      -1,    -1,    -1,  2186,  2187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,
      14,   748,   749,    17,    61,    62,    -1,    -1,    -1,    -1,
      -1,    -1,    26,    27,    28,    72,    73,    -1,    -1,    -1,
      -1,   489,   490,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      97,    -1,    99,   813,    58,    -1,    -1,    61,    62,    63,
      64,    -1,   109,  2256,    -1,    69,  2259,    71,    -1,    -1,
      -1,    -1,    -1,    77,    -1,    -1,    -1,  2267,    -1,    83,
      84,  2271,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2284,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,
     157,   158,    -1,    -1,    -1,    -1,   163,    -1,    -1,   166,
      -1,   125,    -1,    -1,    -1,   129,    -1,    -1,    -1,   176,
      -1,    -1,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,
      -1,   198,    -1,   200,   158,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   209,    -1,   211,   169,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   631,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2380,   192,   647,
     648,   649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,   235,    -1,    -1,    -1,   282,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
      -1,    -1,  2455,    -1,    -1,    -1,  2459,    -1,   315,    -1,
      -1,  2464,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2489,  2490,  2491,  2492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   321,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3401,    -1,  2521,    -1,
      -1,    -1,    -1,   380,    -1,   339,    -1,    -1,    -1,   343,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2545,  2546,    -1,    -1,  3431,    -1,    -1,    -1,
     407,    -1,    -1,    -1,  3439,    -1,    -1,    -1,    -1,    -1,
      -1,   418,   419,    -1,   421,   422,   423,   381,    -1,    -1,
      -1,    -1,    -1,   387,  2574,    -1,    -1,    -1,    -1,    -1,
     394,    -1,    -1,    -1,    -1,    -1,   443,    -1,    -1,   403,
      -1,  3476,  3477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3502,    -1,    -1,
      -1,   435,    -1,    -1,    -1,    -1,    -1,  3512,    -1,  3514,
      -1,  3516,    -1,    -1,    -1,    -1,   450,   451,   452,    -1,
     497,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3549,    -1,    -1,    -1,   482,  3554,
      -1,  3556,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   542,    -1,    -1,    -1,   546,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   562,  3591,    -1,   565,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2720,    -1,    -1,    -1,   538,   539,   540,   541,   585,  2729,
    2730,    -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3630,    -1,    -1,    -1,   563,
    2750,  2751,   566,  2753,    -1,    -1,  2756,  2757,  2758,  2759,
    2760,    -1,    -1,    -1,    -1,    -1,   623,    -1,    -1,    -1,
      -1,    -1,  2772,   630,    -1,   589,    -1,  2777,    -1,  2779,
      -1,  2781,  2782,  3668,  2784,    -1,    -1,    -1,   602,  2789,
    2790,  2791,    -1,    -1,    -1,  2795,  2796,  2797,    -1,  2799,
      -1,  2801,    -1,  2803,    -1,  2805,    -1,  2807,    -1,    -1,
      -1,    -1,  2812,    -1,    -1,    -1,  3701,    -1,    -1,    -1,
      -1,    -1,   636,    -1,    -1,   639,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2858,    -1,
      -1,    -1,    -1,    -1,  2864,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    26,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3780,   753,   754,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    62,    63,
     724,   725,   726,    -1,    -1,    -1,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,
      84,    -1,    -1,    87,   748,   749,    -1,    -1,    -1,  2942,
      -1,  2941,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2991,  2992,
    2993,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3035,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3046,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3983,  3984,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,  3115,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4016,    -1,  3136,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3148,    -1,  3150,  3151,  3152,
    3153,    -1,  3155,  3156,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4049,    -1,  4051,   321,    -1,  4054,
    4055,    -1,  4057,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4068,    -1,   339,    -1,    -1,  4073,    -1,
      -1,  4076,    -1,    -1,  4079,  4080,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4101,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3229,    -1,    -1,    -1,
    4115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3242,
     394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   403,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4161,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4197,  4198,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3330,   482,  3332,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3342,
    3343,  3344,  3345,    -1,    -1,    -1,    -1,    -1,  3351,  3352,
    3353,  3354,  3355,  3356,    -1,  3358,  3359,  3360,  3361,    -1,
      -1,  3364,    -1,  3366,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   538,   539,   540,   541,    -1,    32,
      -1,    -1,   546,    36,  4279,    -1,    -1,    -1,  3401,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,   563,
      -1,    -1,   566,    -1,    -1,    58,    -1,    -1,    -1,    -1,
      63,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3431,    -1,    -1,    -1,    -1,    79,    -1,    -1,  3439,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   602,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3476,  3477,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,   132,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4383,  4384,
     143,   144,  3502,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3512,   156,  3514,    -1,  3516,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,
    4415,  4416,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,   210,    -1,    -1,
     724,    -1,   215,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     233,  3591,    -1,    -1,   748,   749,    -1,    -1,   241,    -1,
      -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   264,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3630,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,
      -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,    12,
      -1,    14,  4547,    -1,    17,    -1,    -1,    -1,  3668,    -1,
      -1,    -1,    -1,    26,    27,    28,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4570,    -1,  4572,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    58,    -1,  3710,    -1,    -1,
      63,    64,    -1,    -1,    -1,    -1,    69,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      83,    84,    -1,    -1,    87,    -1,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    96,    -1,    -1,  3749,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   414,   125,    -1,    -1,    -1,   129,    -1,    -1,    -1,
    3780,    -1,   425,    -1,   137,   138,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,  4679,    -1,    -1,    -1,    -1,   152,
      -1,    -1,    -1,    -1,   447,   158,    -1,   450,    -1,   452,
      -1,    -1,   455,    -1,    -1,    -1,   169,    -1,    -1,    -1,
      -1,    -1,   465,   466,    -1,    -1,  4711,    -1,    -1,    -1,
      -1,    -1,   475,    -1,   477,    -1,    -1,    -1,    -1,   192,
      -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,    -1,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     233,    -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,
      -1,    -1,    -1,    -1,    -1,   538,    -1,  4782,    -1,    -1,
    4785,    -1,   545,    -1,    -1,    -1,  3909,    -1,    -1,   262,
      -1,    -1,    -1,  4798,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   565,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   589,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   601,    -1,
      -1,  4846,   605,    -1,    -1,    -1,    -1,    -1,   321,    -1,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,    -1,  3982,
      -1,    -1,    -1,    -1,    -1,    -1,   339,    -1,    -1,    -1,
     343,    -1,    -1,   636,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   644,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4016,   660,   661,   662,
     663,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,
      -1,    -1,   675,    -1,   387,    -1,    -1,    -1,    -1,    -1,
      -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4049,
     403,  4051,    -1,    -1,  4054,  4055,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4068,   712,
      -1,    -1,    -1,  4073,    -1,    -1,  4076,    -1,    -1,  4079,
    4080,    -1,   435,    -1,    -1,    -1,    -1,  4972,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,
      -1,  4101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5005,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4161,    -1,    -1,    -1,   808,  5051,    -1,    -1,    -1,
      -1,  5056,    -1,    -1,    -1,    -1,    -1,    -1,  5063,    -1,
      -1,    -1,    -1,    -1,    -1,   538,   539,   540,   541,    -1,
      -1,    -1,    -1,   546,    -1,    -1,    -1,  4197,  4198,    -1,
      -1,    -1,    -1,  5088,    -1,  4208,  4209,    -1,  4211,    -1,
     563,    -1,     7,   566,    -1,    -1,    -1,    12,    -1,    14,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    26,    27,    28,    -1,    -1,   589,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   602,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,  5149,    -1,    -1,    -1,    63,    -1,
    5155,  5156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4279,
      -1,    -1,    77,   636,    -1,    -1,   639,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5199,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4327,    -1,    -1,  5212,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,    -1,    -1,    -1,  5231,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,  5251,    -1,  5253,    -1,
      -1,   724,   725,   726,    -1,    -1,    -1,    -1,  5263,    -1,
    5265,  5266,    -1,  4383,  4384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   748,   749,   192,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4421,  4422,
    4423,  4424,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,    -1,  5338,    -1,  5340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
    5355,  5356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5369,    -1,    -1,    -1,    -1,    -1,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5391,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5401,  5402,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   321,    -1,    -1,  5414,
    5415,    -1,    -1,    -1,    -1,    -1,  5421,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   339,    -1,    -1,  4547,   343,    -1,
    5435,    -1,    -1,    -1,    -1,    -1,    -1,  5442,    -1,    -1,
    5445,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4570,    -1,  4572,  5458,    -1,    -1,    -1,    -1,    -1,    -1,
    5465,    -1,  5467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5476,   387,  4596,    -1,    -1,    -1,    -1,  5483,   394,
    5485,    -1,  5487,    -1,    -1,  4608,  4609,    -1,   403,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5510,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5528,  5529,    -1,    -1,    -1,    -1,    -1,
    5535,    -1,    -1,    -1,    -1,   450,    -1,    -1,  5543,    -1,
    5545,  5546,    -1,    -1,    -1,  5550,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4679,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,  4694,  4695,    -1,    34,    35,    -1,    -1,    -1,    -1,
      40,    -1,    42,    -1,    44,    45,    -1,    -1,    -1,    -1,
      -1,  4711,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    62,    -1,  4727,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4739,    -1,    -1,    -1,
      -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,    -1,
      -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4767,    -1,    -1,    -1,   563,    -1,
      -1,   566,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,    -1,  4782,   123,    -1,  4785,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4798,    -1,
      -1,    -1,   142,    -1,    -1,    -1,    -1,   602,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   159,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   636,    -1,    -1,   639,    -1,  4846,   187,    -1,   189,
    4853,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   205,   206,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4884,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
      -1,    -1,    -1,    -1,    -1,  4948,    -1,    -1,   288,   289,
      -1,   291,    -1,   748,   749,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4972,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   327,   328,   329,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5003,    -1,    -1,    -1,    -1,    -1,   346,   347,   348,    -1,
      -1,    -1,    -1,   353,    -1,    -1,   356,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   374,   375,  5039,  5040,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5051,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,   409,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5088,    -1,
      -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5149,
      -1,    -1,    -1,    -1,    -1,    -1,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5199,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5212,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   572,  5236,  5237,   575,    -1,    -1,   578,   579,
     580,   581,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5251,    -1,  5253,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   621,   622,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   649,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5338,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5356,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,
       6,  5401,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,  5442,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,  5458,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,  5535,    -1,   143,    -1,    -1,
     146,   147,   148,  5543,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,   492,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,   565,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
     636,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,    -1,   800,   801,    -1,    -1,    -1,    -1,
     806,    -1,   808,    -1,    -1,    -1,   812,    -1,    -1,    -1,
     816,   817,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    46,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,   268,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
     583,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,    -1,    -1,    -1,    -1,    -1,   800,   801,    -1,
      -1,    -1,    -1,   806,    -1,   808,    -1,    -1,    -1,   812,
      -1,    -1,    -1,   816,   817,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,    -1,
     800,   801,    -1,    -1,    -1,    -1,   806,    -1,   808,    -1,
      -1,    -1,   812,    -1,    -1,    -1,   816,   817,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,    -1,    -1,
      -1,    -1,    -1,   800,   801,   802,    -1,    -1,    -1,   806,
      -1,   808,    -1,    -1,    -1,   812,    -1,    -1,    -1,   816,
     817,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,    -1,   800,   801,   802,    -1,
      -1,    -1,   806,    -1,   808,    -1,    -1,    -1,   812,    -1,
      -1,    -1,   816,   817,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,    -1,    -1,    -1,    -1,    -1,   800,
     801,    -1,    -1,    -1,    -1,   806,    -1,   808,    -1,    -1,
      -1,   812,    -1,    -1,    -1,   816,   817,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,    -1,   800,   801,    -1,    -1,    -1,    -1,   806,    -1,
     808,    -1,    -1,    -1,   812,    -1,    -1,    -1,   816,   817,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
      -1,    -1,    -1,    -1,    -1,   800,   801,    -1,    -1,    -1,
      -1,   806,    -1,   808,    -1,    -1,    -1,   812,    -1,    -1,
      -1,   816,   817,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,    -1,   800,   801,
      -1,    -1,    -1,    -1,   806,    -1,   808,    -1,    -1,    -1,
     812,    -1,    -1,    -1,   816,   817,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,
      -1,   800,   801,    -1,    -1,    -1,    -1,   806,    -1,   808,
      -1,    -1,    -1,   812,    -1,    -1,    -1,   816,   817,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,    -1,   800,   801,    -1,    -1,    -1,    -1,
     806,    -1,   808,    -1,    -1,    -1,   812,    -1,    -1,    -1,
     816,   817,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,    -1,    -1,    -1,    -1,    -1,   800,   801,    -1,
      -1,    -1,    -1,   806,    -1,   808,    -1,    -1,    -1,   812,
      -1,    -1,    -1,   816,   817,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,    -1,
     800,   801,    -1,    -1,    -1,    -1,   806,    -1,   808,    -1,
      -1,    -1,   812,    -1,    -1,    -1,   816,   817,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,    -1,    -1,
      -1,    -1,    -1,   800,   801,    -1,    -1,    -1,    -1,   806,
      -1,   808,    -1,    -1,    -1,   812,    -1,    -1,    -1,   816,
     817,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,    -1,   800,   801,    -1,    -1,
      -1,    -1,   806,    -1,   808,    -1,    -1,    -1,   812,    -1,
      -1,    -1,   816,   817,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,    -1,    -1,    -1,    -1,    -1,   800,
     801,    -1,    -1,    -1,    -1,   806,    -1,   808,    -1,    -1,
      -1,   812,    -1,    -1,    -1,   816,   817,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,    -1,   800,   801,    -1,    -1,    -1,    -1,   806,    -1,
     808,    -1,    -1,    -1,   812,    -1,    -1,    -1,   816,   817,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
      -1,    -1,    -1,    -1,    -1,   800,   801,    -1,    -1,    -1,
      -1,   806,    -1,   808,    -1,    -1,    -1,   812,    -1,    -1,
      -1,   816,   817,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
     492,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,   565,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,   619,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,   636,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,   699,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,   808,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   817,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,   145,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,   699,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,    -1,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,   808,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     817,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,   699,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,   808,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,   817,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,   454,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,   813,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,   593,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   391,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     809,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   812,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,   565,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
     619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,   808,
     809,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     809,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     809,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
     199,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,   275,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,   565,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
     619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   808,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   808,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,   808,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   808,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,   808,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   808,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,   802,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,   802,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,   802,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,   802,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,
      -1,     5,     6,   802,     8,     9,    10,    11,    12,    13,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
      -1,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,   440,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,   505,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,   586,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,   608,   609,   610,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,    -1,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    14,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,   144,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
     285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,    -1,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,   440,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
     505,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,   586,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,   608,   609,   610,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,    -1,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    14,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,   492,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,   505,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
     586,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,   608,   609,   610,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,    -1,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,    -1,    -1,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,   520,   521,   522,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,   593,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      18,    19,    20,    21,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,   386,    -1,
      -1,   389,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,   647,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,   501,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,   263,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,   593,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
     104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,   104,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      37,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,   371,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
     371,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    95,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,   521,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,    -1,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,    -1,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
      -1,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,    -1,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,    -1,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,    -1,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,    -1,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,    -1,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,    -1,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,    -1,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
      -1,   421,   422,   423,    -1,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,   449,
      -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,    -1,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,    -1,    -1,   709,
     710,   711,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,
     421,   422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
     451,   452,   453,    -1,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,    -1,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,    -1,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,
     422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,    -1,   449,    -1,   451,
     452,   453,    -1,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,    -1,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,    -1,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,   422,
     423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,   451,   452,
     453,    -1,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,    -1,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,   151,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,   150,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,   454,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,   633,    -1,
     635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,   150,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,   472,   473,   474,    -1,
      -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,   485,
      -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,   633,    -1,   635,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,    -1,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,   472,   473,   474,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,    -1,   484,   485,    -1,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,   454,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,    -1,   453,   454,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,   472,   473,   474,    -1,    -1,    -1,   478,   479,
     480,    -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
      -1,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,   454,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      34,    35,    -1,    -1,    -1,    -1,    40,    -1,    42,    -1,
      44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,
      -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   205,   206,    -1,    -1,    -1,    -1,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   327,   328,   329,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   346,   347,   348,    -1,    -1,    -1,    -1,   353,
      -1,    -1,   356,    -1,    -1,    -1,    -1,   444,   445,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     374,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   408,   409,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   512,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   572,    -1,
      -1,   575,    -1,    -1,   578,   579,   580,   581,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   621,   622,    -1,
      -1,    -1,    -1,   710,   711,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   731,   649,   733,   734,   735,   736,
     737,    -1,    -1,   740,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   750,    -1,    -1,    -1,    -1,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   793
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     381,   414,   425,   447,   450,   452,   455,   465,   466,   475,
     477,   486,   492,   500,   505,   506,   507,   538,   545,   565,
     589,   601,   605,   613,   619,   636,   644,   660,   661,   662,
     663,   675,   712,   752,   808,   820,   821,   824,   825,   826,
     827,   828,   830,   835,   838,   891,   892,   893,   894,   896,
     899,   921,   943,   950,   951,  1186,  1187,  1189,  1191,  1193,
    1196,  1198,  1199,  1200,  1201,  1202,  1204,  1205,  1240,  1241,
    1249,  1250,  1253,  1266,  1268,  1272,  1275,  1276,  1280,  1282,
    1287,  1291,  1297,  1298,  1299,  1300,  1301,  1302,  1303,  1308,
    1309,  1435,  1468,  1469,  1470,  1471,  1472,  1473,  1474,  1475,
    1476,  1477,  1478,  1479,  1480,  1481,  1482,  1483,  1484,  1493,
    1494,  1515,  1516,  1520,  1524,  1530,  1531,  1532,  1533,  1534,
    1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,
    1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,
    1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,
    1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1585,
    1586,  1588,  1592,  1601,  1611,  1615,  1617,  1618,  1688,  1690,
    1692,  1715,  1721,  1723,  1724,  1725,  1727,  1731,  1733,  1770,
    1776,  1777,  1778,  1779,  1815,  1822,  1823,  1825,  1826,    12,
     108,   127,   200,   243,   286,   419,   498,   563,   565,   599,
     611,   707,  1789,  1790,  1791,  1794,   282,   370,  1281,  1771,
     571,  1663,   235,     5,     6,     8,     9,    10,    11,    12,
      15,    20,    23,    25,    26,    27,    28,    29,    30,    32,
      36,    40,    43,    44,    45,    47,    49,    50,    53,    56,
      57,    59,    60,    61,    63,    65,    66,    67,    68,    69,
      70,    72,    73,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    87,    88,    90,    91,    92,    93,
      94,    98,   103,   106,   110,   111,   112,   115,   120,   121,
     126,   127,   129,   135,   136,   137,   138,   139,   143,   146,
     147,   148,   152,   154,   155,   157,   158,   159,   162,   163,
     165,   166,   167,   168,   169,   170,   173,   174,   175,   176,
     177,   180,   181,   183,   184,   185,   186,   187,   190,   191,
     195,   196,   198,   202,   204,   205,   206,   207,   209,   211,
     215,   216,   218,   221,   222,   226,   227,   228,   229,   232,
     233,   234,   237,   242,   243,   244,   248,   252,   253,   255,
     256,   260,   262,   265,   266,   269,   272,   273,   279,   280,
     282,   284,   286,   287,   295,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   315,   316,   317,   319,   320,   321,   322,   324,
     325,   330,   331,   332,   333,   334,   335,   338,   339,   341,
     343,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     356,   357,   360,   361,   362,   363,   364,   368,   369,   373,
     375,   376,   378,   379,   380,   383,   393,   394,   395,   397,
     399,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   412,   414,   415,   416,   418,   420,   421,   422,   423,
     424,   426,   427,   428,   431,   435,   436,   438,   439,   442,
     443,   444,   445,   446,   448,   449,   451,   452,   453,   456,
     457,   458,   459,   460,   461,   462,   463,   465,   467,   468,
     470,   471,   472,   474,   477,   478,   479,   480,   482,   484,
     485,   486,   487,   488,   490,   491,   495,   496,   497,   498,
     502,   506,   508,   509,   510,   511,   513,   514,   515,   516,
     517,   523,   524,   525,   527,   530,   533,   535,   537,   538,
     539,   540,   541,   542,   545,   546,   549,   550,   551,   552,
     553,   554,   557,   558,   559,   560,   562,   563,   566,   567,
     568,   569,   572,   573,   575,   576,   577,   578,   584,   585,
     589,   590,   591,   594,   595,   597,   598,   600,   601,   604,
     607,   609,   611,   612,   618,   620,   623,   627,   629,   630,
     631,   632,   639,   640,   641,   643,   644,   645,   646,   649,
     652,   653,   654,   655,   656,   658,   667,   668,   669,   671,
     672,   673,   675,   678,   680,   687,   688,   691,   693,   695,
     696,   700,   701,   702,   703,   704,   705,   706,   707,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   745,   746,   747,   748,   749,   750,   751,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   915,  1660,  1669,  1679,  1680,  1681,  1683,  1684,  1687,
     315,   456,   837,   562,   565,  1717,  1717,   640,  1772,   108,
     199,   286,   389,   498,   518,   563,   568,   599,   603,   611,
     653,   707,  1164,  1489,  1786,  1790,  1791,  1792,  1793,  1794,
       8,    23,    29,    35,    37,    38,    39,    41,    54,    55,
      61,    62,    69,    72,    96,    97,   102,   104,   107,   108,
     113,   114,   115,   120,   122,   125,   171,   178,   179,   188,
     195,   205,   207,   213,   219,   226,   230,   241,   245,   271,
     279,   290,   318,   323,   334,   338,   340,   344,   345,   346,
     347,   348,   355,   365,   366,   367,   371,   372,   396,   408,
     409,   411,   426,   454,   455,   474,   476,   483,   484,   490,
     543,   544,   551,   555,   556,   561,   571,   575,   576,   577,
     578,   587,   588,   589,   593,   596,   611,   615,   616,   617,
     619,   624,   626,   631,   632,   649,   664,   665,   670,   676,
     677,   679,   682,   683,   684,   685,   686,   690,   692,   694,
     745,   783,   800,   801,   802,   806,   808,   812,   816,   817,
    1137,  1301,  1319,  1320,  1323,  1324,  1325,  1327,  1331,  1334,
    1336,  1337,  1339,  1340,  1341,  1348,  1349,  1350,  1373,  1374,
    1375,  1639,  1641,  1644,  1645,  1646,  1647,  1648,  1649,  1652,
    1655,  1657,  1660,  1669,  1781,  1783,   108,   167,   200,   235,
     286,   419,   498,   518,   563,   586,   599,   611,   627,   653,
     707,  1489,  1669,  1281,   103,   535,   952,    13,    14,    99,
     130,   144,   167,   170,   183,   210,   235,   241,   274,   285,
     420,   424,   440,   448,   456,   492,   505,   506,   557,   586,
     608,   610,  1660,  1663,  1670,  1674,  1681,  1684,  1685,  1687,
    1737,  1738,  1658,  1669,   836,   565,   128,   220,   293,  1495,
     406,   658,    87,   427,  1616,   111,   235,   646,  1619,   243,
    1717,  1281,  1669,  1612,   486,   611,  1717,  1281,   128,   293,
    1496,  1519,   652,  1602,   521,   940,   944,   945,  1669,   230,
    1487,  1772,  1669,    13,   140,   220,   526,   527,   529,   530,
     531,   548,  1310,  1311,  1312,  1784,    61,    62,   125,   209,
     282,   351,   403,   497,   584,   652,   653,   671,   707,   812,
    1139,  1660,  1672,  1680,  1681,  1683,  1684,  1686,  1689,  1699,
    1704,  1705,    35,    36,    61,    72,    97,    99,   109,   158,
     163,   166,   176,   198,   200,   209,   211,   282,   315,   380,
     407,   418,   419,   422,   423,   443,   497,   510,   546,   565,
     630,   753,   754,  1139,  1248,  1575,  1576,  1578,  1579,  1580,
    1700,   944,   204,   510,   584,  1248,   204,  1248,  1658,  1669,
     565,  1525,   406,   658,   243,  1722,  1669,   483,  1505,  1509,
     659,  1436,  1437,  1669,    32,    79,   154,   414,   436,   477,
     538,  1818,  1327,  1669,  1660,   400,  1056,   808,  1782,  1783,
     243,   282,  1323,  1298,  1299,  1301,  1435,  1502,     0,   156,
     822,   414,   104,   274,   611,  1213,  1663,  1669,  1673,  1675,
    1676,  1759,  1762,   126,   403,   611,  1242,  1243,  1244,  1245,
    1246,  1247,   194,   246,   285,  1313,  1314,  1466,   387,   602,
     657,   794,  1448,  1449,  1300,   130,   608,    17,   195,  1589,
    1590,  1658,   160,  1217,  1669,   160,   915,   137,   152,   448,
     479,  1726,   212,   915,  1673,  1669,  1658,   563,  1487,   212,
     167,  1195,  1789,  1717,  1772,  1288,  1289,  1658,   808,   922,
     814,   185,   517,   582,  1485,  1658,  1485,    19,  1773,   230,
    1087,   235,   212,   455,  1673,   235,   716,  1669,   563,  1087,
    1087,   212,   235,   565,  1785,  1785,  1789,  1794,   808,   808,
     808,  1334,   808,   808,   808,  1323,  1386,   808,   808,   808,
     808,   808,   808,   808,   808,  1322,  1322,   808,  1125,   808,
     808,   808,   571,   808,   808,   808,  1782,   808,   808,   808,
     808,   808,   808,   808,   808,   808,  1323,   808,   808,   808,
    1384,  1385,  1655,  1669,   808,   808,   808,   808,   808,   808,
     808,   808,   808,  1323,  1125,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,  1125,   571,   808,   808,   808,   571,   808,   808,   808,
      37,   219,   571,   808,  1322,  1125,  1125,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,  1334,
    1334,  1334,   619,  1299,  1301,  1323,   812,  1673,  1669,   813,
      18,    19,    21,   386,   389,   571,   647,  1321,  1328,  1329,
    1668,  1669,   160,   161,   201,   214,   254,   267,   294,   358,
    1332,    33,   141,   249,   275,   344,   365,   366,   441,   503,
     504,   516,   721,   798,   799,   800,   801,   802,   803,   804,
     805,  1330,  1334,    71,   388,   571,  1664,   259,   651,   808,
     814,  1487,  1487,  1487,  1669,   212,  1487,  1487,   716,  1669,
    1487,   563,  1487,  1487,  1487,   212,  1717,   831,  1593,   135,
     418,  1736,   480,   480,   563,   568,   611,   627,   653,   653,
     384,   808,  1763,   562,   377,  1763,    67,   510,  1763,   109,
     627,  1763,   812,  1763,   377,   582,   813,   380,    68,   432,
     814,  1673,   197,   231,  1236,  1669,  1663,  1824,  1323,   246,
      85,   293,  1621,   194,  1716,  1717,   197,   315,  1575,  1613,
    1669,  1284,  1676,  1283,  1717,   246,  1497,  1487,  1604,   315,
     510,   753,  1603,  1605,   620,   941,   500,   946,   171,    13,
     424,  1737,   582,  1773,  1319,  1312,   500,   653,   814,    35,
     125,   160,   501,  1140,  1506,  1673,   194,   582,  1506,   255,
     432,  1707,  1708,  1710,  1712,    13,   125,   364,  1674,  1677,
    1745,   212,   812,  1673,    35,   125,  1142,  1143,  1673,   814,
     125,   584,  1695,  1703,  1705,   813,  1696,  1506,   166,   275,
     634,  1433,  1584,   808,   108,   167,   200,   419,   565,   586,
     611,   627,  1584,    13,  1574,  1673,   276,  1453,  1454,   197,
     249,  1577,  1581,   198,    70,   542,   194,   542,   562,    70,
     542,    13,    43,    94,    98,   253,   331,   395,   517,   559,
    1526,  1527,  1528,   166,   222,   542,  1453,  1584,   542,   287,
     157,   421,   585,   234,   235,   261,  1163,    73,   562,   542,
     623,   946,   432,   636,  1254,  1255,  1256,   446,   533,  1261,
    1262,  1263,  1261,  1658,  1669,  1824,  1717,   808,   813,  1436,
     813,   808,  1438,    37,   219,  1640,  1664,  1817,  1817,  1817,
      96,  1816,  1817,  1817,   156,   814,   808,    48,   156,   156,
     197,   111,   156,   809,  1313,   809,   809,   811,  1669,  1322,
     808,   138,   228,   372,  1748,  1752,  1753,  1760,   812,     7,
     125,   138,   144,   228,   343,  1747,  1748,  1752,  1753,  1754,
    1755,  1756,  1757,   464,   813,  1765,   160,   160,   160,   813,
     502,   608,  1315,   146,   391,   812,  1464,  1465,  1467,  1673,
     249,  1314,  1466,  1313,    48,    13,   140,  1780,  1780,  1780,
    1453,  1448,   231,   293,   428,  1522,  1523,  1519,   195,  1589,
     160,   194,  1297,  1493,  1494,  1515,  1520,  1587,  1591,  1640,
    1669,   332,   569,   595,  1188,  1676,  1192,  1669,  1669,   746,
     784,  1673,  1669,  1190,   383,     7,    26,    84,   144,   237,
     322,   369,   450,   629,   748,  1023,  1024,  1037,  1038,  1039,
    1040,  1046,  1048,  1049,  1050,  1576,     7,    12,    14,    17,
      27,    28,    58,    63,    64,    69,    77,    83,    84,    87,
      96,   111,   125,   129,   137,   138,   144,   152,   158,   169,
     192,   233,   235,   242,   262,   285,   321,   339,   343,   381,
     387,   394,   403,   435,   450,   451,   452,   482,   538,   539,
     540,   541,   546,   563,   566,   589,   602,   636,   639,   724,
     725,   726,   748,   749,  1039,  1088,  1091,  1093,  1094,  1146,
    1218,  1219,  1221,  1222,  1224,  1226,  1227,  1228,  1229,  1231,
    1233,  1669,  1669,   915,   532,  1795,  1796,  1194,  1485,   249,
     813,   235,   263,   400,  1161,  1294,  1295,  1323,  1382,  1383,
    1669,   840,   839,   176,   428,   813,  1267,    59,   176,   180,
     194,   330,   428,  1277,  1278,  1279,    57,   368,   368,   447,
    1774,  1330,  1669,  1669,  1669,   518,   193,  1669,   708,     7,
    1017,  1669,  1676,  1749,  1761,  1745,  1669,  1669,  1087,    11,
     167,   200,   419,   586,   902,  1788,  1796,  1802,  1804,  1805,
    1810,   200,   902,  1787,  1796,  1802,  1805,  1810,  1785,  1323,
    1323,    13,   140,  1380,  1431,  1380,  1380,  1380,   633,  1388,
    1323,  1323,  1383,  1383,  1323,  1323,   140,  1380,  1431,   809,
     372,   809,   809,  1323,  1323,  1323,  1323,  1655,   116,   117,
     118,   119,   120,   223,   224,   225,   226,   334,   336,   337,
     338,   345,   426,   489,   490,   631,   648,   649,  1426,  1427,
    1323,  1382,   112,   115,   575,   578,  1428,   140,  1376,  1323,
    1323,  1323,  1323,  1426,  1323,  1383,  1385,    10,   813,   814,
     140,  1380,  1323,  1323,   140,  1380,  1323,  1323,  1383,  1383,
    1383,  1323,  1383,  1327,  1323,  1323,  1323,  1323,  1323,  1323,
     809,  1323,  1380,  1380,  1323,  1323,   140,  1380,  1323,  1427,
    1427,  1323,    46,   268,   583,  1323,  1323,   809,  1656,  1657,
    1669,  1380,  1380,  1323,  1323,  1323,  1380,  1380,  1383,   809,
     809,  1323,  1323,  1323,  1323,  1323,   812,  1352,  1353,  1641,
    1648,  1669,   809,   809,   809,  1334,   140,  1380,  1313,   809,
     813,   209,   282,   497,  1701,   501,  1323,  1320,  1668,  1669,
    1323,  1323,  1323,   179,   371,   588,   604,  1330,    13,    20,
    1325,  1333,  1327,  1327,   808,  1782,  1334,  1327,  1327,  1327,
    1327,   275,   666,  1326,  1327,  1327,   245,  1327,   245,  1327,
    1327,  1327,  1327,  1327,    33,   249,   275,   441,  1673,  1334,
    1664,  1664,  1323,  1345,  1346,  1347,   802,  1669,  1669,   915,
    1669,   377,  1669,   915,  1673,   708,  1046,  1048,  1490,  1491,
    1492,   915,  1669,  1676,  1744,  1485,  1745,  1669,  1487,   614,
     832,    35,   158,   162,   202,   222,   287,   382,   418,   442,
     467,   511,   542,  1594,  1598,  1599,  1717,    86,   812,   953,
     954,   955,   956,  1669,  1734,   562,  1669,  1764,  1676,  1673,
     200,   419,   565,  1735,  1744,  1738,    21,  1429,  1430,   186,
     362,  1669,  1728,  1669,  1824,  1497,   515,   813,    50,   282,
    1620,    30,  1658,  1718,  1719,  1485,   812,   829,  1663,   287,
     813,   582,  1285,  1286,  1658,  1485,  1658,  1669,  1608,  1606,
    1607,   813,  1664,    56,    66,    76,    90,    91,    92,   106,
     333,   350,   488,   550,   567,   947,   949,  1736,   377,   197,
     377,   486,  1775,  1774,   197,  1304,  1305,  1466,    13,   364,
    1745,  1669,    71,  1145,  1323,  1676,   732,   571,  1666,   273,
     379,   642,   813,  1711,   813,  1709,   657,  1691,   812,   813,
    1669,   209,   282,   497,   652,   671,  1702,  1506,  1669,  1707,
    1696,  1506,  1697,  1698,  1699,  1704,    13,    35,   125,   377,
     483,   708,  1323,  1714,   249,  1582,  1664,  1323,   802,  1087,
     915,   915,   915,  1658,   915,  1676,  1658,   287,   349,   542,
     290,   372,   593,  1455,  1456,  1641,  1669,  1584,  1669,   915,
    1584,  1676,  1577,   915,  1584,   252,   560,   181,   194,  1529,
     813,  1582,  1577,   194,   890,  1577,  1581,  1581,  1577,  1584,
    1584,   379,   642,    88,   813,  1251,   813,   890,   125,  1323,
    1510,  1511,  1512,  1509,  1437,  1439,  1669,    21,   813,   378,
    1820,   558,  1821,   645,   258,   470,  1819,  1669,  1323,   277,
     280,   429,  1057,  1058,  1676,   136,   156,   823,   809,   728,
      48,   786,   455,  1203,  1203,   787,   788,   790,  1673,  1760,
     653,   728,  1760,   636,  1760,   455,   727,  1746,   455,  1746,
    1746,   455,  1746,  1746,    65,   256,   364,   534,   552,   643,
    1741,  1742,  1676,  1759,   636,  1210,  1661,  1663,  1661,  1661,
    1244,   666,   667,   669,  1316,  1317,  1318,   571,  1665,  1665,
    1673,   813,   502,  1323,  1450,  1653,  1300,  1300,  1300,  1453,
     197,  1486,  1659,  1669,  1522,  1236,  1673,    87,   432,  1082,
    1083,  1086,  1093,  1094,  1095,  1146,   916,  1669,  1669,   194,
     368,   315,     7,   916,   808,   110,  1034,  1506,  1507,  1507,
    1034,  1507,  1507,   582,  1507,   813,  1090,   158,    74,    89,
     199,   400,   518,  1103,  1105,  1161,  1235,  1507,    64,    89,
     235,  1235,   400,  1507,  1507,  1235,  1507,   400,   400,  1507,
    1507,  1507,  1507,   582,   136,  1507,   261,   400,   563,    64,
      89,   193,   400,   417,  1161,  1235,   261,  1507,   400,   400,
     563,   136,  1507,  1507,  1507,  1507,  1507,  1235,   400,    48,
    1507,  1507,   400,    21,    74,   160,   582,  1161,  1239,   400,
     400,  1507,   584,  1507,  1507,  1507,   139,   331,  1507,  1507,
     400,  1507,   618,   618,  1507,  1507,  1507,  1091,    71,  1139,
     449,  1056,  1220,   813,   813,   500,   709,  1830,  1197,   491,
     627,  1796,   144,   608,  1274,   125,  1290,  1669,  1289,  1658,
     808,   808,  1295,   809,   813,   457,   458,   459,   460,   461,
     462,   463,   841,   842,   232,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   316,   317,   444,   445,   710,
     711,   731,   733,   734,   735,   736,   737,   740,   750,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   793,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   887,   888,   889,  1658,   609,
    1278,    57,   447,   171,   895,   377,     7,   716,   111,   377,
    1087,  1034,   613,  1018,     7,    19,  1750,  1751,  1752,  1753,
    1754,  1755,  1756,  1757,   125,   813,   898,   591,   591,   614,
    1176,  1177,  1658,   200,  1087,  1087,  1087,  1087,  1087,  1796,
     813,   809,  1380,   809,  1323,   809,   809,   809,  1323,   150,
     633,  1387,    21,    25,   809,   614,   809,   809,   809,   614,
     813,  1383,   809,   802,   809,   813,   813,   809,   809,   809,
     197,   813,   809,   813,  1383,   809,   813,   813,   813,   801,
     813,   809,   809,   808,  1655,  1669,  1380,   809,   809,   809,
    1380,   809,   813,   809,   809,   809,   809,   813,   809,   249,
     809,   813,   813,   809,   813,   813,   809,   809,   809,   813,
     197,   813,  1380,   809,   809,   813,   813,   813,   809,   197,
    1323,   197,  1323,   197,  1323,   197,   809,   813,   809,   809,
     809,   809,   813,    21,   809,   813,   809,   813,   809,   809,
     689,  1358,  1358,   809,   813,  1351,   809,  1351,   813,  1673,
     809,  1358,  1358,  1358,   813,  1380,   809,  1383,   814,   814,
     814,  1673,  1706,  1323,   818,   179,   371,   588,   604,  1782,
      19,  1323,   165,  1327,   808,  1323,  1323,  1327,   808,  1782,
    1334,  1327,  1321,   809,   813,   808,   814,   814,  1658,  1490,
    1487,  1090,  1025,  1026,  1027,  1046,   813,    52,   469,  1237,
     192,  1836,  1485,   812,   833,   834,   287,   287,   287,   287,
     287,   287,   813,  1485,  1600,   115,   575,   578,   812,   948,
     958,  1375,  1646,  1655,  1673,   813,   160,   377,   809,   813,
     582,   802,  1669,  1678,  1743,   636,  1739,  1669,   160,   186,
     201,   214,   266,   267,   294,   362,   416,  1729,  1730,  1432,
    1433,  1658,  1663,  1663,  1292,  1293,  1658,   236,  1430,   813,
    1673,    31,   582,  1614,  1676,  1676,   813,   582,   176,   428,
     612,  1269,  1270,  1271,   400,  1397,  1398,   582,  1610,    13,
    1609,  1609,  1605,   813,   160,   813,  1732,  1676,  1744,  1735,
    1669,   145,   699,   719,   808,   817,  1306,  1307,  1389,  1391,
    1399,  1400,  1401,  1402,  1403,  1404,  1405,  1658,  1782,  1432,
    1304,   582,   582,   582,    35,  1144,  1673,   582,  1506,  1203,
    1203,   432,   453,   495,  1713,  1710,  1708,  1745,  1673,  1677,
     194,   814,   814,   814,   814,   814,  1705,  1323,  1714,   813,
    1703,  1663,   197,  1583,   809,  1669,   376,   813,   614,  1584,
     427,  1453,  1528,  1583,  1584,    60,  1584,  1658,  1658,  1584,
     513,  1256,   607,  1264,  1263,   809,   813,   809,   813,  1782,
    1640,   404,   194,   814,   809,    73,   808,    73,   808,   401,
    1060,   216,   263,   815,  1507,   403,   732,  1666,  1666,  1746,
    1746,   789,   789,  1751,  1754,    13,   364,  1745,   403,   144,
    1673,  1751,  1666,   103,  1666,  1666,   571,   571,   571,    19,
    1740,   319,   320,   324,   325,  1211,  1212,     5,   403,   738,
     739,  1207,  1208,  1209,  1486,   668,  1317,  1139,  1141,  1465,
     341,    22,   131,  1451,  1452,   813,  1486,  1658,  1669,   197,
     813,   814,  1521,  1307,   122,   188,   219,   290,   372,   593,
    1459,  1462,  1463,   379,  1083,    84,    77,    93,   265,   342,
     368,   430,   532,   918,   920,    60,   477,   263,   597,  1036,
     108,   221,   393,   403,   410,   514,   611,   900,   901,  1663,
    1022,  1023,   219,   290,   372,   593,  1051,  1461,  1462,  1660,
    1663,  1022,  1051,  1051,  1669,  1663,  1837,  1024,  1507,  1184,
    1669,  1161,  1162,  1281,  1162,    64,   193,   417,   603,  1104,
    1160,  1175,  1184,  1669,   808,  1669,   125,  1232,  1669,  1669,
    1669,  1669,  1669,  1281,   122,   188,   290,   372,   593,  1460,
    1460,  1669,   122,   188,   219,   290,   372,   593,  1458,    13,
    1225,  1425,  1669,  1281,  1663,  1663,  1663,  1663,  1139,  1507,
    1458,  1225,  1669,  1669,   263,  1425,   263,  1669,  1669,  1673,
    1669,  1225,  1507,   186,   266,   368,  1097,  1460,   125,  1234,
    1669,  1460,  1460,  1669,  1281,  1446,  1447,  1656,   125,  1092,
    1458,  1663,  1281,  1669,  1669,  1658,  1281,  1281,    80,    82,
     125,   148,   187,   439,  1096,  1092,  1092,   125,  1458,  1669,
    1458,  1225,   808,   371,  1673,  1837,  1837,  1507,  1507,   402,
       7,   144,  1088,  1228,  1229,  1222,  1226,  1229,   717,   718,
    1035,  1507,   706,  1834,   377,   910,  1214,   127,   248,  1658,
     672,   672,  1225,   417,  1421,  1422,  1423,  1669,   249,  1323,
     160,   160,   160,   160,   160,   160,   160,   813,   890,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   813,
     890,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,  1084,  1085,
    1086,  1658,  1036,   708,   641,  1658,  1461,   286,    77,   177,
     184,   363,  1019,  1020,  1021,  1037,  1038,  1040,  1041,  1044,
    1045,  1046,  1047,  1048,  1049,  1050,  1034,  1751,  1750,   791,
    1758,   653,  1749,  1765,  1507,    47,   216,   485,  1179,  1179,
     377,    21,   231,   275,   455,   808,  1052,  1053,  1054,  1055,
    1056,  1089,  1091,  1502,  1623,  1087,   915,   915,  1669,   915,
     915,   245,  1323,   809,  1357,  1358,  1357,  1357,  1357,   574,
    1323,  1323,   154,    35,    62,   112,   115,   123,   142,   189,
     205,   260,   279,   346,   347,   348,   353,   356,   408,   409,
     434,   508,   578,   606,   649,  1114,  1118,  1381,   282,   578,
    1140,  1140,  1381,   809,  1357,   809,   245,   245,  1323,  1323,
    1323,   387,  1378,  1323,  1323,  1323,  1323,  1323,  1327,   809,
    1357,   809,  1357,  1323,  1323,  1323,  1323,  1323,  1323,  1383,
    1357,  1357,   245,  1323,  1323,  1323,   809,  1357,  1323,  1323,
    1323,  1323,   197,  1323,   197,  1323,   197,  1323,  1323,  1357,
    1357,  1323,    35,    62,  1458,  1380,  1357,   808,  1359,  1360,
    1361,  1669,   231,   693,  1355,  1352,   809,  1355,   809,  1334,
    1358,   596,  1639,   809,  1357,   809,   814,  1325,   809,   813,
    1334,  1334,  1426,  1426,    19,  1323,   165,  1347,  1382,   802,
    1669,  1669,  1230,  1231,  1233,  1461,  1492,  1090,  1676,  1237,
    1673,   813,   890,  1599,  1595,  1673,   956,   959,   960,   955,
     373,   484,   957,  1735,  1669,  1744,   814,   814,   582,   654,
    1432,   808,  1453,  1397,   813,  1294,  1295,  1665,   293,   432,
     642,  1720,  1719,  1323,  1663,   582,  1286,  1658,  1271,   808,
     500,   619,   620,   808,  1498,  1499,  1501,  1502,  1503,  1461,
     890,   890,   949,   948,   210,   377,   197,   231,  1488,  1743,
     808,  1782,  1307,  1391,  1400,  1401,  1402,  1403,   730,   813,
     100,   238,   258,   271,   354,   476,   548,  1392,  1393,  1394,
    1397,  1430,   212,  1443,  1432,  1745,  1745,  1745,   732,  1666,
    1746,  1746,    78,   594,   432,  1459,  1693,  1694,  1506,  1698,
    1460,  1453,   163,   630,  1456,  1456,  1744,   372,  1453,  1661,
    1577,  1577,   523,   524,   525,   889,  1265,   611,  1257,  1512,
    1669,   813,   335,   156,   808,  1327,   808,  1327,  1459,   554,
    1061,   808,    12,  1059,  1458,  1665,   403,   500,     7,  1760,
      21,    48,   343,  1746,   403,  1746,  1746,  1741,  1458,  1458,
    1458,  1458,  1212,   285,   605,   174,   464,   703,   704,   696,
    1459,  1459,    77,   747,  1206,  1209,  1140,    73,  1624,  1653,
     614,  1430,   814,  1307,  1659,   802,  1669,   500,  1507,  1507,
    1663,   532,   532,   532,   532,   532,   491,  1669,   377,  1663,
    1031,  1032,  1033,  1037,  1046,  1048,  1663,  1663,  1663,  1663,
    1458,  1663,  1663,   809,   813,  1673,  1184,   401,   808,  1184,
     808,   263,   263,  1162,   366,  1106,  1107,  1108,  1175,   808,
     614,   591,  1099,  1100,  1101,  1103,  1669,    34,    35,    40,
      42,    44,    45,    62,   112,   115,   123,   159,   187,   189,
     205,   206,   247,   260,   279,   288,   289,   291,   327,   328,
     329,   346,   347,   348,   353,   356,   374,   375,   408,   409,
     496,   500,   512,   572,   575,   578,   579,   580,   581,   621,
     622,   649,  1109,  1112,  1113,  1114,  1115,  1116,  1117,  1118,
    1120,  1108,  1108,   655,   656,  1178,   144,   500,  1225,  1669,
    1277,   813,  1459,   125,  1140,  1663,   563,  1669,  1237,   636,
     563,  1663,  1109,  1225,   813,  1451,  1225,   582,   582,  1425,
    1225,  1600,  1144,  1140,  1025,   372,  1831,  1832,  1507,   137,
     152,  1835,    81,   487,   450,  1215,  1438,   377,   377,   809,
     809,   813,  1290,   808,   843,   843,   808,   848,   848,   808,
     851,   851,   808,   846,   842,   808,  1661,  1458,  1661,   371,
     883,  1675,  1458,   377,   741,   742,   884,  1459,   282,   571,
     742,   885,  1459,   880,  1458,  1661,  1661,  1661,  1661,  1458,
    1458,  1458,  1458,  1458,  1661,  1661,  1661,  1661,  1661,  1661,
    1458,  1661,   371,   886,  1661,  1661,  1661,  1458,  1647,  1663,
    1458,  1661,  1460,  1086,   808,   438,   598,  1028,  1029,  1030,
    1037,  1042,  1043,  1044,  1045,  1046,  1048,  1461,  1673,   808,
     897,   212,  1507,  1507,  1507,  1507,  1090,  1025,    19,   785,
    1745,  1210,   611,   708,  1829,  1658,  1502,  1658,   275,  1099,
    1054,  1053,  1090,  1055,  1669,   903,   808,   472,  1811,     9,
      31,  1015,  1323,   809,  1357,  1323,   574,   808,  1129,  1130,
    1130,   808,  1124,   808,  1122,  1123,  1129,   413,  1119,  1121,
    1129,    62,   247,  1124,   247,  1130,   720,  1335,    21,   751,
     809,   809,   809,  1357,  1357,  1323,  1323,   809,   809,   813,
     809,    48,   494,  1377,   813,   813,   809,   813,   809,   249,
    1342,  1343,  1357,  1357,   809,   809,   809,   809,   813,   809,
     809,  1323,   809,   194,   809,   809,   813,  1357,   809,   813,
     813,   809,  1323,   809,  1323,   809,  1323,   809,   809,   809,
     808,  1151,  1151,   813,   809,  1360,  1362,  1363,   687,   687,
    1358,   813,  1354,  1355,  1358,  1355,   809,   743,  1338,  1357,
    1669,  1383,   809,  1325,   809,   813,  1334,   809,  1233,  1231,
    1027,   834,   194,   636,  1596,   160,   813,  1743,   636,  1767,
     802,   802,  1669,  1744,   384,  1453,  1511,   500,  1498,  1499,
    1293,  1658,  1295,   231,  1296,  1622,  1623,   642,   282,  1676,
    1424,  1425,  1517,  1518,  1656,   809,  1500,  1651,  1652,  1656,
    1669,   808,  1504,  1508,   160,   384,  1735,  1744,   604,   197,
    1323,  1430,   813,   809,   809,   809,   809,   809,  1389,  1390,
    1391,  1399,  1389,   258,   258,   390,  1396,   238,   271,   476,
    1395,  1396,  1399,  1389,  1389,  1430,  1438,    48,   217,  1434,
    1443,  1203,  1203,  1090,  1714,   890,  1432,  1584,   160,   160,
     813,   160,   403,  1258,  1458,  1063,  1669,   809,  1063,   809,
      48,   808,  1065,  1327,   160,   808,   228,   792,  1760,   219,
    1663,  1667,   732,  1666,  1760,   125,   245,   360,   103,   125,
    1459,   245,  1664,  1664,   153,   164,   385,   570,  1625,  1626,
     278,  1627,  1307,  1397,  1669,  1432,   814,  1521,  1517,  1092,
    1663,   111,   111,   127,   248,   368,   162,  1090,   901,   808,
    1459,   400,  1066,  1067,   808,  1323,  1184,   729,   808,   808,
    1181,  1182,  1183,  1669,  1179,  1179,   809,   813,  1109,  1129,
    1129,  1130,    23,    35,    49,   600,   625,  1129,  1139,  1147,
    1148,  1149,  1124,   808,  1149,    62,   621,  1115,  1149,  1149,
      62,   622,   622,   625,   808,  1130,  1124,  1124,  1149,  1129,
    1130,   440,  1102,  1154,    27,    71,    75,    77,   125,   366,
     371,   377,   417,   496,   546,   603,   705,   748,   749,  1105,
    1108,  1132,  1133,  1134,  1145,  1153,  1178,  1330,    35,  1129,
    1150,  1129,  1129,  1130,   808,  1123,  1131,  1122,   125,   125,
    1178,  1109,  1669,  1145,  1145,   565,     9,   186,  1238,  1447,
    1669,  1669,   246,  1269,   809,   800,  1090,   372,   800,  1833,
    1836,   366,   415,    25,   168,   904,   582,   137,   152,   906,
    1797,  1425,  1425,  1422,   809,   844,   845,  1669,   809,   849,
     850,  1669,  1678,   809,   852,   853,  1661,  1662,   808,   809,
     847,   881,   882,  1458,  1182,  1507,  1507,  1090,   897,   383,
    1182,   352,   713,   714,   715,  1669,  1663,  1051,  1051,  1459,
    1021,  1751,   228,  1752,  1753,  1755,  1207,  1830,   808,  1658,
     809,  1091,   472,   377,  1806,   123,   247,   434,   549,  1098,
     808,   130,   241,   608,  1016,  1426,  1323,   122,   290,   372,
     593,  1149,   372,   372,   809,  1381,   245,  1650,  1426,  1426,
    1323,  1379,  1653,  1640,   809,  1323,  1323,  1383,    44,   354,
     809,   636,  1344,  1323,  1426,  1323,  1323,  1323,  1323,   809,
     809,   809,  1459,   809,   809,  1458,  1357,   809,   400,  1364,
    1323,  1358,  1358,   197,  1356,  1381,   125,   162,   371,  1410,
    1412,  1413,  1414,   809,  1383,  1597,   432,    56,    66,    76,
      90,    91,    92,   106,   333,   350,   471,   488,   550,   567,
     961,   960,   582,   210,   636,  1766,   809,  1517,    21,  1513,
     377,  1514,  1296,   269,   246,   809,   813,  1506,  1501,  1502,
     809,   813,   814,  1510,   813,   948,   197,  1743,  1488,   611,
    1744,   813,  1438,  1389,   818,   258,  1396,  1396,   258,   258,
     377,   614,   377,   614,   192,   231,   613,  1416,  1417,  1418,
    1419,  1420,  1323,  1444,  1654,  1323,   697,  1440,  1434,  1746,
    1746,  1459,  1663,  1663,   889,  1663,   160,   126,  1259,   809,
     813,   809,  1058,  1066,   809,  1459,  1062,  1063,    48,    21,
    1751,   403,  1751,  1459,   125,   722,   125,  1459,    48,    48,
     153,    48,  1626,   536,   570,  1628,  1629,  1432,  1432,  1432,
     477,  1033,  1182,  1669,   809,   813,  1182,   809,   808,  1182,
    1323,   809,   813,   808,  1451,  1100,  1102,    35,    23,   600,
    1139,    35,  1149,  1140,  1185,  1640,  1149,   625,  1185,  1149,
     508,   606,   650,  1126,  1127,  1128,  1658,  1238,  1144,   125,
     148,   187,  1135,  1663,   115,   575,   578,   800,   801,   808,
    1137,  1138,  1642,  1643,  1644,  1645,   608,   125,   125,   139,
     331,  1136,   263,  1461,  1507,  1507,  1104,    71,  1134,   203,
    1110,   263,   371,   723,  1150,  1149,  1150,  1126,   372,  1126,
    1126,   808,  1643,  1238,  1658,  1669,   808,   372,  1832,   372,
     415,  1323,  1323,   377,   910,   915,   377,    77,   911,    21,
     614,   636,  1273,   809,   813,   809,   813,   814,   809,   813,
     845,   809,   813,   809,   813,   809,  1051,  1051,  1030,   808,
     809,  1661,  1661,  1661,  1661,   636,  1206,  1834,  1182,   809,
    1052,  1098,   487,   923,   924,   925,  1669,   515,  1812,   377,
     809,   809,   809,   809,   809,   809,   813,  1335,  1664,   809,
     809,   809,   813,  1357,   809,   813,   809,   341,   265,   427,
     809,   809,   809,   809,   809,   809,  1152,   813,    48,   387,
    1365,   186,   266,  1355,  1642,   809,  1413,  1414,   377,   809,
     175,   285,  1744,   384,   210,    21,  1769,  1432,  1513,  1669,
    1514,   147,   565,  1518,  1512,  1501,  1502,  1651,  1669,   809,
    1508,  1744,   197,  1488,  1639,   809,   258,   258,  1323,   808,
    1323,   808,  1161,  1161,  1417,   638,   813,  1445,  1360,  1441,
    1442,  1440,  1663,   160,   405,  1260,  1669,   216,   263,   809,
     809,  1663,  1667,   120,   120,  1640,  1640,    48,  1640,    48,
      48,  1629,  1448,  1448,   377,   809,   619,  1068,  1067,   809,
    1180,  1181,   809,   809,    77,   262,   748,   749,  1171,  1172,
    1173,  1174,  1177,  1178,  1183,   372,  1140,  1150,   809,   813,
     809,  1128,   808,  1155,  1647,  1647,  1323,  1137,   620,  1837,
    1837,  1144,    15,    21,  1323,  1223,  1224,  1066,  1426,   510,
    1663,   143,  1216,  1502,  1798,   111,   372,   845,   850,  1669,
     853,   813,   808,   882,   636,  1165,  1166,  1167,  1174,   900,
    1168,  1169,  1170,  1174,   228,  1673,  1835,   809,   515,   904,
     809,   813,  1112,  1663,   239,   249,   392,   926,   927,   928,
     929,  1658,   372,   809,    21,  1653,  1323,   341,   173,   809,
    1458,  1444,    48,   429,   481,   681,  1366,  1372,  1358,   377,
     162,   698,  1766,   384,  1676,  1453,  1514,  1438,   263,  1658,
    1488,  1744,    73,  1406,  1424,  1424,   194,  1415,  1415,  1654,
      21,   813,  1663,   160,  1252,   808,  1059,   111,   464,  1827,
    1828,  1640,  1640,  1640,   276,  1457,  1457,   162,  1165,   249,
     272,    77,   111,   235,   321,   339,   363,   563,  1079,  1080,
    1081,  1576,  1168,   809,   813,  1171,  1451,  1663,  1507,  1507,
    1507,  1173,   809,  1149,  1640,  1149,  1156,  1669,   318,  1157,
     809,   808,   809,   809,   905,   912,   913,   636,  1799,  1664,
     673,   845,   845,   397,  1230,  1167,   809,  1230,  1170,    48,
    1171,  1663,   909,   910,  1807,   925,  1145,   809,   813,  1669,
     194,   809,   112,   809,   809,  1450,    33,   103,   245,   696,
    1367,  1368,  1369,  1641,  1647,  1769,   636,  1768,   608,  1397,
    1488,   808,   809,   809,   809,   212,   258,   387,   808,   808,
    1361,  1442,  1663,   890,  1327,   808,   136,   368,   534,  1456,
     808,  1070,  1072,   573,  1507,   136,   136,  1507,  1507,  1507,
    1507,   808,  1076,  1081,   158,  1154,  1181,  1458,  1837,  1837,
    1451,   809,   813,   198,   399,   509,   377,  1158,  1323,   537,
     907,    54,    68,   182,   230,   257,   270,   380,   473,   914,
     965,   967,   968,   969,   971,   972,   973,   974,   975,   976,
     978,   986,   987,   990,  1001,  1004,  1006,  1007,  1660,  1671,
    1682,  1683,  1684,  1687,    53,    64,   282,   809,   813,  1660,
    1461,  1230,   906,   472,  1813,   928,  1112,   149,  1124,   245,
     696,  1368,  1370,  1641,  1647,   483,  1323,   691,   678,  1371,
     691,   691,   653,  1517,  1141,   700,  1407,  1408,  1669,  1430,
      48,    48,  1421,  1423,   809,  1063,  1507,   534,   808,  1071,
    1072,  1073,   326,  1069,  1072,  1663,  1507,  1507,  1461,  1461,
    1459,  1669,   554,  1077,  1078,  1507,  1669,   130,   608,   809,
    1323,   155,   908,   988,   991,  1669,   197,   362,   979,   966,
    1671,  1671,  1669,   970,   825,   292,   454,   635,  1010,    32,
    1008,   815,    64,   384,    64,   845,   911,  1112,   917,  1145,
     483,   809,  1323,   680,    19,   680,   680,  1426,   103,   212,
     368,   695,    13,   125,   364,  1745,   481,  1630,   702,   809,
     813,   194,  1112,   809,   809,   553,  1064,   809,  1665,   809,
     813,   326,  1074,  1075,  1327,  1663,  1663,  1673,   809,   813,
    1673,    52,   368,   469,   500,  1159,  1159,   547,   628,  1111,
    1323,  1323,   633,   993,   997,   197,  1669,   981,   982,  1323,
     931,   964,   965,   967,   969,   971,   973,   974,   975,   976,
     978,   986,  1001,  1004,  1006,   931,  1011,  1009,  1002,  1005,
     384,   384,   809,   143,  1145,   134,   918,   919,  1330,  1814,
     191,   412,  1800,  1801,  1426,  1370,   691,   483,   688,  1691,
     228,  1624,  1639,  1408,   701,  1145,  1459,  1064,  1828,  1072,
     809,   813,  1079,  1078,     6,   125,   371,   377,   377,  1132,
     989,   998,   150,   997,  1000,   246,   154,  1323,   154,   964,
     811,   607,  1323,   932,  1010,  1008,   912,  1808,   134,   964,
    1673,  1803,   680,    48,  1627,  1406,   171,  1409,  1075,   608,
     130,   633,   992,   994,  1323,   931,   154,   977,   230,   983,
     292,   811,  1013,  1012,   124,   930,   933,  1003,  1671,  1003,
     917,   964,  1640,   231,  1631,   702,  1159,  1159,   995,   994,
    1000,   999,    54,   980,  1669,   574,  1323,   143,    95,   172,
     936,   962,  1669,   154,   964,   811,  1809,   372,   808,  1633,
    1639,  1323,   154,   574,   813,   931,  1014,   931,   215,   813,
    1112,    86,   105,   811,   964,   278,   481,  1632,   809,   812,
    1634,  1635,  1656,   500,  1636,  1410,  1411,  1413,   996,    54,
     931,  1669,   984,   154,   154,   194,  1669,  1145,   194,   194,
    1673,   809,   813,  1637,  1638,  1656,  1412,  1414,   574,   150,
     151,   985,   454,   635,   934,   125,   963,   939,   940,  1458,
     935,  1635,   813,  1506,   377,   931,   931,   981,   520,   522,
     937,   938,   939,   942,  1330,  1669,  1323,  1297,  1638,  1512,
     813,   964,   196,   938
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   819,   820,   820,   820,   820,   820,   820,   821,   822,
     821,   821,   823,   823,   824,   824,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   825,   825,   825,   825,   825,   825,   825,   825,   825,
     825,   826,   827,   827,   828,   829,   829,   831,   830,   832,
     832,   833,   833,   834,   836,   835,   837,   837,   839,   838,
     840,   838,   841,   841,   842,   842,   842,   842,   842,   842,
     842,   843,   843,   844,   844,   845,   846,   846,   847,   847,
     848,   848,   849,   849,   850,   851,   851,   852,   852,   853,
     854,   854,   855,   855,   856,   856,   857,   857,   858,   858,
     859,   859,   860,   860,   861,   861,   862,   862,   863,   863,
     864,   864,   865,   865,   866,   866,   867,   867,   868,   868,
     869,   869,   870,   870,   871,   871,   872,   872,   873,   873,
     874,   874,   875,   875,   876,   876,   877,   877,   878,   878,
     879,   879,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   881,   881,   881,   882,
     883,   883,   884,   884,   884,   885,   885,   885,   886,   886,
     887,   887,   888,   888,   889,   889,   889,   889,   890,   890,
     891,   891,   891,   891,   892,   893,   895,   894,   894,   894,
     894,   894,   894,   894,   896,   896,   897,   897,   897,   897,
     897,   898,   898,   899,   899,   899,   900,   900,   901,   901,
     901,   901,   901,   901,   901,   903,   902,   905,   904,   904,
     906,   906,   906,   906,   907,   907,   908,   908,   909,   909,
     910,   910,   911,   911,   913,   912,   914,   914,   914,   914,
     914,   914,   914,   914,   914,   914,   914,   914,   914,   915,
     915,   916,   916,   917,   917,   918,   918,   918,   918,   918,
     918,   918,   919,   919,   919,   920,   920,   921,   922,   922,
     923,   923,   924,   924,   925,   926,   926,   927,   927,   928,
     929,   929,   929,   929,   930,   930,   931,   931,   932,   932,
     933,   933,   934,   933,   935,   933,   936,   936,   937,   937,
     938,   939,   939,   940,   941,   941,   942,   942,   942,   942,
     942,   943,   944,   944,   945,   945,   946,   946,   947,   947,
     948,   948,   948,   949,   949,   949,   949,   949,   949,   949,
     949,   949,   949,   949,   949,   950,   951,   952,   952,   952,
     953,   953,   954,   954,   955,   956,   956,   957,   957,   958,
     959,   959,   960,   961,   961,   961,   961,   961,   961,   961,
     961,   961,   961,   961,   961,   961,   962,   962,   963,   963,
     964,   964,   964,   964,   964,   964,   964,   964,   964,   964,
     964,   964,   964,   966,   965,   968,   967,   970,   969,   972,
     971,   973,   974,   975,   977,   976,   978,   979,   979,   979,
     980,   980,   982,   983,   984,   981,   985,   985,   985,   986,
     986,   988,   989,   987,   991,   990,   992,   992,   993,   993,
     995,   996,   994,   998,   999,   997,  1000,  1000,  1002,  1001,
    1003,  1003,  1005,  1004,  1007,  1006,  1009,  1008,  1010,  1011,
    1012,  1010,  1013,  1014,  1010,  1015,  1015,  1016,  1016,  1016,
    1017,  1017,  1018,  1018,  1019,  1019,  1020,  1020,  1021,  1021,
    1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,  1022,
    1022,  1023,  1023,  1024,  1024,  1024,  1024,  1024,  1024,  1024,
    1025,  1025,  1026,  1026,  1027,  1028,  1028,  1029,  1029,  1030,
    1030,  1030,  1030,  1030,  1030,  1030,  1031,  1031,  1032,  1032,
    1033,  1033,  1033,  1034,  1035,  1035,  1036,  1037,  1038,  1039,
    1040,  1041,  1042,  1043,  1044,  1045,  1046,  1047,  1048,  1048,
    1049,  1050,  1051,  1051,  1052,  1052,  1053,  1053,  1054,  1054,
    1054,  1055,  1055,  1056,  1057,  1057,  1057,  1057,  1057,  1057,
    1058,  1058,  1059,  1059,  1060,  1060,  1061,  1061,  1061,  1062,
    1062,  1063,  1063,  1064,  1064,  1065,  1065,  1066,  1066,  1067,
    1068,  1068,  1068,  1069,  1069,  1070,  1070,  1071,  1071,  1073,
    1072,  1074,  1074,  1075,  1075,  1076,  1076,  1077,  1077,  1078,
    1079,  1079,  1080,  1080,  1081,  1081,  1081,  1081,  1081,  1081,
    1081,  1081,  1082,  1082,  1083,  1083,  1084,  1084,  1085,  1085,
    1086,  1086,  1086,  1087,  1087,  1088,  1088,  1089,  1089,  1090,
    1090,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1091,  1092,  1092,  1093,  1094,
    1095,  1096,  1096,  1096,  1096,  1096,  1096,  1097,  1097,  1097,
    1098,  1098,  1098,  1098,  1099,  1099,  1100,  1100,  1101,  1102,
    1102,  1103,  1103,  1103,  1103,  1103,  1103,  1104,  1105,  1105,
    1106,  1106,  1107,  1107,  1108,  1109,  1109,  1110,  1110,  1111,
    1111,  1111,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1113,
    1113,  1113,  1113,  1113,  1113,  1113,  1113,  1114,  1114,  1115,
    1115,  1116,  1116,  1116,  1116,  1116,  1117,  1117,  1117,  1117,
    1117,  1118,  1118,  1119,  1119,  1120,  1120,  1120,  1120,  1121,
    1121,  1122,  1122,  1122,  1123,  1124,  1124,  1125,  1125,  1125,
    1126,  1126,  1127,  1127,  1128,  1128,  1128,  1129,  1129,  1129,
    1129,  1130,  1130,  1131,  1131,  1132,  1132,  1133,  1133,  1134,
    1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,
    1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,
    1135,  1135,  1135,  1136,  1136,  1136,  1137,  1138,  1138,  1139,
    1139,  1140,  1140,  1141,  1141,  1142,  1142,  1143,  1143,  1144,
    1144,  1145,  1145,  1146,  1146,  1147,  1147,  1147,  1148,  1148,
    1148,  1149,  1149,  1149,  1149,  1149,  1149,  1149,  1150,  1150,
    1152,  1151,  1153,  1153,  1154,  1155,  1155,  1156,  1156,  1157,
    1157,  1157,  1157,  1158,  1158,  1158,  1158,  1158,  1159,  1159,
    1159,  1159,  1159,  1160,  1160,  1161,  1161,  1162,  1162,  1163,
    1163,  1163,  1164,  1164,  1165,  1165,  1166,  1166,  1167,  1167,
    1168,  1168,  1169,  1169,  1170,  1171,  1171,  1172,  1172,  1173,
    1173,  1174,  1174,  1174,  1174,  1174,  1175,  1175,  1175,  1176,
    1176,  1177,  1177,  1178,  1178,  1179,  1179,  1179,  1180,  1180,
    1181,  1181,  1182,  1182,  1183,  1183,  1184,  1184,  1185,  1185,
    1186,  1186,  1188,  1187,  1190,  1189,  1192,  1191,  1194,  1193,
    1195,  1193,  1197,  1196,  1198,  1199,  1199,  1199,  1199,  1200,
    1201,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1203,  1203,  1204,  1205,  1206,  1206,  1206,  1207,  1207,  1208,
    1208,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,
    1209,  1209,  1209,  1209,  1209,  1209,  1209,  1210,  1210,  1211,
    1211,  1212,  1212,  1212,  1212,  1213,  1214,  1214,  1214,  1214,
    1215,  1215,  1216,  1216,  1217,  1217,  1218,  1218,  1219,  1219,
    1220,  1220,  1221,  1221,  1221,  1221,  1222,  1222,  1222,  1222,
    1222,  1222,  1222,  1222,  1222,  1222,  1222,  1222,  1222,  1222,
    1222,  1222,  1222,  1222,  1222,  1222,  1223,  1223,  1224,  1224,
    1225,  1225,  1226,  1226,  1226,  1226,  1226,  1227,  1227,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1229,  1229,  1229,  1230,
    1230,  1230,  1230,  1230,  1231,  1232,  1232,  1233,  1234,  1234,
    1235,  1235,  1236,  1236,  1237,  1237,  1237,  1238,  1238,  1238,
    1239,  1239,  1239,  1239,  1240,  1240,  1241,  1242,  1242,  1243,
    1243,  1244,  1244,  1244,  1245,  1246,  1247,  1248,  1248,  1249,
    1251,  1252,  1250,  1253,  1254,  1254,  1255,  1255,  1256,  1256,
    1256,  1257,  1257,  1258,  1258,  1259,  1259,  1260,  1260,  1261,
    1261,  1262,  1262,  1263,  1263,  1264,  1264,  1265,  1265,  1265,
    1265,  1265,  1266,  1267,  1267,  1267,  1268,  1269,  1269,  1270,
    1270,  1271,  1271,  1271,  1272,  1273,  1273,  1273,  1274,  1274,
    1274,  1275,  1276,  1277,  1277,  1278,  1278,  1279,  1279,  1279,
    1279,  1279,  1279,  1280,  1281,  1281,  1281,  1283,  1282,  1282,
    1284,  1284,  1285,  1285,  1286,  1287,  1287,  1288,  1288,  1289,
    1290,  1290,  1291,  1291,  1292,  1292,  1293,  1294,  1295,  1295,
    1296,  1296,  1297,  1297,  1297,  1298,  1298,  1298,  1298,  1299,
    1299,  1300,  1300,  1300,  1300,  1300,  1301,  1301,  1302,  1302,
    1302,  1303,  1303,  1304,  1304,  1305,  1306,  1306,  1307,  1307,
    1308,  1309,  1310,  1310,  1311,  1311,  1312,  1312,  1313,  1313,
    1314,  1314,  1314,  1315,  1315,  1316,  1317,  1317,  1318,  1318,
    1319,  1319,  1319,  1320,  1320,  1321,  1321,  1321,  1321,  1321,
    1322,  1322,  1323,  1323,  1323,  1323,  1323,  1323,  1323,  1323,
    1323,  1323,  1323,  1324,  1324,  1324,  1324,  1324,  1325,  1325,
    1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,
    1325,  1325,  1325,  1325,  1325,  1326,  1326,  1327,  1327,  1327,
    1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,
    1327,  1327,  1328,  1328,  1329,  1329,  1330,  1330,  1331,  1331,
    1332,  1332,  1332,  1332,  1332,  1332,  1332,  1333,  1333,  1334,
    1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,  1334,  1334,  1334,  1335,  1335,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1337,  1337,  1337,  1337,  1337,
    1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,
    1337,  1337,  1337,  1337,  1337,  1337,  1337,  1338,  1338,  1339,
    1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,
    1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,
    1339,  1339,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1341,
    1341,  1342,  1342,  1343,  1343,  1344,  1344,  1345,  1345,  1346,
    1346,  1347,  1348,  1348,  1349,  1349,  1349,  1349,  1349,  1349,
    1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,
    1349,  1349,  1349,  1349,  1349,  1349,  1349,  1350,  1350,  1350,
    1350,  1350,  1350,  1350,  1350,  1350,  1350,  1350,  1351,  1351,
    1352,  1352,  1353,  1353,  1353,  1354,  1354,  1355,  1355,  1355,
    1356,  1356,  1356,  1357,  1357,  1358,  1359,  1359,  1360,  1361,
    1362,  1363,  1363,  1364,  1364,  1365,  1365,  1366,  1366,  1367,
    1367,  1368,  1368,  1368,  1368,  1368,  1369,  1370,  1370,  1370,
    1370,  1370,  1371,  1371,  1371,  1371,  1371,  1372,  1372,  1372,
    1373,  1374,  1375,  1375,  1376,  1376,  1377,  1377,  1378,  1378,
    1379,  1379,  1380,  1381,  1381,  1381,  1381,  1381,  1381,  1381,
    1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,
    1381,  1381,  1381,  1381,  1381,  1382,  1382,  1383,  1383,  1384,
    1384,  1385,  1385,  1386,  1386,  1387,  1387,  1388,  1388,  1389,
    1389,  1389,  1390,  1390,  1391,  1391,  1391,  1391,  1391,  1391,
    1392,  1392,  1392,  1393,  1393,  1393,  1393,  1394,  1394,  1395,
    1395,  1396,  1396,  1397,  1397,  1398,  1399,  1399,  1399,  1399,
    1399,  1399,  1400,  1400,  1401,  1401,  1402,  1403,  1403,  1404,
    1404,  1405,  1406,  1407,  1407,  1408,  1408,  1408,  1409,  1409,
    1410,  1410,  1410,  1410,  1411,  1411,  1412,  1413,  1414,  1414,
    1414,  1415,  1415,  1415,  1415,  1416,  1416,  1417,  1417,  1418,
    1418,  1419,  1419,  1420,  1421,  1421,  1422,  1422,  1423,  1423,
    1424,  1425,  1425,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1427,  1427,  1427,  1427,  1427,
    1427,  1427,  1427,  1427,  1428,  1428,  1428,  1428,  1429,  1429,
    1430,  1430,  1431,  1431,  1432,  1432,  1433,  1434,  1434,  1435,
    1435,  1436,  1436,  1437,  1438,  1438,  1439,  1439,  1440,  1440,
    1441,  1441,  1442,  1443,  1443,  1444,  1444,  1445,  1445,  1446,
    1446,  1447,  1448,  1448,  1449,  1450,  1450,  1451,  1451,  1452,
    1452,  1453,  1453,  1454,  1455,  1455,  1455,  1456,  1456,  1456,
    1456,  1456,  1457,  1457,  1458,  1458,  1458,  1458,  1458,  1458,
    1459,  1459,  1459,  1459,  1459,  1460,  1460,  1460,  1460,  1460,
    1461,  1461,  1461,  1461,  1461,  1462,  1463,  1463,  1464,  1464,
    1465,  1465,  1466,  1467,  1467,  1467,  1468,  1469,  1470,  1471,
    1472,  1472,  1473,  1474,  1475,  1476,  1477,  1478,  1479,  1480,
    1481,  1482,  1483,  1484,  1485,  1485,  1486,  1486,  1487,  1487,
    1488,  1488,  1489,  1489,  1490,  1490,  1491,  1491,  1492,  1492,
    1493,  1493,  1493,  1494,  1494,  1494,  1495,  1495,  1495,  1495,
    1496,  1496,  1497,  1497,  1498,  1498,  1498,  1499,  1499,  1499,
    1500,  1500,  1501,  1502,  1502,  1503,  1503,  1504,  1504,  1505,
    1505,  1506,  1506,  1507,  1507,  1508,  1509,  1510,  1510,  1511,
    1511,  1512,  1512,  1513,  1513,  1514,  1514,  1515,  1516,  1516,
    1517,  1517,  1518,  1519,  1519,  1520,  1520,  1520,  1521,  1521,
    1522,  1522,  1523,  1523,  1523,  1524,  1525,  1525,  1526,  1526,
    1527,  1527,  1528,  1528,  1528,  1528,  1528,  1528,  1528,  1528,
    1528,  1529,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,
    1537,  1538,  1539,  1540,  1541,  1542,  1542,  1543,  1544,  1545,
    1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,
    1556,  1557,  1558,  1559,  1559,  1559,  1560,  1561,  1562,  1563,
    1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,
    1574,  1574,  1575,  1575,  1576,  1576,  1577,  1577,  1578,  1578,
    1579,  1579,  1580,  1580,  1580,  1580,  1581,  1581,  1582,  1582,
    1583,  1583,  1584,  1584,  1584,  1585,  1586,  1587,  1587,  1587,
    1587,  1587,  1587,  1588,  1588,  1589,  1589,  1590,  1590,  1591,
    1591,  1591,  1593,  1592,  1595,  1594,  1594,  1596,  1596,  1597,
    1596,  1598,  1598,  1599,  1599,  1599,  1599,  1599,  1599,  1599,
    1599,  1599,  1599,  1599,  1599,  1600,  1600,  1602,  1601,  1601,
    1603,  1603,  1604,  1604,  1606,  1605,  1607,  1605,  1608,  1605,
    1609,  1609,  1610,  1610,  1612,  1611,  1613,  1614,  1614,  1615,
    1616,  1616,  1616,  1617,  1618,  1619,  1619,  1620,  1620,  1621,
    1621,  1621,  1622,  1622,  1623,  1623,  1624,  1624,  1625,  1625,
    1626,  1626,  1626,  1626,  1627,  1627,  1628,  1628,  1629,  1629,
    1630,  1630,  1631,  1631,  1632,  1632,  1633,  1633,  1633,  1634,
    1634,  1635,  1635,  1636,  1636,  1637,  1637,  1638,  1639,  1639,
    1639,  1639,  1640,  1640,  1640,  1641,  1642,  1642,  1642,  1643,
    1643,  1644,  1645,  1645,  1645,  1645,  1645,  1645,  1645,  1645,
    1645,  1646,  1646,  1647,  1647,  1647,  1648,  1648,  1648,  1649,
    1649,  1649,  1650,  1650,  1651,  1651,  1652,  1652,  1653,  1654,
    1655,  1655,  1656,  1656,  1657,  1657,  1658,  1658,  1659,  1659,
    1660,  1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,  1667,
    1668,  1669,  1669,  1670,  1670,  1671,  1671,  1672,  1672,  1673,
    1673,  1673,  1674,  1674,  1674,  1675,  1675,  1676,  1676,  1677,
    1677,  1678,  1679,  1679,  1679,  1679,  1679,  1680,  1680,  1680,
    1681,  1681,  1681,  1681,  1681,  1681,  1681,  1681,  1681,  1681,
    1681,  1681,  1681,  1681,  1681,  1681,  1681,  1681,  1681,  1681,
    1681,  1681,  1681,  1681,  1681,  1681,  1681,  1681,  1681,  1681,
    1681,  1681,  1681,  1681,  1681,  1682,  1682,  1682,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,
    1684,  1685,  1685,  1685,  1686,  1686,  1686,  1686,  1687,  1687,
    1687,  1687,  1687,  1688,  1689,  1689,  1689,  1689,  1689,  1689,
    1689,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1691,  1691,
    1692,  1692,  1693,  1693,  1694,  1695,  1695,  1696,  1696,  1697,
    1697,  1698,  1698,  1699,  1699,  1699,  1699,  1699,  1700,  1700,
    1700,  1700,  1701,  1701,  1701,  1701,  1702,  1702,  1702,  1702,
    1702,  1702,  1703,  1704,  1704,  1704,  1704,  1704,  1704,  1704,
    1705,  1705,  1705,  1706,  1706,  1707,  1707,  1708,  1709,  1709,
    1710,  1711,  1711,  1712,  1712,  1713,  1713,  1713,  1713,  1714,
    1714,  1714,  1714,  1714,  1714,  1714,  1716,  1715,  1715,  1717,
    1717,  1718,  1718,  1719,  1720,  1720,  1720,  1720,  1722,  1721,
    1721,  1723,  1724,  1725,  1726,  1726,  1726,  1726,  1726,  1726,
    1726,  1726,  1727,  1727,  1727,  1727,  1727,  1728,  1728,  1729,
    1729,  1729,  1729,  1730,  1730,  1730,  1730,  1730,  1731,  1731,
    1732,  1731,  1731,  1731,  1733,  1733,  1734,  1733,  1733,  1735,
    1735,  1735,  1735,  1736,  1736,  1737,  1737,  1738,  1738,  1738,
    1738,  1738,  1738,  1738,  1738,  1738,  1738,  1738,  1738,  1738,
    1738,  1738,  1738,  1738,  1738,  1738,  1738,  1738,  1738,  1738,
    1738,  1738,  1738,  1738,  1738,  1738,  1738,  1738,  1738,  1738,
    1738,  1739,  1739,  1740,  1740,  1741,  1741,  1742,  1742,  1742,
    1743,  1743,  1743,  1743,  1743,  1744,  1744,  1745,  1745,  1746,
    1746,  1747,  1747,  1748,  1748,  1748,  1749,  1749,  1749,  1750,
    1750,  1750,  1751,  1751,  1751,  1751,  1751,  1751,  1752,  1753,
    1754,  1755,  1756,  1757,  1758,  1758,  1758,  1759,  1759,  1759,
    1759,  1759,  1759,  1759,  1759,  1759,  1759,  1759,  1759,  1759,
    1759,  1759,  1759,  1760,  1761,  1761,  1762,  1762,  1763,  1763,
    1764,  1764,  1765,  1765,  1765,  1765,  1765,  1766,  1766,  1767,
    1767,  1768,  1768,  1768,  1768,  1768,  1769,  1769,  1771,  1770,
    1772,  1772,  1773,  1773,  1773,  1774,  1774,  1774,  1775,  1775,
    1776,  1777,  1777,  1778,  1779,  1780,  1780,  1780,  1781,  1782,
    1783,  1784,  1784,  1784,  1784,  1784,  1784,  1784,  1784,  1785,
    1786,  1786,  1786,  1787,  1787,  1787,  1787,  1787,  1788,  1788,
    1788,  1788,  1788,  1788,  1789,  1789,  1790,  1791,  1792,  1792,
    1792,  1793,  1794,  1794,  1794,  1795,  1795,  1795,  1797,  1796,
    1798,  1799,  1799,  1799,  1799,  1800,  1800,  1801,  1801,  1803,
    1802,  1804,  1804,  1806,  1807,  1808,  1809,  1805,  1811,  1812,
    1813,  1814,  1810,  1815,  1815,  1815,  1815,  1815,  1815,  1816,
    1816,  1817,  1817,  1817,  1818,  1818,  1819,  1819,  1819,  1820,
    1820,  1821,  1821,  1821,  1822,  1822,  1823,  1823,  1824,  1824,
    1825,  1826,  1826,  1827,  1827,  1828,  1828,  1828,  1829,  1829,
    1830,  1830,  1831,  1831,  1832,  1832,  1833,  1833,  1834,  1834,
    1835,  1835,  1835,  1836,  1836,  1837
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     4,     1,     2,     0,     4,     0,
       2,     3,     1,     2,     0,     3,     1,     2,     0,     6,
       0,     6,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     2,     3,     1,     3,     1,     2,     3,     5,     7,
       2,     3,     1,     3,     3,     2,     3,     1,     3,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     5,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     3,
       9,     6,     7,     9,     4,    10,     0,     6,     2,     9,
       7,     6,     7,    11,     8,     7,     0,     3,     3,     6,
       3,     0,     3,    12,    11,    11,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     0,    12,     0,     6,     2,
       0,     1,     3,     1,     0,     2,     0,     2,     0,     1,
       3,     4,     0,     2,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     0,     2,     0,     2,     2,     2,     2,     2,     3,
       3,     1,     1,     1,     2,     3,     3,     3,     0,     3,
       0,     1,     3,     1,     3,     0,     1,     3,     1,     4,
       0,     1,     1,     1,     0,     3,     2,     3,     0,     3,
       5,     5,     0,     7,     0,     6,     1,     1,     1,     3,
       1,     1,     1,     3,     0,     1,     1,     1,     1,     2,
       1,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       1,     3,     1,     3,     3,     1,     2,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     5,     0,     2,     0,     3,     0,
       2,     2,     2,     2,     0,     6,     2,     0,     2,     1,
       1,     3,     0,     0,     0,     7,     0,     2,     2,     1,
       1,     0,     0,     8,     0,     6,     1,     2,     1,     2,
       0,     0,     6,     0,     0,     6,     0,     2,     0,     5,
       0,     1,     0,     5,     0,     2,     0,     5,     4,     0,
       0,     8,     0,     0,     8,     1,     1,     1,     1,     1,
       0,     2,     0,     4,     0,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     1,     0,     1,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       1,     1,     1,     2,     1,     1,     2,     3,     1,     3,
       3,     3,     3,     3,     3,     3,     4,     3,     1,     1,
       3,     3,     1,     1,     2,     1,     2,     1,     0,     2,
       1,     2,     1,     6,     6,     5,     4,     5,     4,     5,
       0,     1,     0,     3,     0,     2,     0,     8,     9,     0,
       1,     1,     3,     0,     2,     0,     3,     1,     3,     5,
       0,     4,     3,     1,     1,     1,     3,     1,     3,     0,
       4,     1,     3,     1,     1,     0,     3,     1,     3,     3,
       0,     1,     2,     1,     3,     4,     3,     3,     3,     4,
       4,     3,     1,     2,     1,     4,     0,     1,     1,     2,
       1,     1,     1,     0,     3,     1,     2,     1,     3,     0,
       1,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     5,     1,     1,     3,     4,     4,     3,     2,     2,
       3,     3,     2,     3,     3,     1,     1,     1,     4,     4,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     3,     0,
       1,     6,     7,     7,     7,     8,     3,     4,     0,     2,
       0,     1,     0,     1,     2,     2,     9,     0,     2,     0,
       1,     1,     3,     3,     3,     1,     2,     1,     1,     3,
       2,     3,     2,     2,     1,     3,     3,     2,     3,     1,
       2,     2,     2,     1,     2,     1,     1,     1,     2,     3,
       2,     3,     2,     2,     5,     5,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     2,     1,     2,     3,     2,     1,     1,     1,     1,
       1,     1,     2,     0,     1,     1,     1,     1,     1,     0,
       1,     0,     1,     1,     5,     0,     3,     0,     2,     3,
       0,     1,     2,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     1,     0,     1,     0,     1,     2,     1,     1,
       2,     2,     2,     4,     3,     1,     3,     2,     1,     2,
       2,     2,     2,     2,     2,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     2,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       1,     0,     2,     0,     1,     1,     2,     2,     1,     2,
       2,     0,     1,     1,     1,     3,     1,     3,     0,     1,
       0,     4,     0,     1,     5,     0,     3,     3,     1,     0,
       2,     2,     2,     0,     3,     3,     6,     6,     1,     1,
       2,     2,     2,     2,     2,     1,     1,     0,     1,     1,
       1,     1,     0,     1,     0,     1,     1,     2,     1,     3,
       0,     1,     1,     2,     1,     0,     1,     1,     2,     1,
       1,     3,     2,     1,     3,     3,     1,     3,     3,     0,
       1,     2,     2,     1,     1,     1,     1,     1,     3,     1,
       2,     5,     3,     1,     1,     4,     0,     1,     1,     3,
       4,     4,     0,     5,     0,     5,     0,     5,     0,     5,
       0,     4,     0,    10,     7,     6,     6,     6,     4,     7,
       7,     6,     5,     5,     5,     5,     5,     5,     3,     3,
       0,     2,     8,     3,     0,     2,     2,     0,     1,     1,
       2,     2,     2,     2,     5,     3,     3,     3,     3,     5,
       4,     3,     4,     4,     2,     2,     2,     0,     2,     2,
       1,     2,     2,     2,     2,     3,     0,     3,     1,     4,
       0,     3,     0,     2,     0,     1,     1,     2,     1,     3,
       1,     2,     0,     1,     1,     3,     2,     2,     3,     6,
       5,     3,     4,     4,     4,     4,     5,     4,     3,     3,
       8,     7,     4,     4,     1,     1,     0,     1,     2,     2,
       1,     1,     1,     3,     3,     1,     3,     1,     3,     6,
       5,     2,     6,     5,     4,     4,     3,     3,     3,     3,
       2,     2,     6,     8,     5,     5,     4,     4,     4,     3,
       5,     5,     5,     5,     1,     3,     1,     1,     1,     0,
       1,     1,     2,     2,     3,     1,     1,     3,     1,     1,
       0,     1,     0,     1,     0,     1,     1,     0,     2,     1,
       0,     1,     1,     1,     2,     2,     2,     0,     1,     1,
       3,     1,     1,     1,     3,     3,     3,     1,     1,     4,
       0,     0,    11,     3,     0,     1,     1,     3,     3,     2,
       2,     0,     3,     0,     3,     0,     3,     0,     3,     0,
       1,     1,     3,     1,     1,     0,     2,     1,     3,     3,
       3,     1,     4,     0,     1,     1,     5,     0,     1,     1,
       2,     1,     1,     1,     5,     0,     3,     3,     0,     5,
       4,     2,     4,     0,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     4,     0,     1,     1,     0,     4,     3,
       3,     5,     1,     3,     3,     5,     7,     1,     3,     2,
       1,     1,     8,     5,     1,     3,     3,     4,     0,     4,
       0,     2,     1,     2,     1,     3,     2,     3,     3,     3,
       4,     1,     1,     4,     4,     4,     3,     3,     1,     1,
       1,     9,     8,     0,     1,     2,     1,     1,     1,     3,
       2,     2,     0,     1,     2,     1,     1,     1,     2,     1,
       3,     4,     4,     1,     1,     2,     0,     1,     2,     1,
       3,     1,     1,     1,     2,     0,     2,     2,     1,     1,
       0,     2,     3,     3,     3,     2,     3,     4,     3,     4,
       3,     4,     1,     3,     4,     3,     4,     1,     3,     4,
       5,     7,     6,     8,     6,     5,     6,     4,     3,     5,
       4,     6,     3,     4,     1,     1,     0,     3,     3,     3,
       3,     3,     3,     5,     5,     3,     3,     3,     3,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     3,     2,     2,     2,     2,     1,     3,     5,     6,
       2,     4,     7,     2,     7,     9,    12,     5,     6,     6,
       4,     4,     5,     3,     3,     0,     1,     4,     6,     2,
       4,     4,     4,    10,     6,     8,     8,     6,     4,     4,
       6,     4,     4,     4,     6,     4,     7,     7,     7,     6,
       6,     6,     6,     3,     4,     6,     8,     2,     2,     8,
       8,     6,     6,     1,     6,     6,     8,     8,     6,     8,
       6,     2,     8,     8,     2,     2,     2,     0,     2,     4,
       4,     4,     4,     3,     8,     6,     8,     4,     6,     4,
       6,     8,     4,     3,     6,     4,     6,     4,     7,     7,
      10,     1,     4,     4,     4,     4,     4,     6,     4,     4,
       6,     2,     3,     0,     4,     0,     3,     0,     1,     1,
       3,     2,     1,     1,     5,     6,     5,     5,     5,     7,
       5,     6,     5,     6,     5,     6,     5,     6,     5,     6,
       5,     5,     5,     5,     5,     6,     8,     4,     4,     4,
       4,     4,     5,     7,     7,     6,     6,     9,     0,     3,
       1,     1,     1,     1,     2,     0,     2,     0,     2,     2,
       0,     2,     2,     0,     1,     2,     1,     1,     1,     3,
       4,     0,     1,     0,     3,     0,     3,     0,     3,     1,
       1,     2,     2,     2,     4,     2,     4,     1,     2,     2,
       2,     4,     0,     3,     2,     2,     3,     1,     1,     1,
       4,     4,     2,     4,     0,     1,     0,     2,     0,     3,
       3,     1,     2,     2,     3,     2,     1,     2,     1,     2,
       1,     1,     2,     2,     2,     1,     1,     2,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     3,     1,
       3,     1,     3,     0,     1,     0,     2,     4,     5,     1,
       1,     4,     1,     1,     5,     7,     5,     7,     3,     3,
       3,     4,     4,     1,     2,     2,     1,     3,     3,     0,
       1,     0,     1,     0,     1,     4,     1,     1,     1,     1,
       1,     1,     3,     5,     3,     3,     4,     3,     3,     3,
       4,     8,     4,     1,     3,     3,     7,     4,     0,     1,
       0,     1,     1,     2,     1,     2,     3,     3,     1,     1,
       2,     0,     2,     3,     3,     1,     1,     6,     6,     1,
       2,     0,     1,     1,     0,     1,     1,     1,     1,     3,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       0,     2,     0,     1,     0,     1,     2,     0,     2,     2,
       3,     3,     1,     4,     0,     3,     1,     3,     0,     2,
       1,     3,     3,     0,     4,     3,     1,     0,     1,     3,
       1,     2,     0,     1,     3,     3,     1,     0,     1,     1,
       1,     0,     1,     2,     1,     3,     3,     1,     1,     1,
       1,     1,     0,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       2,     1,     2,     5,     2,     1,     2,     6,     6,     4,
       6,     4,     5,     4,     4,     5,     4,     4,     4,     5,
       5,     4,     6,     4,     1,     3,     1,     3,     0,     2,
       0,     3,     0,     1,     0,     1,     1,     3,     1,     1,
       9,    10,     8,     6,     7,     6,     0,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     4,     1,     3,     4,
       3,     1,     2,     1,     2,     1,     1,     3,     1,     3,
       1,     1,     1,     0,     1,     3,     4,     0,     1,     3,
       1,     1,     1,     0,     3,     0,     5,    10,     0,     1,
       3,     1,     3,     0,     1,    10,     7,     8,     0,     2,
       0,     2,     1,     1,     1,     3,     0,     1,     0,     1,
       1,     3,     1,     1,     2,     2,     2,     1,     1,     1,
       1,     0,     3,     3,     5,     5,     4,     5,     5,     2,
       4,     4,     4,     7,     3,     3,     2,     6,     7,     7,
       3,     6,     6,     3,     3,     2,     5,     4,     3,     4,
       3,     3,     2,     2,     4,     6,     5,     4,     4,     3,
       4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
       1,     1,     1,     1,     0,     1,     0,     2,     0,     1,
       0,     1,     0,     1,     1,     2,     1,     1,     0,     2,
       0,     2,     0,     2,     1,     3,     3,     1,     1,     1,
       1,     1,     3,     1,     1,     0,     3,     2,     1,     0,
       1,     1,     0,     4,     0,     4,     1,     0,     3,     0,
       3,     3,     1,     2,     2,     2,     2,     2,     3,     1,
       1,     1,     1,     1,     1,     0,     1,     0,     3,     3,
       3,     1,     0,     2,     0,     4,     0,     4,     0,     3,
       0,     1,     0,     2,     0,     3,     3,     2,     2,     3,
       0,     1,     1,     2,    18,     1,     1,     0,     1,     0,
       1,     1,     0,     1,     1,     1,     0,     2,     2,     1,
       3,     4,     3,     3,     0,     2,     2,     1,     3,     3,
       0,     4,     0,     3,     1,     1,     0,     3,     2,     3,
       1,     1,     2,     0,     2,     3,     1,     3,     1,     1,
       2,     2,     1,     1,     1,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     2,     0,     1,     1,     1,     3,     5,     2,     1,
       1,     1,     1,     1,     3,     5,     1,     3,     2,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     2,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     2,     2,     5,     5,     7,
       7,     3,     3,     3,     6,     6,     6,     4,     0,     2,
       4,     6,     1,     3,     1,     2,     2,     0,     2,     1,
       3,     2,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     1,     0,     2,     2,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     4,     6,     2,     3,     3,     2,
       1,     3,     3,     1,     3,     2,     2,     1,     0,     2,
       3,     0,     2,     2,     2,     2,     2,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     4,     4,     1,
       1,     1,     3,     3,     1,     1,     2,     2,     0,     3,
       2,     1,     1,     3,     4,     2,     6,     5,     9,     3,
       3,     2,     4,     3,     6,     7,    10,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     6,     9,
       0,    11,    10,     8,     5,     9,     0,    11,     7,     0,
       1,     1,     1,     0,     1,     1,     3,     2,     3,     2,
       2,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     1,     2,     2,
       2,     0,     3,     0,     1,     3,     1,     2,     2,     2,
       1,     3,     3,     1,     3,     1,     3,     1,     3,     0,
       3,     0,     3,     3,     2,     7,     3,     3,     2,     0,
       2,     4,     1,     1,     1,     1,     1,     1,     3,     4,
       3,     5,     5,     6,     3,     3,     3,     5,     5,     3,
       3,     5,     2,     3,     3,     3,     2,     4,     7,     4,
       7,     3,     5,     2,     1,     3,     1,     3,     0,     3,
       1,     3,     0,     2,     2,     2,     2,     0,     3,     0,
       3,     0,     3,     4,     3,     3,     0,     3,     0,     3,
       0,     1,     0,     3,     2,     0,     1,     2,     0,     1,
       4,     4,     5,     2,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     3,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     1,     2,
       1,     2,     3,     3,     3,     0,     3,     3,     0,     7,
       2,     0,     3,     4,     4,     1,     1,     0,     2,     0,
      13,     8,     7,     0,     0,     0,     0,    15,     0,     0,
       0,     0,    12,     4,     4,     3,     4,     3,     3,     0,
       2,     1,     3,     5,     1,     1,     0,     1,     1,     0,
       2,     0,     1,     3,     5,     3,     3,     3,     1,     3,
       4,     6,    10,     1,     5,     0,     2,     3,     1,     1,
       0,     3,     1,     3,     1,     3,     1,     2,     0,     3,
       0,     1,     1,     0,     1,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 24812 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 24826 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 24848 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 24856 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2236 "sql_yacc.yy" /* yacc.c:1646  */
    {
           ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[-1].item);
         }
#line 24865 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24881 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 9:
#line 2256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24908 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 11:
#line 2281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 24917 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 14:
#line 2293 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 24923 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24929 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24935 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 18:
#line 2301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24941 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24947 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 21:
#line 2304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24953 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24959 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2307 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24965 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 25:
#line 2308 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24971 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24977 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 28:
#line 2311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24983 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 30:
#line 2313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24989 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 32:
#line 2315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24995 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25001 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25007 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25013 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 37:
#line 2320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25019 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 43:
#line 2326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25025 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25031 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25037 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 49:
#line 2332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25043 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25049 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 52:
#line 2335 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25055 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 55:
#line 2338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25061 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25067 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25073 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25079 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25085 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25091 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25097 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 63:
#line 2346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25103 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2348 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25109 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25115 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25121 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2351 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25127 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25133 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25139 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2356 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25145 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25151 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25157 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25163 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25169 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25175 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25181 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25187 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25193 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25199 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25205 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2374 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25211 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 25217 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2424 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25223 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25229 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2426 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25235 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2427 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25241 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2429 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25247 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2430 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25253 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2432 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25259 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25265 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25276 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 25297 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 25308 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 25319 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25330 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2497 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25336 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 25347 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 25359 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 25369 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "CHANGE MASTER",
                                        "CHANGE REPLICATION SOURCE");
          }
#line 25378 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            assert(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 25393 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25402 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            assert(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25416 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25425 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 25436 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 25447 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 25458 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 25469 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 25480 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 25492 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 25503 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25513 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25521 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25532 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25541 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 25552 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25562 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25570 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 25582 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 25592 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25602 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25610 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25621 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25630 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 25643 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25653 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25661 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25672 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25681 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 25692 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_AUTO_POSITION",
                                        "SOURCE_AUTO_POSITION");

          }
#line 25702 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HOST",
                                        "SOURCE_HOST");
          }
#line 25711 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_BIND",
                                        "SOURCE_BIND");

          }
#line 25721 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_USER",
                                        "SOURCE_USER");
          }
#line 25730 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PASSWORD",
                                        "SOURCE_PASSWORD");
          }
#line 25739 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PORT",
                                        "SOURCE_PORT");
          }
#line 25748 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_CONNECT_RETRY",
                                        "SOURCE_CONNECT_RETRY");
          }
#line 25757 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_RETRY_COUNT",
                                        "SOURCE_RETRY_COUNT");
          }
#line 25766 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_DELAY",
                                        "SOURCE_DELAY");
          }
#line 25775 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL",
                                        "SOURCE_SSL");
          }
#line 25784 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CA",
                                        "SOURCE_SSL_CA");
          }
#line 25793 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 2891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CAPATH",
                                        "SOURCE_SSL_CAPATH");
          }
#line 25802 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 2900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CIPHER",
                                        "SOURCE_SSL_CIPHER");
          }
#line 25811 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 2909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRL",
                                        "SOURCE_SSL_CRL");
          }
#line 25820 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 2918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRLPATH",
                                        "SOURCE_SSL_CRLPATH");
          }
#line 25829 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 2927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_KEY",
                                        "SOURCE_SSL_KEY");
          }
#line 25838 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 2936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_VERIFY_SERVER_CERT",
                                        "SOURCE_SSL_VERIFY_SERVER_CERT");
          }
#line 25847 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 2945 "sql_yacc.yy" /* yacc.c:1646  */
    {
             push_deprecated_warn(YYTHD, "MASTER_TLS_VERSION",
                                         "SOURCE_TLS_VERSION");
          }
#line 25856 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 2954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_TLS_CIPHERSUITES",
                                        "SOURCE_TLS_CIPHERSUITES");
          }
#line 25865 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 2963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CERT",
                                        "SOURCE_SSL_CERT");
          }
#line 25874 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 2972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PUBLIC_KEY_PATH",
                                        "SOURCE_PUBLIC_KEY_PATH");
          }
#line 25883 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 2981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "GET_MASTER_PUBLIC_KEY",
                                        "GET_SOURCE_PUBLIC_KEY");
          }
#line 25892 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 2990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HEARTBEAT_PERIOD",
                                        "SOURCE_HEARTBEAT_PERIOD");
          }
#line 25901 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 2999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_COMPRESSION_ALGORITHM",
                                        "SOURCE_COMPRESSION_ALGORITHM");
          }
#line 25910 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 3008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_ZSTD_COMPRESSION_LEVEL",
                                        "SOURCE_ZSTD_COMPRESSION_LEVEL");
          }
#line 25919 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 3017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 25927 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 25935 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 25943 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 25951 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 25965 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 25973 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 25981 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 25990 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 26005 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26014 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 26022 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26030 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 26038 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 26046 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 26054 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 26062 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26071 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 26079 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26087 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 26095 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26105 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > replica_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26143 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26151 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 26159 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 26167 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26177 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
          }
#line 26197 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
            }
          }
#line 26217 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]),
                  "You have an error in your CHANGE REPLICATION SOURCE syntax; GTID_ONLY only accepts values 0 or 1");
                MYSQL_YYABORT;
            }
          }
#line 26238 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 26246 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 26256 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 26266 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 26274 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 26282 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 26290 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_OFF;
          }
#line 26298 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_LOCAL;
          }
#line 26306 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_UUID;
            Lex->mi.assign_gtids_to_anonymous_transactions_manual_uuid = (yyvsp[0].lexer.lex_str).str;
            if (!binary_log::Uuid::is_valid((yyvsp[0].lexer.lex_str).str, binary_log::Uuid::TEXT_LENGTH))
            {
              my_error(ER_WRONG_VALUE, MYF(0), "UUID", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26320 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 26329 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 26338 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_FILE",
                                        "SOURCE_LOG_FILE");
          }
#line 26347 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_POS",
                                        "SOURCE_LOG_POS");
          }
#line 26356 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26364 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 26384 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26392 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 26403 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = {}; }
#line 26409 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 26415 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26428 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26441 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 26449 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 26457 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 26465 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 26475 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 26487 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26498 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3431 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26504 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26518 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26541 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26563 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26586 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 26603 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 26611 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 26619 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 26629 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26645 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26661 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 26678 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26694 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 26702 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 26710 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26721 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26732 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26743 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 26751 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 26759 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 26767 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 26775 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 26784 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 26792 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 26800 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 26820 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 26832 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 26843 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 26853 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26859 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26869 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26879 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26889 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 26900 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 26910 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 26920 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3767 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26926 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 26936 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 26946 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26952 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 26961 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 27011 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 27025 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 3871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 27043 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 3885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 27063 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 3903 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27069 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3904 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27075 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3908 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27081 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3909 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27087 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3915 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 27093 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3917 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 27099 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3919 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27105 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3921 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27111 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3923 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27117 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3925 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27123 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 3927 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27129 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3932 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27135 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3933 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 27141 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3934 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 27147 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 27155 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 27163 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 27171 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 27177 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3958 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 27185 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 3976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27237 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27288 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4087 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27294 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27300 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4089 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 27306 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4090 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 27312 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4094 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27318 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4099 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27324 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27332 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 27357 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4137 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27456 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27477 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 27522 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27560 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4327 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 27573 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4336 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            assert(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27639 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4400 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27645 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4401 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27651 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27657 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 27663 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 27687 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4437 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27702 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4452 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27725 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4473 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27731 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4474 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27737 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 27745 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 27762 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27772 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27782 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27792 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 27806 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 27836 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4556 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27842 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4561 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 27848 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4563 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27854 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4568 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 27860 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4570 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 27866 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27876 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27886 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4594 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27892 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4596 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27898 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4598 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27904 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 27910 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 27916 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 4608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 27922 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 4610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 27928 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 4612 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 27934 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 27940 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 27946 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 27952 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 27958 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4622 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 27964 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 27970 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 4626 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 27976 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 4631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 27991 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 4645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28008 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 4661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28014 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28020 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4665 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 28026 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28036 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28046 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 28056 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28066 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28076 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 4708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28108 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 28117 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28123 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4746 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28129 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28135 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 28145 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28155 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28165 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28171 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4785 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28177 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28183 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4789 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28189 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4791 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28195 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4793 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28201 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4795 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28207 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4797 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28213 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4799 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28219 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4801 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28225 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28231 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4805 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28237 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4807 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28243 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 28267 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28291 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 28300 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28309 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 4884 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 28315 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 4886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 28325 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 28338 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != NULL)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            assert((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28395 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4959 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28407 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4967 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28457 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 5015 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 28472 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 5026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28485 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28543 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28591 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28615 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28639 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5185 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28645 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28669 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28691 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28713 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5257 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28725 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5265 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28766 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5303 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 28788 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5321 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28801 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5344 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 28815 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5354 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28861 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5399 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 28869 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 28877 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 28885 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5430 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28897 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5438 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28942 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5480 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 28951 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5488 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28963 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5496 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29004 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5534 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29013 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29031 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 29053 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 29074 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5597 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 29080 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 29086 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 29106 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 29125 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5636 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 29140 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 29149 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5655 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 29166 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 29200 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29217 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5717 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29229 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5725 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29271 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5766 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 29290 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5783 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29302 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5791 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 29344 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 29350 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5836 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 29356 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5841 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 29362 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 29368 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 29374 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29380 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5861 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 29388 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29394 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 29402 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5875 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29408 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29418 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29428 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29434 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29444 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29454 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29460 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 5945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29470 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29480 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29486 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29496 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29506 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 5993 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29512 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 5999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29522 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29532 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29538 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 29544 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6024 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 29550 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6028 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29556 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 29564 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 29572 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 29578 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 29586 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 29594 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29602 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29610 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 29618 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 29626 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29634 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 29642 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 29650 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 29658 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 29666 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29674 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 29680 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 29730 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 29739 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 29748 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 29759 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_expression_body);
          }
#line 29770 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_expression_body);
          }
#line 29781 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6251 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_expression_body) = (yyvsp[0].query_expression_body); }
#line 29787 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_expression_body) = (yyvsp[0].query_expression_body); }
#line 29793 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 29801 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 29809 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 29817 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29825 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 29833 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29841 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 29849 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29855 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29861 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6307 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 29867 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 29885 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29891 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 29904 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 29910 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 29918 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 29926 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 29932 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 29942 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 29952 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29958 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 29971 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6389 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 29977 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 29983 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 29993 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30003 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 30012 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 30020 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 30029 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 30038 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6434 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 30044 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 30052 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 30060 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30071 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30081 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 30096 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 30104 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30114 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30124 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6499 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 30130 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 30136 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6505 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 30142 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6506 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 30148 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30158 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30168 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 30176 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 30182 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30192 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30202 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 30208 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6555 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 30214 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6557 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 30220 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6559 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 30226 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6561 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 30232 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6563 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 30238 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 30244 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6567 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 30250 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[0].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[0].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
#line 30272 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6602 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30278 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6603 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30284 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6607 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30290 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6608 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30296 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30305 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30314 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 30330 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30336 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6638 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30342 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30352 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30362 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30372 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30382 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30390 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 30398 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30406 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30414 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30422 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The frm-format only allocated 4 bytes for avg_row_length, and
            // there is code which assumes it can be represented as an uint,
            // so we constrain it here.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint32_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for avg_row_length is [0,4294967295]. Error"
              );
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulonglong_number));
          }
#line 30439 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30447 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 30455 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
          }
#line 30463 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
          }
#line 30471 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 30479 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 30487 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 30495 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 30503 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for stats_sample_pages is [1, 65535]. Error");
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 30525 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 30533 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30541 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30549 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 30557 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 30565 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 30573 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 30581 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 30589 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 30597 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30605 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30613 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30621 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 30629 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 30637 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 30645 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The frm-format only allocated 2 bytes for key_block_size,
            // even if it is represented as std::uint32_t in HA_CREATE_INFO and
            // elsewhere.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint16_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for key_block_size is [0,65535]. Error");
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN
            PT_create_key_block_size_option(static_cast<std::uint32_t>((yyvsp[0].ulonglong_number)));
          }
#line 30663 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
#line 30671 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30679 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30687 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = NEW_PTN PT_create_ts_autoextend_size_option((yyvsp[0].ulonglong_number));
          }
#line 30695 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 30713 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 30719 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6871 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30725 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6875 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 30731 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6879 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 30737 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6883 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 30743 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6884 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 30749 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6885 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 30755 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6886 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 30761 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6887 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 30767 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 30773 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6892 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 30779 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6893 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 30785 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6894 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 30791 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6898 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 30797 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6899 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 30803 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6900 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 30809 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6901 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 30815 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30825 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30835 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6920 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 30841 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6921 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 30847 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 30855 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6932 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 30861 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 30870 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30879 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30888 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30896 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30909 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 30921 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 30930 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 30936 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 30942 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6989 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30948 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6993 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30954 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6994 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30960 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30966 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 30972 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 7003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 30978 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 7008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 30986 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 7014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 31007 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 7038 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31013 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 7039 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31019 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 7040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 31025 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 7045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 31033 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 7049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31041 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 7053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31049 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 7057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 31057 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 7061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 31065 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 7065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31073 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 7069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31081 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 7073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31090 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 7078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31099 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 7083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31112 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 7092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31125 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31133 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 31141 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31150 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31163 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31171 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 31198 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 31206 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 31214 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 31222 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 31230 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 31238 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 31246 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31254 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 31262 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31270 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31279 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31288 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31297 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31306 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31315 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31323 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31331 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31340 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 31348 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 31356 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 31362 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7238 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 31368 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 31374 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 31380 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 31386 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 31392 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 31398 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7250 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 31404 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7254 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31410 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7255 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31416 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7259 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31422 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7260 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31428 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7264 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31434 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7265 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31440 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7266 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31446 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7267 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31452 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7268 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31458 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 31464 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 31470 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7274 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 31476 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 31482 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 31488 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 31497 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 31503 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 31509 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7296 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31515 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7297 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31521 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31527 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 31536 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 31545 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 31554 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 31563 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 31572 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 31578 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31584 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31590 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31596 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7346 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 31605 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31611 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 31619 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31625 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 31631 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 31642 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31648 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31654 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7379 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31660 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31666 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 31672 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 31681 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7397 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 31687 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 31710 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 31730 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 31738 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 31746 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 31754 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 31762 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 31770 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 31778 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 31786 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 31794 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 31802 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 31810 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 31818 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31826 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 31834 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format));
          }
#line 31842 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 31850 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 31863 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 31871 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 31879 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31887 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31895 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_column_visibility_attr((yyvsp[0].visibility));
          }
#line 31903 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 31909 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 31915 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 31921 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 31927 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 31933 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 31939 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 31947 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 31955 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 31968 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 31974 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7586 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 31980 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 31986 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 31999 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32005 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 32011 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 32017 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 32027 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7615 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32033 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 32039 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32045 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7624 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32051 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7625 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32057 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7630 "sql_yacc.yy" /* yacc.c:1646  */
    {
          push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
          (yyval.lexer.charset)= &my_charset_latin1;
        }
#line 32066 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32076 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32086 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 32099 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 32110 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 32121 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32130 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32139 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32148 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32157 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32168 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 32178 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32190 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7717 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32196 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 32205 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7726 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 32217 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7734 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32223 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 32235 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7758 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 32241 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 32247 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32258 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32269 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7780 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 32275 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7781 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 32281 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7782 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 32287 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 32293 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32302 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32311 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32320 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32329 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32338 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7817 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32344 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32350 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32356 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32362 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7821 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 32368 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 32374 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7826 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 32380 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7830 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32386 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7831 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32392 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7835 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32398 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7840 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32404 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7841 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32410 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7842 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32416 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7846 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 32422 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7847 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 32428 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7851 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32434 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32444 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32454 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32469 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7886 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32475 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32485 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32495 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7910 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32501 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32511 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32521 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7930 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32527 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32533 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7936 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 32539 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32547 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 32555 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32563 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32571 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 32577 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32583 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32589 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 32595 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32601 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7985 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32607 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7989 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 32613 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7990 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 32619 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7994 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 32625 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7995 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 32631 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7996 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 32637 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32647 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 32658 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32668 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32684 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32694 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32705 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32715 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 32721 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 32731 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 32740 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 32754 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 32768 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 32780 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 32793 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 32808 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 32819 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 32834 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 32845 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 32860 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8183 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32866 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 32882 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8202 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32888 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 32908 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 32925 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32948 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32970 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32993 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33005 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33028 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33052 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 33064 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 33079 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 33094 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password = true;
            (yyvsp[-3].lex_user)->retain_current_password = false;
          }
#line 33103 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 33119 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 33135 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 33150 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            LEX *lex=Lex;
            lex->users_list.push_front ((yyvsp[-1].lex_user));
          }
#line 33161 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
          }
#line 33170 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8450 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 33176 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33182 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 33191 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 33201 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 33211 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33222 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33233 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8496 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33239 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 33249 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 33259 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33271 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33290 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33302 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33314 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 33325 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 33336 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 33347 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 33358 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 33368 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 33378 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 33388 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 33404 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 33420 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 33430 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8636 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33436 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8641 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33442 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8642 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33448 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 33458 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 33468 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 33478 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 33488 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;

            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 33502 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8686 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33508 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8687 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33514 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8688 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33520 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8689 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33526 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8693 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33532 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 33545 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8706 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33551 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8707 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33557 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8711 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 33563 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8712 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 33569 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33585 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33594 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33603 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 33611 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 33619 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 33628 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 33637 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 33647 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 33655 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 33663 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 33671 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 33679 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 33687 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 33695 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33703 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33711 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33719 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33728 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33737 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 33745 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 33753 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 33761 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 33769 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 33777 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 33785 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 33793 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 33801 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 33809 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8877 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 33815 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 33823 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 33831 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8893 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 33837 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33848 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33857 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 33865 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 33874 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 33886 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 33895 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 33903 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 33911 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 33919 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 33927 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 33935 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 33944 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 33952 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 33960 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 33968 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 33976 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 33984 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 33992 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 34000 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 34008 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 9001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 34016 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 9005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 34024 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 9010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_column_visibility((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34032 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34040 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34048 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34056 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 34064 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34072 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34080 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 34088 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 34098 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 34106 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 34114 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34123 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34132 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 34141 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9076 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 34147 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34156 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34165 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34175 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34185 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 34191 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 34199 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34217 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 34223 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34231 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34249 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 34255 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 34261 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9162 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 34267 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 34273 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 34279 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 34285 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9169 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 34291 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 34297 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9174 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34303 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9175 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34309 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9176 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34315 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9177 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34321 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 34330 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 34340 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34353 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34367 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34375 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9247 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_replication_deprecated_syntax_used(); }
#line 34381 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[-1].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "STOP SLAVE", "STOP REPLICA");
            if (lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34396 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "START SLAVE", "START REPLICA");
          }
#line 34413 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34434 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34443 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34460 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34468 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34476 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34484 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34492 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 34500 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 34508 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 34516 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34524 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 34532 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34540 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 34549 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34557 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34565 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34573 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 34581 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34589 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34597 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34605 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34613 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 34621 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 34629 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 34638 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 34664 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 34673 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 34682 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 34690 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 34705 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9495 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 34711 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 34717 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 34723 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34732 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9510 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 34738 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 34747 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 34753 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 34759 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 34765 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].histogram).param) {
              (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                                (yyvsp[0].histogram).command, (yyvsp[0].histogram).param->num_buckets,
                                                (yyvsp[0].histogram).columns, (yyvsp[0].histogram).param->data);
            } else {
              (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                                (yyvsp[0].histogram).command, 0,
                                                (yyvsp[0].histogram).columns, {nullptr, 0});
            }
          }
#line 34781 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram_param).num_buckets= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS;
            (yyval.histogram_param).data= { nullptr, 0 };
          }
#line 34790 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.histogram_param).num_buckets= num;
            (yyval.histogram_param).data= { nullptr, 0 };
          }
#line 34810 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram_param).num_buckets= 0;
            (yyval.histogram_param).data= (yyvsp[0].lexer.lex_str);
          }
#line 34819 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).param= nullptr;
          }
#line 34829 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).param= NEW_PTN YYSTYPE::Histogram_param((yyvsp[0].histogram_param));
            if ((yyval.histogram).param == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 34842 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).param = nullptr;
          }
#line 34853 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 34862 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34871 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 34877 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 34886 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9631 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 34892 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 34898 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 34904 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 34910 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9639 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 34916 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9641 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 34922 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 34930 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 34936 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9653 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34942 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9654 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34948 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 34956 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9663 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34962 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 34970 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 34979 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 34988 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Query_block *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 35002 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 35010 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 35019 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35029 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35039 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 35047 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9737 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 35053 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9738 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 35059 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35067 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 35075 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35085 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35095 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35103 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 35111 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 35117 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 35128 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9794 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 35134 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9795 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 35140 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 9800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 35148 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 35157 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 35165 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 35173 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 35181 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 35189 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body_opt_parens).body, (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35197 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body_opt_parens).body, (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35205 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body_opt_parens) = {(yyvsp[0].query_primary), false};
          }
#line 35213 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body_opt_parens) = {(yyvsp[0].query_expression_body), true};
          }
#line 35221 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_union((yyvsp[-3].query_expression_body_opt_parens).body, (yyvsp[-1].num), (yyvsp[0].query_expression_body_opt_parens).body, (yyvsp[0].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
#line 35230 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_except((yyvsp[-3].query_expression_body_opt_parens).body, (yyvsp[-1].num), (yyvsp[0].query_expression_body_opt_parens).body, (yyvsp[0].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
#line 35239 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_intersect((yyvsp[-3].query_expression_body_opt_parens).body, (yyvsp[-1].num), (yyvsp[0].query_expression_body_opt_parens).body, (yyvsp[0].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
#line 35248 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9937 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_expression_body) = (yyvsp[-1].query_expression_body); }
#line 35254 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9938 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_expression_body) = (yyvsp[-1].query_expression_body); }
#line 35260 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 35269 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 35277 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 35290 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35308 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35326 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 10009 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35332 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 10014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 35338 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 10018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35344 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 10024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35354 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 10030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35364 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 10039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 35372 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 10046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 35384 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 10057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 35392 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 10065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 35401 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 10074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 35409 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 10078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 35419 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 10087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35429 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 10093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35439 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 10102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 35447 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 10106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 35455 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 10110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 35463 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 10116 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 35469 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 10117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 35475 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 10121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 35481 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 10125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 35487 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 35493 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 10131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 35499 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 10136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35509 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 10142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35519 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 10148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 35530 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 10157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35536 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 10159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 35544 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 10166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 35550 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 10167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35556 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35562 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 10169 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35568 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35574 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10174 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35580 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10175 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35586 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35596 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35605 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35615 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 35623 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 35631 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 35639 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 35647 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 35655 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35663 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35671 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35679 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35687 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 35695 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 35712 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 35720 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 35729 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 35737 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 35748 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 35756 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 35769 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 35777 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 35785 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 35793 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 35805 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35813 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35821 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 35830 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 35839 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 35851 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 35863 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35871 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35879 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35887 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35895 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35903 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35911 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 35919 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 35927 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35935 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 35943 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 35951 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div_int((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 35959 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35967 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35975 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10421 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 35983 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10432 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 35989 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 35995 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10438 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 36001 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36007 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 10440 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36013 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 10441 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36019 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10442 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36025 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36031 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36037 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10448 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36043 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 36051 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 36057 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36065 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 10472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 36073 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 36081 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 10480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 36089 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 10484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 36097 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36105 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 10491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 36111 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36119 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36127 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36135 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 36143 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 36151 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "BINARY expr", "CAST");
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 36160 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 36168 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
#line 36176 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[-1].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[-9]), (yyvsp[-9].item), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-5].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yylsp[-9]), datetime_factor, cast_type, false);
          }
#line 36187 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 36195 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
          }
#line 36203 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 36211 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 36219 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 36227 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 36235 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 36246 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 36258 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10576 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 36264 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10577 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 36270 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 36278 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 36286 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 36294 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 36302 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 36310 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 36318 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36326 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36334 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 36342 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 36352 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36360 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 36368 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 36376 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36384 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 36392 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 36400 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 36408 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 36416 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36425 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 36434 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 36443 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 36451 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 36459 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 36467 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 36475 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36484 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 36492 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 36500 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 36508 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36516 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 36524 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36532 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36540 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36548 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 36556 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 36564 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36573 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 36581 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 36589 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36597 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36605 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36613 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36621 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36629 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36638 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 36646 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 36654 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 36662 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36670 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36678 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 36686 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 36694 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 36702 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 36710 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 36718 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 36726 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 36734 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36742 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36750 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36758 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 36766 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36774 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 36782 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36790 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36798 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 36806 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 36814 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 36822 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 36830 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36838 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 36846 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 36854 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 36862 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 36870 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 36880 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 36890 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 36900 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 36910 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 36920 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36928 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 36938 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 36946 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 36954 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10990 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 36960 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 36974 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 36980 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11005 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 36986 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11009 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 36992 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11010 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 36998 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 37004 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 37010 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37020 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37030 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 37038 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37046 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37054 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37062 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37070 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 37084 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 37098 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 11083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), false);
          }
#line 37106 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), true );
          }
#line 37114 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37122 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 37130 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37138 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 37146 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37154 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37162 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37170 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37178 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37186 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37194 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37202 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37210 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37218 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37226 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 37234 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 37242 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 37250 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 37258 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 37266 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 37274 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37282 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37297 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37312 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37320 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37328 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37341 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 37350 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 37359 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 37365 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].param_marker); }
#line 37371 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11250 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 37377 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11251 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 37383 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 37391 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37399 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 37407 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 37415 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 37423 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 37431 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 37439 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 37447 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 37455 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37463 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37471 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 37479 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37487 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 37495 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 37503 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11344 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 37521 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 37529 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 37537 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37545 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37553 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37561 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37569 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 37577 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 37585 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 37594 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 37602 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 37610 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 37618 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 37626 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37634 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 37642 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 37650 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 37658 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 37666 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 37674 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 37682 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37690 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 37698 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 37706 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 37714 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 37722 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11488 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 37729 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11493 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 37735 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11494 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 37741 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11495 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 37747 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 37755 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item) = NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 37766 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 37774 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN PTI_get_system_variable((yyloc), (yyvsp[-1].var_type),
                                                 (yylsp[0]), (yyvsp[0].bipartite_name).prefix, (yyvsp[0].bipartite_name).name);
          }
#line 37783 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 37789 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11529 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 37795 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 37805 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11539 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 37811 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 37817 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 37823 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37832 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37843 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 37851 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 37862 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 37885 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 37897 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37908 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37919 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37930 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37941 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37952 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37963 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 37974 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 37985 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 37996 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38007 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38019 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 38030 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38041 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_LINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38052 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38063 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38074 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTILINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38085 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38096 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_GEOMETRYCOLLECTION;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38107 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11741 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 38113 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38123 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38133 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 38139 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38145 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38155 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38165 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11781 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38171 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11782 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38177 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38183 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38189 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 38201 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 38211 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11808 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38217 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11809 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38223 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 38237 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11823 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38243 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38249 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38257 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38265 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38273 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38281 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 38294 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 38302 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 38308 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 38314 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 38320 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11945 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38326 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38332 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11947 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38338 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11948 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 38344 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 38350 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11952 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 38356 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11970 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 38362 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 38370 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 12006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 38376 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 12008 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 38382 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 12010 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 38388 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 12011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 38394 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 12015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 38400 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 12017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 38410 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 12025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38416 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 12026 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38422 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 12031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 38430 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 12037 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38436 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12038 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38442 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38459 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 12056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38471 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 12068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 38487 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 12083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 38495 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38505 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38515 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 12105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 38523 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 38536 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 38544 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 38552 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 38560 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38569 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38578 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38587 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 38596 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12162 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 38602 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 12164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 38614 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38620 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38626 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 38634 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 38642 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 38650 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 38658 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12199 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 38664 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12200 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 38670 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12201 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 38676 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12205 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 38682 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12206 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 38688 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38697 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38706 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 38715 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 38721 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 38732 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 38742 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 38752 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 38762 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 38771 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 38784 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 38797 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12308 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38803 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12309 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 38809 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 38815 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 38821 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 38827 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 38833 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 38839 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 38845 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 38851 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 38857 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 38863 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 38869 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 38875 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 38881 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 38887 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 38893 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 38899 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 38905 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 38911 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 38917 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 38923 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12335 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 38929 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12336 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 38935 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12337 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 38941 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12338 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 38947 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12347 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 38953 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12348 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 38959 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 38965 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 38971 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38977 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 38985 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 38993 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 39001 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 39010 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 39020 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 39037 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 39050 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 39058 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 39068 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 39078 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 39086 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 39094 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 39104 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 39114 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 39125 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12486 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 39131 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 39139 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39148 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39159 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12510 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 39165 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12511 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 39171 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39180 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39191 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 39199 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 39205 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 39213 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39222 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39233 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12575 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 39239 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 39245 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 39251 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12585 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 39257 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 39265 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 39275 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 39285 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 39295 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 39303 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 39311 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39319 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39327 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39335 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12641 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39341 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12642 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 39347 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12646 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39353 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12647 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39359 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12648 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39365 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12649 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39371 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12650 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39377 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12651 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39383 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12655 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39389 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12656 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39395 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12657 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39401 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12658 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39407 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12659 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39413 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12663 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39419 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12664 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39425 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12665 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39431 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12666 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39437 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12667 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39443 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12671 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39449 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12672 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39455 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12673 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39461 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12674 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39467 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12675 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39473 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12680 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 39479 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39489 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39499 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 39507 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 39515 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 39523 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 39531 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39539 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12732 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 39545 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 39555 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39572 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 39582 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39593 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39620 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39656 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 39664 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 39680 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12869 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 39691 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39707 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 39717 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 39729 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39751 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39774 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39797 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 39806 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 39814 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 39822 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 13001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 39832 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 39842 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 39852 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 39862 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 39868 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 13031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 39874 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 13035 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 39880 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 39886 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39892 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13041 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39898 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13045 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 39904 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 39914 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 39924 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 39940 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 39955 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 39967 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 39979 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 39994 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40006 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 40012 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40018 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13180 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 40031 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13188 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 40037 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 40043 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13194 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 40056 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40065 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40074 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40083 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression_body);
          }
#line 40092 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression_body);
          }
#line 40101 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression_body);
          }
#line 40110 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40120 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40130 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 40138 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13268 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_expression_body) = (yyvsp[0].query_expression); }
#line 40144 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 40152 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40161 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40171 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40180 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40190 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40196 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40202 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 40212 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 13339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40222 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 13345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40232 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 40240 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 40249 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 13367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 40263 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 40272 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 40280 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40289 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 40295 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 40301 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40312 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40325 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 40334 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13442 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40340 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40346 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 13459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40354 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40362 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40370 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40376 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 40382 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 40388 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 40394 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 40400 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 40408 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = 0; }
#line 40414 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13520 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = (yyvsp[-2].ulong_num) | (yyvsp[0].ulong_num); }
#line 40420 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CPU; }
#line 40426 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_MEMORY; }
#line 40432 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
#line 40438 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13527 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CONTEXT; }
#line 40444 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
#line 40450 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13529 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_IPC; }
#line 40456 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SWAPS; }
#line 40462 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13531 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SOURCE; }
#line 40468 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_ALL; }
#line 40474 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_id) = 0; }
#line 40480 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
#line 40491 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13550 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_databases((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           }
#line 40499 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40507 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_triggers((yyloc), (yyvsp[-3].is_not_empty), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40515 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_events((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40523 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_status((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40531 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13584 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_open_tables((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40539 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_plugins((yyloc));
          }
#line 40547 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40555 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40563 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40571 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40583 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlogs((yyloc));
          }
#line 40591 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_replication_deprecated_syntax_used();
            push_deprecated_warn(YYTHD, "SHOW SLAVE HOSTS", "SHOW REPLICAS");

            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40602 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40610 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].limit_clause));
          }
#line 40618 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].limit_clause), (yyvsp[0].lex_cstr));
          }
#line 40626 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));
          }
#line 40638 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engines((yyloc));
          }
#line 40646 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_warnings((yyloc));
          }
#line 40654 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_errors((yyloc));
          }
#line 40662 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_warnings((yyloc), (yyvsp[0].limit_clause));
          }
#line 40670 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_errors((yyloc), (yyvsp[0].limit_clause));
          }
#line 40678 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            (yyval.top_level_node) = NEW_PTN PT_show_profiles((yyloc));
          }
#line 40690 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_profile((yyloc), (yyvsp[-2].ulong_num), (yyvsp[-1].query_id), (yyvsp[0].limit_clause));
          }
#line 40698 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13742 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_status((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40706 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_processlist((yyloc), (yyvsp[-1].is_not_empty));
          }
#line 40714 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_variables((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40722 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_charsets((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40730 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_collations((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40738 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_privileges((yyloc));
          }
#line 40746 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr);
          }
#line 40754 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr);
          }
#line 40762 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list));
          }
#line 40770 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_database((yyloc), (yyvsp[-1].is_not_empty), (yyvsp[0].lexer.lex_str));
          }
#line 40778 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_table((yyloc), (yyvsp[0].table));
          }
#line 40786 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_view((yyloc), (yyvsp[0].table));
          }
#line 40794 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_master_status((yyloc));
          }
#line 40802 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "SHOW SLAVE STATUS", "SHOW REPLICA STATUS");
            (yyval.top_level_node) = NEW_PTN PT_show_replica_status((yyloc), (yyvsp[0].lex_cstr));
          }
#line 40812 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[0].spname));
          }
#line 40820 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_function((yyloc), (yyvsp[0].spname));
          }
#line 40828 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[0].spname));
          }
#line 40836 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_proc((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40844 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_func((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40852 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[0].spname));
          }
#line 40860 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_function_code((yyloc), (yyvsp[0].spname));
          }
#line 40868 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_event((yyloc), (yyvsp[0].spname));
          }
#line 40876 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_user((yyloc), (yyvsp[0].lex_user));
          }
#line 40884 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13899 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 40890 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13913 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 40896 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13914 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 40902 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13918 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 40908 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 40914 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 40920 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13924 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 40926 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13928 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 40932 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13929 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 40938 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13930 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 40944 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 40950 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 40956 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str); }
#line 40962 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13945 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 40968 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13946 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 40974 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 40980 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 40986 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13952 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 40992 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 41000 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 41008 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 41016 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 13989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::DEFAULT;
          }
#line 41024 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 13993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 41042 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 14009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].explain_format_type))
            {
              case Explain_format_type::DEFAULT:
              case Explain_format_type::TREE:
                (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
                break;
              case Explain_format_type::JSON:
                // Without hypergraph, we don't support JSON format. But in the
                // parser we don't know whether hypergraph optimizer is on. So
                // we defer raising the error here.
                (yyval.explain_format_type)= Explain_format_type::JSON_WITH_EXECUTE;
                break;
              default:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=TRADITIONAL with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
            }
          }
#line 41066 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].explain_format_type) == Explain_format_type::DEFAULT)
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
              (yyval.explain_format_type)= (yyvsp[0].explain_format_type);
          }
#line 41077 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 14038 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 41083 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 41092 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 14052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 41103 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14059 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41109 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41126 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14076 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41132 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14081 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41138 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41154 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 41166 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41182 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14119 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41188 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14124 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 41194 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14126 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 41200 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14128 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 41206 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14130 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 41212 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14132 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 41218 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41228 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14140 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 41234 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14142 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 41240 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14144 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 41246 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14146 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 41252 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14148 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 41258 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14150 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 41264 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14154 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 41270 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 41279 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14165 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41285 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 41296 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 41306 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 41316 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 14197 "sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->type|= REFRESH_SLAVE;
              Lex->set_replication_deprecated_syntax_used();
              push_deprecated_warn(YYTHD, "RESET SLAVE", "RESET REPLICA");
            }
#line 41326 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41335 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 14208 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_REPLICA; }
#line 41341 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14210 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
#line 41350 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 41370 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14234 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 41376 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14235 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 41382 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14239 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41388 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 41403 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 41413 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 14261 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41419 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 41427 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 41440 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 41453 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14299 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41459 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14300 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41465 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 14301 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 41471 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->query_block->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 41481 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 14336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 41504 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 41510 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 41516 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41522 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41528 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41534 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 14368 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 41540 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41546 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 41552 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 14378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 41558 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 14379 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 41564 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 41570 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 41576 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 14389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 41585 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 41594 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 14403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 41604 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 41613 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 14414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 41622 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 14421 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 41628 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 14422 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 41634 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 41643 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 14436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 41652 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 41661 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14448 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 41667 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 14449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 41673 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 41679 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 14454 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 41685 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 41691 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 41697 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 41703 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 41713 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 41723 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 14486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 41731 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 14492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 41737 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 14493 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 41743 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 41755 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 41776 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 14526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41796 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 41805 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 14552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 41815 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 41824 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 41833 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 14571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41844 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 14578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41855 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 14585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41866 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 14595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 41886 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 41892 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 41903 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 41919 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 14645 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 41925 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 14646 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 41931 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 14649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 41939 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 14653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 41947 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 14657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 41955 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 14661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 41963 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 14665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 41971 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 14669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 41979 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 41987 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 41995 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42001 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 14697 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42007 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14698 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length); }
#line 42013 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 14704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 42021 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 14708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 42029 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 14712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 42037 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = false; }
#line 42043 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = true; }
#line 42049 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42057 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42068 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 42076 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 42084 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 14762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42092 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 14770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42100 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42108 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42118 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42128 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42140 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42150 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 14814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42162 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 42168 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 14826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42199 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 42213 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42227 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42244 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 14898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42261 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42279 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 42287 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 42304 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 42310 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42322 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42333 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 42339 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42351 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42362 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 15004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42368 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 15005 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42374 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 15006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42380 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 15017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42389 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 15022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42398 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 15030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 42406 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 15034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
          }
#line 42420 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 15047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42429 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 15052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42438 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 15060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 42448 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 15654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 42456 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 15663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 42464 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2815:
#line 15667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 42472 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 15671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 42480 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 15675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 42491 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 15682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 42503 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 15690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 42515 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2820:
#line 15698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 42528 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 15710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 42536 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 15714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42545 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 15719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42554 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 42563 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 42572 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 42581 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42590 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 15746 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 42596 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 15747 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 42602 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 15752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 42610 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 15756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 42618 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 15763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 42628 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 15769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 42638 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 15777 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 42644 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 15783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 42655 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 15790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 42665 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 15799 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 42671 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 15800 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 42677 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 15806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 42685 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 15810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 42693 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 15818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 42701 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 15821 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 42707 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 15825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42713 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 15826 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 42719 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 15827 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 42725 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 15828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42731 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 15829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42737 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 15833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42743 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 15834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42749 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 15835 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42755 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 15836 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42761 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 15840 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 42767 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 15841 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42773 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 15842 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42779 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 15843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42785 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 15847 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 42791 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 15848 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 42797 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 15849 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 42803 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 15850 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42809 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 15851 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42815 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 15852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42821 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 15858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type) = NEW_PTN PT_set_scoped_system_variable(
                (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yyvsp[0].item));
          }
#line 42830 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 15867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_variable((yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yylsp[0]), (yyvsp[0].item));
          }
#line 42838 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 15871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 42846 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 15876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_system_variable(
                (yyvsp[-3].var_type), (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yyvsp[0].item));
          }
#line 42855 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 15881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 42863 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 15885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 42874 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 15892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 42882 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 15896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 42890 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 15903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42898 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 15907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Reject names prefixed by `GLOBAL.`, `LOCAL.`, or `SESSION.` --
              if one of those prefixes is there then we are parsing something
              like `GLOBAL.GLOBAL.foo` or `LOCAL.SESSION.bar` etc.
            */
            if (check_reserved_words((yyvsp[-2].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42915 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 15920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bipartite_name) = Bipartite_name{{STRING_WITH_LEN("default")}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42923 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 15927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42931 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 15931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // disallow "SELECT @@global.global.variable"
            if (check_reserved_words((yyvsp[-2].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42944 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 15943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 42952 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 15947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 42960 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 15954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 42968 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 15960 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 42974 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 15961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 42980 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 15966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 42988 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 15972 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 42994 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 15973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 43000 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 15977 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 43006 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 15978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 43012 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 15982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 43018 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 15983 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 43024 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 15984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 43030 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 15985 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 43036 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 15990 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 43042 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 15992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 43050 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 15996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 43058 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 16000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 43066 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 16004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 43074 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 16008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 43082 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 16017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 43097 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 16028 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43103 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 16030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43114 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 43143 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16077 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 43149 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 43155 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 43164 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 43170 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 43185 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16100 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43191 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43202 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 43211 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 43219 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 43228 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 43248 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"));
          }
#line 43256 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"));
          }
#line 43264 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43272 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)));
          }
#line 43280 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 43299 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 43318 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(RELOAD_KEYRING, EMPTY_CSTR);
          }
#line 43326 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 43334 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 43342 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43350 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43359 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43369 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43375 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43381 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43387 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43393 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16255 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 43399 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16256 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 43405 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16260 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 43411 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16261 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 43417 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16262 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 43423 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16263 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 43429 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16264 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 43435 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_if_exists = (yyvsp[-4].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list));
            MAKE_CMD(tmp);
          }
#line 43446 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->grant_if_exists = (yyvsp[-7].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            if (apply_privileges(YYTHD, *(yyvsp[-6].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-4].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-4].acl_type));
            lex->users_list= *(yyvsp[-1].user_list);
          }
#line 43467 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_if_exists = (yyvsp[-2].num);
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43477 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-4].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-4].acl_type));
            lex->users_list= *(yyvsp[-1].user_list);
            lex->ignore_unknown_user = (yyvsp[0].num);
          }
#line 43496 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_if_exists = (yyvsp[-8].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[-1].user_list);
          }
#line 43507 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->grant_if_exists = (yyvsp[-6].num);
            lex->ignore_unknown_user = (yyvsp[0].num);
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43521 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 43530 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43549 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43558 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43574 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43588 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16386 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 43594 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 43600 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 43606 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16389 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 43612 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 43622 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 43632 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 43643 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16421 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 43649 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16423 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43655 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43661 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16427 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43667 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16429 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43673 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 43679 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 43685 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 43691 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 43697 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 43703 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16441 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 43709 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 43715 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 43721 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 43727 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 43733 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 43739 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 43748 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16458 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 43754 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 43772 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 16474 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 43778 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 16476 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 43784 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 16478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 43790 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 16480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 43796 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 16482 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 43802 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 16484 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 43808 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 16486 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 43814 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 16488 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 43820 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 16490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 43826 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 16492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 43832 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 16494 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 43838 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 16496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 43844 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 16498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 43850 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 16500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 43856 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 16504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43862 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 16505 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43868 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 16520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 43882 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 16530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 43896 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2999:
#line 16540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 43910 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3000:
#line 16553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_query_block()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43928 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3001:
#line 16567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43944 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3002:
#line 16579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43960 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 16591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 43976 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 16603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 43994 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 16620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44004 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 16626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44014 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 16635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44024 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 16641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44034 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 16649 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44040 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 16650 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44046 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 16654 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44052 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 16655 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44058 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 16660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-2].ulong_num);
            m->init_registration= true;
            m->requires_registration= true;
            (yyval.lex_mfa) = m;
          }
#line 44072 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 16670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-1].ulong_num);
            m->unregister= true;
            (yyval.lex_mfa) = m;
          }
#line 44085 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 16679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-6].ulong_num);
            m->finish_registration= true;
            m->requires_registration= true;
            m->challenge_response= to_lex_cstring((yyvsp[0].lexer.lex_str));
            (yyval.lex_mfa) = m;
          }
#line 44100 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 16693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 44111 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 16700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-2].lex_user);
            /* set $3 as first factor auth method */
            (yyvsp[0].lex_mfa)->nth_factor = 1;
            (yyvsp[0].lex_mfa)->passwordless = false;
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            /* set $2 as second factor auth method */
            (yyvsp[-1].lex_mfa)->nth_factor = 2;
            (yyvsp[-1].lex_mfa)->passwordless = true;
            if ((yyval.lex_user)->mfa_list.push_back((yyvsp[-1].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user)->with_initial_auth = true;
          }
#line 44129 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 16714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 44139 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 16722 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_mfas) = {}; }
#line 44145 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 16724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = 2;
            (yyval.lex_mfas) = {(yyvsp[0].lex_mfa), nullptr};
          }
#line 44154 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 16729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].lex_mfa)->nth_factor = 2;
            (yyvsp[0].lex_mfa)->nth_factor = 3;
            (yyval.lex_mfas) = {(yyvsp[-2].lex_mfa), (yyvsp[0].lex_mfa)};
          }
#line 44164 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3028:
#line 16747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44178 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3029:
#line 16760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = EMPTY_CSTR;
            m->has_password_generator = true;
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password = true;
          }
#line 44193 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3030:
#line 16774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->auth = EMPTY_CSTR;
            m->uses_identified_by_clause = false;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 44208 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3031:
#line 16788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_authentication_string_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 44223 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3032:
#line 16802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44239 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3033:
#line 16817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-3].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            m->has_password_generator = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44255 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3034:
#line 16832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44265 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3035:
#line 16838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44275 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 16844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44285 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 16855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44298 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3038:
#line 16866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44311 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3039:
#line 16875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44322 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 16882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44333 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 16891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
          }
#line 44346 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 16900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            (yyvsp[-1].lex_user)->discard_old_password = false;
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 44357 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 16907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44368 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 16914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44379 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 16922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password= false;
            (yyvsp[-2].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 44390 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 16929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password = (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 44400 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 16935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 44412 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 16943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            } else if ((yyvsp[-4].ulong_num) > (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_INVALID_ORDER, MYF(0), (yyvsp[-1].ulong_num), (yyvsp[-4].ulong_num));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->add_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 44433 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 16960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 44445 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 16968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->modify_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 44463 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 16982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor = (yyvsp[0].ulong_num);
            m->drop_factor = true;
            if ((yyvsp[-2].lex_user)->add_mfa_identifications(m))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-2].lex_user);
           }
#line 44478 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 16993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].ulong_num) == (yyvsp[0].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            LEX_MFA *m1 = NEW_PTN LEX_MFA;
            if (m1 == nullptr)
              MYSQL_YYABORT;  // OOM
            m1->nth_factor = (yyvsp[-2].ulong_num);
            m1->drop_factor = true;
            LEX_MFA *m2 = NEW_PTN LEX_MFA;
            if (m2 == nullptr)
              MYSQL_YYABORT;  // OOM
            m2->nth_factor = (yyvsp[0].ulong_num);
            m2->drop_factor = true;
            if ((yyvsp[-4].lex_user)->add_mfa_identifications(m1, m2))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-4].lex_user);
           }
#line 44502 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3053:
#line 17016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "2") == 0) {
              (yyval.ulong_num) = 2;
            } else if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "3") == 0) {
              (yyval.ulong_num) = 3;
            } else {
               my_error(ER_WRONG_VALUE, MYF(0), "nth factor", (yyvsp[-1].lexer.lex_str).str);
               MYSQL_YYABORT;
            }
          }
#line 44517 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3054:
#line 17030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44526 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3055:
#line 17035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44535 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3056:
#line 17043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 44544 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3057:
#line 17048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44553 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 17055 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 44559 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 17056 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 44565 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 17061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44575 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 17067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44585 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 17077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 44593 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3064:
#line 17081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 44601 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3065:
#line 17085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 44609 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 17089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 44617 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 17095 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44623 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3068:
#line 17097 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 44629 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 17101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44635 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 17102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44641 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 17106 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44647 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 17108 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44655 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 17112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44664 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 17117 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44670 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 17119 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 44676 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 17123 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 44682 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 17125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 44691 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 17132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 44701 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 17137 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44707 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 17141 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44713 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 17142 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44719 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 17147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44725 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 17148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44731 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 17149 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44737 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 17154 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44743 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 17155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44749 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3087:
#line 17156 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44755 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3088:
#line 17160 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44761 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 17161 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44767 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 17166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 44780 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 17178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 44793 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 17188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44803 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 17197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44813 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 17206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44823 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3095:
#line 17219 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 44829 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3096:
#line 17220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 44835 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3097:
#line 17221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 44841 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 17234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_expression_body));
          }
#line 44849 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 17240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 44855 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 17241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 44861 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 17242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 44867 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3104:
#line 17243 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 44873 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3105:
#line 17244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 44879 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3106:
#line 17245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 44885 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3107:
#line 17246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 44896 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 17252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 44902 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 17263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 44913 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3110:
#line 17273 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44919 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3111:
#line 17275 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44925 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3112:
#line 17277 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44931 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3126:
#line 17310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 44946 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3127:
#line 17324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 44954 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3128:
#line 17337 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44960 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3129:
#line 17339 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44966 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3130:
#line 17341 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44972 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3131:
#line 17346 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 44978 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3132:
#line 17351 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 44984 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3133:
#line 17353 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 44990 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3134:
#line 17355 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 44996 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3135:
#line 17360 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 45002 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3136:
#line 17362 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 45008 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3137:
#line 17364 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 45014 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3138:
#line 17369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 45054 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3140:
#line 17409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     Query_block::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            Query_block * const save_query_block= Select;
            save_query_block->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE_VIEW((yyvsp[-1].query_expression_body));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_query_block->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_query_block.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_query_block.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_query_block);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 45106 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3141:
#line 17459 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 45112 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3142:
#line 17460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45118 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3143:
#line 17461 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45124 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3144:
#line 17462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 45130 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3145:
#line 17473 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 45136 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3146:
#line 17475 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 45142 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3147:
#line 17480 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 45151 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3148:
#line 17486 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 45160 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3149:
#line 17504 "sql_yacc.yy" /* yacc.c:1646  */
    {                               /* $12 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-10]).cpp.start;
            lex->create_info->options= (yyvsp[-9].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 45197 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3150:
#line 17537 "sql_yacc.yy" /* yacc.c:1646  */
    {                               /* $14 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 45228 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3151:
#line 17580 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $9 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              if((yyvsp[-5].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-6]).cpp.start;
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45259 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3152:
#line 17613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              if((yyvsp[-5].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-6]).cpp.start;
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45290 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3153:
#line 17646 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-3]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }


            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[-2].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45319 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3154:
#line 17672 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $8 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 45327 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3155:
#line 17678 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45372 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3156:
#line 17719 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45384 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 17727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 45443 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 17787 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$4*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 45468 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3159:
#line 17808 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45476 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3160:
#line 17813 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$9*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45488 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 17821 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$11*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45500 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 17829 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$13*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 45513 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 17843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45522 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3164:
#line 17848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45531 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 17853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 45540 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 17858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45549 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 17863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 45558 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 17868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 45567 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3169:
#line 17875 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 45573 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3170:
#line 17876 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 45579 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3171:
#line 17880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 45592 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3172:
#line 17889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 45606 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3173:
#line 17899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 45625 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3174:
#line 17916 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45631 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3175:
#line 17917 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45637 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3176:
#line 17921 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45643 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3177:
#line 17922 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 45649 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3178:
#line 17923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 45655 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3179:
#line 17927 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45661 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3180:
#line 17928 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 45667 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3181:
#line 17933 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45673 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3182:
#line 17935 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 45679 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 17937 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 45685 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 17942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 45695 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 17948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 45705 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 17957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 45715 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 17963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 45725 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 17972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45735 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 17978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45745 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 17987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 45758 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 18005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 45769 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 18015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->first_factor_auth_info.auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-6].lex_user)->first_factor_auth_info.uses_identified_by_clause = true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 45790 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 18035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 45798 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 18039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 45806 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 18046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 45814 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 18050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 45822 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 18054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 45830 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 18060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 45836 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 18061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 45842 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 18066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 45853 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 18072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 45859 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 18077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 45870 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 18084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 45881 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 18094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            assert((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 45892 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 18101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            assert((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            assert((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 45906 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 18113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 45912 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 18114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 45918 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 18118 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 45924 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 18120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 45933 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 18127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 45939 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 18129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 45948 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 18134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 45957 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 18141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 45963 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 18142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 45969 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 18148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg,
                  JsonDocumentDefaultDepthHandler)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 45987 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 45991 "/var/lib/pb2/sb_1-8441140-1663085893.78/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
